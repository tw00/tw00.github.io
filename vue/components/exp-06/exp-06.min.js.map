{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/css-loader/dist/runtime/api.js","webpack:///./node_modules/@vue/cli-service/lib/commands/build/setPublicPath.js","webpack:///./node_modules/@vue/web-component-wrapper/dist/vue-wc-wrapper.js","webpack:///./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack:///./src/experiments/Experiment06.vue?1fe0","webpack:///src/experiments/Experiment06.vue","webpack:///./src/experiments/Experiment06.vue?c60c","webpack:///./src/experiments/Experiment06.vue","webpack:///./node_modules/@vue/cli-service/lib/commands/build/entry-wc.js","webpack:///./node_modules/@soda/get-current-script/index.js","webpack:///external \"Vue\"","webpack:///./node_modules/matter-js/build/matter.js","webpack:///(webpack)/buildin/global.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","cssWithMappingToString","item","useSourceMap","content","cssMapping","btoa","sourceMapping","toComment","sourceURLs","sources","map","source","concat","sourceRoot","join","sourceMap","base64","unescape","encodeURIComponent","JSON","stringify","data","list","toString","this","mediaQuery","dedupe","alreadyImportedModules","length","id","_i","push","window","currentScript","document","NEED_CURRENTSCRIPT_POLYFILL","getCurrentScript","src","match","camelizeRE","camelize","str","replace","_","toUpperCase","hyphenateRE","hyphenate","toLowerCase","getInitialProps","propsList","res","forEach","undefined","injectHook","options","hook","unshift","callHooks","vm","hooks","$options","createCustomEvent","args","CustomEvent","bubbles","cancelable","detail","isBoolean","val","test","String","isNumber","convertAttributeValue","type","parsed","parseFloat","isNaN","toVNodes","h","children","toVNode","node","nodeType","trim","attrs","getAttributes","domProps","innerHTML","slot","tagName","attributes","attr","nodeName","nodeValue","wrap","Vue","Component","isAsync","cid","hyphenatedPropsList","camelizedPropsList","camelizedPropsMap","isInitialized","initialize","Array","isArray","props","keys","originalPropsAsObject","reduce","emit","$emit","$root","customElement","dispatchEvent","CustomElement","_wrapper","newVal","configurable","syncAttribute","el","camelized","hasAttribute","getAttribute","HTMLElement","super","attachShadow","wrapper","shadowRoot","slotChildren","ref","observer","MutationObserver","mutations","hasChildrenChange","target","attributeName","freeze","$createElement","childNodes","observe","childList","subtree","characterData","$refs","inner","_isMounted","vueComponent","syncInitialAttributes","then","resolved","default","$mount","appendChild","$el","normalizeComponent","scriptExports","render","staticRenderFns","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","_compiled","functional","_scopeId","context","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","_registeredComponents","add","_ssrRegister","_injectStyles","originalRender","existing","beforeCreate","_vm","_h","_c","_self","staticClass","staticStyle","ex","makeWorld","console","log","methods","Engine","engine","world","Render","element","elem","width","height","showAngleIndicator","showCollisions","run","runner","Runner","scale","World","Composites","car","ropeA","stack","chain","mouse","Mouse","canvas","mouseConstraint","lookAt","min","max","stop","component","customElements","define","root","factory","self","descriptor","getOwnPropertyDescriptor","Error","err","pageSource","inlineScriptSourceRegExp","inlineScriptSource","ieStackRegExp","ffStackRegExp","stackDetails","exec","scriptLocation","line","currentLocation","location","href","hash","scripts","getElementsByTagName","documentElement","outerHTML","RegExp","readyState","Common","_nextId","_seed","_nowStartTime","Date","_warnedOnce","_decomp","extend","obj","deep","argsStart","deepClone","arguments","prop","constructor","clone","values","path","begin","end","split","slice","set","parts","shuffle","array","j","Math","floor","random","temp","choose","choices","isElement","isFunction","isPlainObject","isString","clamp","sign","now","performance","webkitNow","_seededRandom","colorToNumber","colorString","charAt","parseInt","logLevel","apply","info","warn","warnOnce","message","deprecated","warning","nextId","indexOf","haystack","needle","func","mapped","topologicalSort","graph","result","visited","_topologicalSort","neighbors","neighbor","funcs","_chained","lastResult","chainPathBefore","base","chainPathAfter","setDecomp","decomp","getDecomp","global","e","Bounds","vertices","bounds","x","y","update","velocity","Infinity","vertex","contains","point","overlaps","boundsA","boundsB","translate","vector","shift","position","deltaX","deltaY","Vector","magnitude","sqrt","magnitudeSquared","rotate","angle","output","cos","sin","rotateAbout","normalise","dot","vectorA","vectorB","cross","cross3","vectorC","sub","mult","scalar","div","perp","negate","neg","atan2","_temp","Vertices","points","body","index","isInternal","fromPath","pathPattern","centre","area","mean","average","signed","abs","inertia","mass","numerator","denominator","v","verticesLength","translateX","translateY","dx","dy","pointX","pointY","nextVertex","scaleX","scaleY","delta","chamfer","radius","quality","qualityMin","qualityMax","newVertices","prevVertex","currentRadius","prevNormal","nextNormal","diagonalRadius","pow","radiusVector","midNormal","scaledVertex","precision","alpha","acos","theta","clockwiseSort","sort","vertexA","vertexB","isConvex","k","z","flag","hull","upper","lower","pop","Events","on","eventNames","callback","names","events","off","callbacks","newCallbacks","trigger","event","eventClone","Composite","Body","isModified","bodies","constraints","composites","label","plugin","cache","allBodies","allConstraints","allComposites","setModified","composite","updateParents","updateChildren","childComposite","objects","addBody","addConstraint","addComposite","constraint","remove","removeBody","removeConstraint","removeComposite","compositeA","compositeB","removeCompositeAt","splice","removeBodyAt","removeConstraintAt","clear","keepStatic","filter","isStatic","move","rebase","translation","recursive","rotation","setPosition","Sleeping","Axes","_inertiaScale","_nextCollidingGroupId","_nextNonCollidingGroupId","_nextCategory","defaults","force","torque","positionImpulse","constraintImpulse","totalContacts","speed","angularSpeed","angularVelocity","isSensor","isSleeping","motion","sleepThreshold","density","restitution","friction","frictionStatic","frictionAir","collisionFilter","category","mask","group","slop","timeScale","visible","opacity","strokeStyle","fillStyle","lineWidth","sprite","xScale","yScale","xOffset","yOffset","circleRadius","positionPrev","anglePrev","axes","_original","_initProperties","nextGroup","isNonColliding","nextCategory","defaultFillStyle","defaultStrokeStyle","defaultLineWidth","settings","setStatic","setMass","setDensity","setInertia","setVertices","setAngle","setVelocity","setAngularVelocity","setParts","setCentre","part","inverseMass","inverseInertia","moment","fromVertices","autoHull","hullCentre","total","_totalProperties","relative","totalArea","totalInertia","deltaTime","correction","deltaTimeSquared","velocityPrevX","velocityPrevY","applyForce","offset","properties","_motionWakeThreshold","_motionSleepThreshold","_minBias","timeFactor","minMotion","maxMotion","sleepCounter","afterCollisions","pairs","pair","isActive","collision","bodyA","bodyB","sleepingBody","movingBody","wasSleeping","Collision","Pair","_supports","_overlapAB","overlap","axis","_overlapBA","collided","parentA","parentB","depth","normal","tangent","penetration","supports","collides","_overlapAxes","minOverlap","table","minAxis","minAxisX","minAxisY","supportsB","_findSupports","supportCount","supportsA","verticesA","verticesB","overlapAB","overlapBA","verticesALength","verticesBLength","verticesAX","verticesAY","verticesBX","verticesBY","axesLength","overlapMin","Number","MAX_VALUE","overlapAxisNumber","axisX","axisY","minA","minB","maxA","maxB","_projectToAxis","projection","direction","vertexC","distance","bodyAPositionX","bodyAPositionY","normalX","normalY","nearestDistance","Contact","timestamp","contacts","activeContacts","separation","confirmedActive","timeCreated","timeUpdated","parentAVerticesLength","support","contactId","contact","setActive","Constraint","_warming","_torqueDampen","_minLength","pointA","pointB","initialPointA","initialPointB","stiffness","damping","angularStiffness","angleA","angleB","anchors","preSolveAll","impulse","solveAll","fixedA","fixedB","solve","pointAWorld","pointBWorld","currentLength","share","normalVelocity","relativeVelocity","difference","massTotal","inertiaTotal","resistanceTotal","zero","postSolveAll","gradient","toFixed","xx","Bodies","rectangle","trapezoid","slope","verticesPath","roof","x1","x2","x3","circle","maxSides","sides","ceil","polygon","PI","yy","vertexSets","flagInternal","removeCollinear","minimumArea","removeDuplicatePoints","canDecomp","isConcave","Boolean","quickDecomp","concave","makeCCW","removeCollinearPoints","decomposed","chunk","chunkVertices","coincident_max_dist","partA","partB","pav","pbv","da","db","absolute","mousedownPosition","mouseupPosition","wheelDelta","button","pixelRatio","sourceEvents","mousemove","mousedown","mouseup","mousewheel","_getRelativeMousePosition","touches","changedTouches","preventDefault","setElement","addEventListener","clearSourceEvents","setOffset","setScale","elementBounds","getBoundingClientRect","rootNode","parentNode","scrollX","pageXOffset","scrollLeft","scrollY","pageYOffset","scrollTop","pageX","left","pageY","top","clientWidth","clientHeight","Detector","setBodies","detector","collisions","bodiesLength","canCollide","_compareBoundsX","boundXMax","boundYMax","boundYMin","bodyAStatic","partsALength","partsASingle","partsBLength","partsAStart","partsBStart","filterA","filterB","Plugin","_registry","register","isPlugin","registered","pluginVersion","versionParse","version","number","registeredVersion","resolve","dependency","dependencyParse","range","install","isUsed","used","isFor","for","versionSatisfies","use","plugins","uses","dependencies","sortedDependencies","status","_warned","tracked","parsedBase","pattern","major","minor","patch","isRange","operator","prerelease","_requestAnimationFrame","_cancelAnimationFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","setTimeout","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","msCancelAnimationFrame","_goodFps","_goodDelta","controller","frameRequestId","timing","historySize","deltaHistory","lastTime","lastTimestamp","lastElapsed","timestampElapsed","timestampElapsedHistory","engineDeltaHistory","engineElapsedHistory","elapsedHistory","background","wireframeBackground","hasBounds","enabled","wireframes","showSleeping","showDebug","showStats","showPerformance","showBounds","showVelocity","showSeparations","showAxes","showPositions","showIds","showVertexNumbers","showConvexHulls","showInternalEdges","showMousePosition","_createCanvas","getContext","textures","showBroadphase","setPixelRatio","loop","time","_updateTiming","stats","_getPixelRatio","setAttribute","style","padding","center","viewHeight","viewWidth","outerRatio","innerRatio","startViewTransform","boundsWidth","boundsHeight","boundsScaleX","boundsScaleY","setTransform","endViewTransform","startTime","currentBackground","_applyBackground","globalCompositeOperation","fillRect","enableSleeping","bodyConvexHulls","bodyWireframes","bodyBounds","bodyAxes","bodyPositions","bodyVelocity","bodyIds","separations","vertexNumbers","mousePosition","sections","font","textBaseline","textAlign","section","fillText","lastEngineDelta","lastDelta","deltaMean","_mean","elapsedMean","engineDeltaMean","engineElapsedMean","timestampElapsedMean","rateMean","fps","graphHeight","gap","round","count","indicator","plotY","beginPath","moveTo","lineTo","stroke","start","arc","closePath","coils","fill","globalAlpha","texture","_getTexture","drawImage","rect","normalPosX","normalPosY","inspector","selected","setLineDash","selectStart","selectBounds","createElement","oncontextmenu","onselectstart","devicePixelRatio","backingStorePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","imagePath","image","Image","cssBackground","backgroundSize","normalImpulse","tangentImpulse","Resolver","Pairs","positionIterations","velocityIterations","constraintIterations","gravity","grid","buckets","broadphase","metrics","_bodiesApplyGravity","_bodiesUpdate","collisionStart","preSolvePosition","solvePosition","postSolvePosition","preSolveVelocity","solveVelocity","collisionActive","collisionEnd","_bodiesClearForces","merge","engineA","engineB","gravityScale","worldBounds","_restingThresh","_restingThreshTangent","_positionDampen","_positionWarming","_frictionNormalMultiplier","activeCount","pairsLength","contactShare","positionDampen","positionWarming","verticesTranslate","boundsUpdate","positionImpulseX","positionImpulseY","contactsLength","contactVertex","impulseX","impulseY","maxFriction","timeScaleSquared","restingThresh","frictionNormalMultiplier","restingThreshTangent","NumberMaxValue","bodyAVelocity","bodyBVelocity","tangentX","tangentY","inverseMassTotal","offsetAX","offsetAY","offsetBX","offsetBY","velocityPointAX","velocityPointAY","velocityPointBX","velocityPointBY","relativeVelocityX","relativeVelocityY","tangentVelocity","normalOverlap","normalForce","frictionLimit","oAcN","oBcN","contactNormalImpulse","contactTangentImpulse","pairIndex","pairsList","pairsListLength","pairsTable","collisionsLength","removePairIndex","Matter","Grid","MouseConstraint","Query","SAT","Svg","before","after","columns","rows","columnGap","rowGap","lastBody","row","maxHeight","column","bodyHeight","bodyWidth","xOffsetA","yOffsetA","xOffsetB","yOffsetB","bodyAHeight","bodyAWidth","bodyBHeight","bodyBWidth","mesh","crossBrace","col","bodyC","pyramid","actualRows","lastBodyWidth","newtonsCradle","size","wheelSize","wheelBase","wheelAOffset","wheelBOffset","wheelYOffset","wheelA","wheelB","axelA","axelB","softBody","particleRadius","particleOptions","constraintOptions","bucketWidth","bucketHeight","forceUpdate","bucket","bucketId","gridChanged","newRegion","_getRegion","region","union","_regionUnion","startCol","endCol","startRow","endRow","_getBucketId","isInsideNewRegion","isInsideOldRegion","_bucketRemoveBody","_createBucket","_bucketAddBody","_createActivePairsList","regionA","regionB","_createRegion","gridPairs","pairId","bucketLength","pairKeys","pairKeysLength","_triggerEvents","mouseEvents","ray","startPoint","endPoint","rayWidth","rayAngle","rayLength","rayX","rayY","outside","_frameTimeout","clearTimeout","deltaSampleSize","counterTimestamp","frameCounter","timePrev","timeScalePrev","isFixed","deltaMin","deltaMax","tick","pathToVertices","sampleLength","il","segment","segments","segmentsQueue","lastSegment","lastPoint","segmentIndex","lx","ly","addPoint","px","py","pathSegType","isRelative","addSegmentPoint","segType","pathSegTypeAsLetter","_svgPathToAbsolute","getTotalLength","pathSegList","numberOfItems","getItem","getPathSegAtLength","getPointAtLength","x0","y0","y1","y2","segs","len","seg","replaceItem","createSVGPathSegMovetoAbs","createSVGPathSegLinetoAbs","createSVGPathSegLinetoHorizontalAbs","createSVGPathSegLinetoVerticalAbs","createSVGPathSegCurvetoCubicAbs","createSVGPathSegCurvetoCubicSmoothAbs","createSVGPathSegCurvetoQuadraticAbs","createSVGPathSegCurvetoQuadraticSmoothAbs","createSVGPathSegArcAbs","r1","r2","largeArcFlag","sweepFlag","g","Function"],"mappings":"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","file":"exp-06.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"5a74\");\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || '').concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n  return \"/*# \".concat(data, \" */\");\n}","// This file is imported into lib/wc client bundles.\n\nif (typeof window !== 'undefined') {\n  var currentScript = window.document.currentScript\n  if (process.env.NEED_CURRENTSCRIPT_POLYFILL) {\n    var getCurrentScript = require('@soda/get-current-script')\n    currentScript = getCurrentScript()\n\n    // for backward compatibility, because previously we directly included the polyfill\n    if (!('currentScript' in document)) {\n      Object.defineProperty(document, 'currentScript', { get: getCurrentScript })\n    }\n  }\n\n  var src = currentScript && currentScript.src.match(/(.+\\/)[^/]+\\.js(\\?.*)?$/)\n  if (src) {\n    __webpack_public_path__ = src[1] // eslint-disable-line\n  }\n}\n\n// Indicate to webpack that this file can be concatenated\nexport default null\n","const camelizeRE = /-(\\w)/g;\nconst camelize = str => {\n  return str.replace(camelizeRE, (_, c) => c ? c.toUpperCase() : '')\n};\n\nconst hyphenateRE = /\\B([A-Z])/g;\nconst hyphenate = str => {\n  return str.replace(hyphenateRE, '-$1').toLowerCase()\n};\n\nfunction getInitialProps (propsList) {\n  const res = {};\n  propsList.forEach(key => {\n    res[key] = undefined;\n  });\n  return res\n}\n\nfunction injectHook (options, key, hook) {\n  options[key] = [].concat(options[key] || []);\n  options[key].unshift(hook);\n}\n\nfunction callHooks (vm, hook) {\n  if (vm) {\n    const hooks = vm.$options[hook] || [];\n    hooks.forEach(hook => {\n      hook.call(vm);\n    });\n  }\n}\n\nfunction createCustomEvent (name, args) {\n  return new CustomEvent(name, {\n    bubbles: false,\n    cancelable: false,\n    detail: args\n  })\n}\n\nconst isBoolean = val => /function Boolean/.test(String(val));\nconst isNumber = val => /function Number/.test(String(val));\n\nfunction convertAttributeValue (value, name, { type } = {}) {\n  if (isBoolean(type)) {\n    if (value === 'true' || value === 'false') {\n      return value === 'true'\n    }\n    if (value === '' || value === name) {\n      return true\n    }\n    return value != null\n  } else if (isNumber(type)) {\n    const parsed = parseFloat(value, 10);\n    return isNaN(parsed) ? value : parsed\n  } else {\n    return value\n  }\n}\n\nfunction toVNodes (h, children) {\n  const res = [];\n  for (let i = 0, l = children.length; i < l; i++) {\n    res.push(toVNode(h, children[i]));\n  }\n  return res\n}\n\nfunction toVNode (h, node) {\n  if (node.nodeType === 3) {\n    return node.data.trim() ? node.data : null\n  } else if (node.nodeType === 1) {\n    const data = {\n      attrs: getAttributes(node),\n      domProps: {\n        innerHTML: node.innerHTML\n      }\n    };\n    if (data.attrs.slot) {\n      data.slot = data.attrs.slot;\n      delete data.attrs.slot;\n    }\n    return h(node.tagName, data)\n  } else {\n    return null\n  }\n}\n\nfunction getAttributes (node) {\n  const res = {};\n  for (let i = 0, l = node.attributes.length; i < l; i++) {\n    const attr = node.attributes[i];\n    res[attr.nodeName] = attr.nodeValue;\n  }\n  return res\n}\n\nfunction wrap (Vue, Component) {\n  const isAsync = typeof Component === 'function' && !Component.cid;\n  let isInitialized = false;\n  let hyphenatedPropsList;\n  let camelizedPropsList;\n  let camelizedPropsMap;\n\n  function initialize (Component) {\n    if (isInitialized) return\n\n    const options = typeof Component === 'function'\n      ? Component.options\n      : Component;\n\n    // extract props info\n    const propsList = Array.isArray(options.props)\n      ? options.props\n      : Object.keys(options.props || {});\n    hyphenatedPropsList = propsList.map(hyphenate);\n    camelizedPropsList = propsList.map(camelize);\n    const originalPropsAsObject = Array.isArray(options.props) ? {} : options.props || {};\n    camelizedPropsMap = camelizedPropsList.reduce((map, key, i) => {\n      map[key] = originalPropsAsObject[propsList[i]];\n      return map\n    }, {});\n\n    // proxy $emit to native DOM events\n    injectHook(options, 'beforeCreate', function () {\n      const emit = this.$emit;\n      this.$emit = (name, ...args) => {\n        this.$root.$options.customElement.dispatchEvent(createCustomEvent(name, args));\n        return emit.call(this, name, ...args)\n      };\n    });\n\n    injectHook(options, 'created', function () {\n      // sync default props values to wrapper on created\n      camelizedPropsList.forEach(key => {\n        this.$root.props[key] = this[key];\n      });\n    });\n\n    // proxy props as Element properties\n    camelizedPropsList.forEach(key => {\n      Object.defineProperty(CustomElement.prototype, key, {\n        get () {\n          return this._wrapper.props[key]\n        },\n        set (newVal) {\n          this._wrapper.props[key] = newVal;\n        },\n        enumerable: false,\n        configurable: true\n      });\n    });\n\n    isInitialized = true;\n  }\n\n  function syncAttribute (el, key) {\n    const camelized = camelize(key);\n    const value = el.hasAttribute(key) ? el.getAttribute(key) : undefined;\n    el._wrapper.props[camelized] = convertAttributeValue(\n      value,\n      key,\n      camelizedPropsMap[camelized]\n    );\n  }\n\n  class CustomElement extends HTMLElement {\n    constructor () {\n      super();\n      this.attachShadow({ mode: 'open' });\n\n      const wrapper = this._wrapper = new Vue({\n        name: 'shadow-root',\n        customElement: this,\n        shadowRoot: this.shadowRoot,\n        data () {\n          return {\n            props: {},\n            slotChildren: []\n          }\n        },\n        render (h) {\n          return h(Component, {\n            ref: 'inner',\n            props: this.props\n          }, this.slotChildren)\n        }\n      });\n\n      // Use MutationObserver to react to future attribute & slot content change\n      const observer = new MutationObserver(mutations => {\n        let hasChildrenChange = false;\n        for (let i = 0; i < mutations.length; i++) {\n          const m = mutations[i];\n          if (isInitialized && m.type === 'attributes' && m.target === this) {\n            syncAttribute(this, m.attributeName);\n          } else {\n            hasChildrenChange = true;\n          }\n        }\n        if (hasChildrenChange) {\n          wrapper.slotChildren = Object.freeze(toVNodes(\n            wrapper.$createElement,\n            this.childNodes\n          ));\n        }\n      });\n      observer.observe(this, {\n        childList: true,\n        subtree: true,\n        characterData: true,\n        attributes: true\n      });\n    }\n\n    get vueComponent () {\n      return this._wrapper.$refs.inner\n    }\n\n    connectedCallback () {\n      const wrapper = this._wrapper;\n      if (!wrapper._isMounted) {\n        // initialize attributes\n        const syncInitialAttributes = () => {\n          wrapper.props = getInitialProps(camelizedPropsList);\n          hyphenatedPropsList.forEach(key => {\n            syncAttribute(this, key);\n          });\n        };\n\n        if (isInitialized) {\n          syncInitialAttributes();\n        } else {\n          // async & unresolved\n          Component().then(resolved => {\n            if (resolved.__esModule || resolved[Symbol.toStringTag] === 'Module') {\n              resolved = resolved.default;\n            }\n            initialize(resolved);\n            syncInitialAttributes();\n          });\n        }\n        // initialize children\n        wrapper.slotChildren = Object.freeze(toVNodes(\n          wrapper.$createElement,\n          this.childNodes\n        ));\n        wrapper.$mount();\n        this.shadowRoot.appendChild(wrapper.$el);\n      } else {\n        callHooks(this.vueComponent, 'activated');\n      }\n    }\n\n    disconnectedCallback () {\n      callHooks(this.vueComponent, 'deactivated');\n    }\n  }\n\n  if (!isAsync) {\n    initialize(Component);\n  }\n\n  return CustomElement\n}\n\nexport default wrap;\n","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () {\n        injectStyles.call(\n          this,\n          (options.functional ? this.parent : this).$root.$options.shadowRoot\n        )\n      }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functional component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"home\"},[_c('div',{ref:\"elem\",staticStyle:{\"margin\":\"0 auto\"},attrs:{\"id\":\"render-target\"}})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"home\">\n    <div ref=\"elem\" id=\"render-target\" style=\"margin: 0 auto;\"></div>\n  </div>\n</template>\n\n<script>\nimport * as Matter from 'matter-js'\n\nexport default {\n  mounted() {\n    let ex = this.makeWorld();\n    console.log(ex);\n  },\n  methods: {\n    makeWorld() {\n      let Engine = Matter.Engine,\n          Render = Matter.Render,\n          Runner = Matter.Runner,\n          Composites = Matter.Composites,\n          MouseConstraint = Matter.MouseConstraint,\n          Mouse = Matter.Mouse,\n          World = Matter.World,\n          Bodies = Matter.Bodies;\n\n      // create engine\n      let engine = Engine.create();\n      let world = engine.world;\n\n      // create renderer\n      let render = Render.create({\n        element: this.$refs.elem, // document.getElementById('render-target'),\n        engine: engine,\n        options: {\n          width: 800,\n          height: 300,\n          showAngleIndicator: true,\n          showCollisions: true\n        }\n      });\n\n      Render.run(render);\n\n      // create runner\n      var runner = Runner.create();\n      Runner.run(runner, engine);\n\n      // World.add(world, [\n      //     // walls\n      //     Bodies.rectangle(400, 0, 800, 50, { isStatic: true }),\n      //     Bodies.rectangle(400, 600, 800, 50, { isStatic: true }),\n      //     Bodies.rectangle(800, 300, 50, 600, { isStatic: true }),\n      //     Bodies.rectangle(0, 300, 50, 600, { isStatic: true })\n      // ]);\n\n      // var scale = 0.9;\n      // World.add(world, Composites.car(150, 100, 150 * scale, 30 * scale, 30 * scale));\n\n      let scale = 0.8;\n      World.add(world, Composites.car(350, 300, 150 * scale, 30 * scale, 30 * scale));\n\n      var ropeA = Composites.stack(100, 50, 8, 1, 10, 10, function(x, y) {\n          return Bodies.rectangle(x, y, 50, 20 );\n      });\n      Composites.chain(ropeA, 0.5, 0, -0.5, 0, { stiffness: 0.8, length: 2, render: { type: 'line' } });\n      // Composites.add(ropeA, Constraint.create({\n      //     bodyB: ropeA.bodies[0],\n      //     pointB: { x: -25, y: 0 },\n      //     pointA: { x: ropeA.bodies[0].position.x, y: ropeA.bodies[0].position.y },\n      //     stiffness: 0.5\n      // }));\n      World.add(world, [ ropeA ]);\n\n      World.add(world, [\n        Bodies.rectangle(200, 150, 400, 20, { isStatic: true, angle: Math.PI * 0.06 }),\n        Bodies.rectangle(500, 350, 650, 20, { isStatic: true, angle: -Math.PI * 0.06 }),\n        Bodies.rectangle(300, 560, 600, 20, { isStatic: true, angle: Math.PI * 0.04 })\n      ]);\n\n      // add mouse control\n      var mouse = Mouse.create(render.canvas),\n        mouseConstraint = MouseConstraint.create(engine, {\n          mouse: mouse,\n          constraint: {\n            stiffness: 0.2,\n            render: {\n              visible: false\n            }\n          }\n        });\n\n      World.add(world, mouseConstraint);\n\n      // keep the mouse in sync with rendering\n      render.mouse = mouse;\n\n      // fit the render viewport to the scene\n      Render.lookAt(render, {\n        min: { x: 0, y: 0 },\n        max: { x: 800, y: 600 }\n      });\n\n      // context for MatterTools.Demo\n      return {\n        engine: engine,\n        runner: runner,\n        render: render,\n        canvas: render.canvas,\n        stop: function() {\n          Matter.Render.stop(render);\n          Matter.Runner.stop(runner);\n        }\n      };\n    },\n  },\n}\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/@vue/cli-plugin-babel/node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Experiment06.vue?vue&type=script&lang=js&shadow\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/@vue/cli-plugin-babel/node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Experiment06.vue?vue&type=script&lang=js&shadow\"","import { render, staticRenderFns } from \"./Experiment06.vue?vue&type=template&id=fd34e9b8&shadow\"\nimport script from \"./Experiment06.vue?vue&type=script&lang=js&shadow\"\nexport * from \"./Experiment06.vue?vue&type=script&lang=js&shadow\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  ,true\n)\n\nexport default component.exports","import './setPublicPath'\nimport Vue from 'vue'\nimport wrap from '@vue/web-component-wrapper'\n\n// runtime shared by every component chunk\nimport 'css-loader/dist/runtime/api.js'\nimport 'vue-style-loader/lib/addStylesShadow'\nimport 'vue-loader/lib/runtime/componentNormalizer'\n\nimport exp06 from '~root/src/experiments/Experiment06.vue?shadow'\nwindow.customElements.define('exp-06', wrap(Vue, exp06))","// addapted from the document.currentScript polyfill by Adam Miller\n// MIT license\n// source: https://github.com/amiller-gh/currentScript-polyfill\n\n// added support for Firefox https://bugzilla.mozilla.org/show_bug.cgi?id=1620505\n\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = factory();\n  } else {\n    root.getCurrentScript = factory();\n  }\n}(typeof self !== 'undefined' ? self : this, function () {\n  function getCurrentScript () {\n    var descriptor = Object.getOwnPropertyDescriptor(document, 'currentScript')\n    // for chrome\n    if (!descriptor && 'currentScript' in document && document.currentScript) {\n      return document.currentScript\n    }\n\n    // for other browsers with native support for currentScript\n    if (descriptor && descriptor.get !== getCurrentScript && document.currentScript) {\n      return document.currentScript\n    }\n  \n    // IE 8-10 support script readyState\n    // IE 11+ & Firefox support stack trace\n    try {\n      throw new Error();\n    }\n    catch (err) {\n      // Find the second match for the \"at\" string to get file src url from stack.\n      var ieStackRegExp = /.*at [^(]*\\((.*):(.+):(.+)\\)$/ig,\n        ffStackRegExp = /@([^@]*):(\\d+):(\\d+)\\s*$/ig,\n        stackDetails = ieStackRegExp.exec(err.stack) || ffStackRegExp.exec(err.stack),\n        scriptLocation = (stackDetails && stackDetails[1]) || false,\n        line = (stackDetails && stackDetails[2]) || false,\n        currentLocation = document.location.href.replace(document.location.hash, ''),\n        pageSource,\n        inlineScriptSourceRegExp,\n        inlineScriptSource,\n        scripts = document.getElementsByTagName('script'); // Live NodeList collection\n  \n      if (scriptLocation === currentLocation) {\n        pageSource = document.documentElement.outerHTML;\n        inlineScriptSourceRegExp = new RegExp('(?:[^\\\\n]+?\\\\n){0,' + (line - 2) + '}[^<]*<script>([\\\\d\\\\D]*?)<\\\\/script>[\\\\d\\\\D]*', 'i');\n        inlineScriptSource = pageSource.replace(inlineScriptSourceRegExp, '$1').trim();\n      }\n  \n      for (var i = 0; i < scripts.length; i++) {\n        // If ready state is interactive, return the script tag\n        if (scripts[i].readyState === 'interactive') {\n          return scripts[i];\n        }\n  \n        // If src matches, return the script tag\n        if (scripts[i].src === scriptLocation) {\n          return scripts[i];\n        }\n  \n        // If inline source matches, return the script tag\n        if (\n          scriptLocation === currentLocation &&\n          scripts[i].innerHTML &&\n          scripts[i].innerHTML.trim() === inlineScriptSource\n        ) {\n          return scripts[i];\n        }\n      }\n  \n      // If no match, return null\n      return null;\n    }\n  };\n\n  return getCurrentScript\n}));\n","module.exports = Vue;","/*!\n * matter-js 0.18.0 by @liabru\n * http://brm.io/matter-js/\n * License MIT\n * \n * The MIT License (MIT)\n * \n * Copyright (c) Liam Brummitt and contributors.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Matter\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Matter\"] = factory();\n\telse\n\t\troot[\"Matter\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 21);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\n/**\n* The `Matter.Common` module contains utility functions that are common to all modules.\n*\n* @class Common\n*/\n\nvar Common = {};\n\nmodule.exports = Common;\n\n(function() {\n\n    Common._nextId = 0;\n    Common._seed = 0;\n    Common._nowStartTime = +(new Date());\n    Common._warnedOnce = {};\n    Common._decomp = null;\n    \n    /**\n     * Extends the object in the first argument using the object in the second argument.\n     * @method extend\n     * @param {} obj\n     * @param {boolean} deep\n     * @return {} obj extended\n     */\n    Common.extend = function(obj, deep) {\n        var argsStart,\n            args,\n            deepClone;\n\n        if (typeof deep === 'boolean') {\n            argsStart = 2;\n            deepClone = deep;\n        } else {\n            argsStart = 1;\n            deepClone = true;\n        }\n\n        for (var i = argsStart; i < arguments.length; i++) {\n            var source = arguments[i];\n\n            if (source) {\n                for (var prop in source) {\n                    if (deepClone && source[prop] && source[prop].constructor === Object) {\n                        if (!obj[prop] || obj[prop].constructor === Object) {\n                            obj[prop] = obj[prop] || {};\n                            Common.extend(obj[prop], deepClone, source[prop]);\n                        } else {\n                            obj[prop] = source[prop];\n                        }\n                    } else {\n                        obj[prop] = source[prop];\n                    }\n                }\n            }\n        }\n        \n        return obj;\n    };\n\n    /**\n     * Creates a new clone of the object, if deep is true references will also be cloned.\n     * @method clone\n     * @param {} obj\n     * @param {bool} deep\n     * @return {} obj cloned\n     */\n    Common.clone = function(obj, deep) {\n        return Common.extend({}, deep, obj);\n    };\n\n    /**\n     * Returns the list of keys for the given object.\n     * @method keys\n     * @param {} obj\n     * @return {string[]} keys\n     */\n    Common.keys = function(obj) {\n        if (Object.keys)\n            return Object.keys(obj);\n\n        // avoid hasOwnProperty for performance\n        var keys = [];\n        for (var key in obj)\n            keys.push(key);\n        return keys;\n    };\n\n    /**\n     * Returns the list of values for the given object.\n     * @method values\n     * @param {} obj\n     * @return {array} Array of the objects property values\n     */\n    Common.values = function(obj) {\n        var values = [];\n        \n        if (Object.keys) {\n            var keys = Object.keys(obj);\n            for (var i = 0; i < keys.length; i++) {\n                values.push(obj[keys[i]]);\n            }\n            return values;\n        }\n        \n        // avoid hasOwnProperty for performance\n        for (var key in obj)\n            values.push(obj[key]);\n        return values;\n    };\n\n    /**\n     * Gets a value from `base` relative to the `path` string.\n     * @method get\n     * @param {} obj The base object\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n     * @param {number} [begin] Path slice begin\n     * @param {number} [end] Path slice end\n     * @return {} The object at the given path\n     */\n    Common.get = function(obj, path, begin, end) {\n        path = path.split('.').slice(begin, end);\n\n        for (var i = 0; i < path.length; i += 1) {\n            obj = obj[path[i]];\n        }\n\n        return obj;\n    };\n\n    /**\n     * Sets a value on `base` relative to the given `path` string.\n     * @method set\n     * @param {} obj The base object\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n     * @param {} val The value to set\n     * @param {number} [begin] Path slice begin\n     * @param {number} [end] Path slice end\n     * @return {} Pass through `val` for chaining\n     */\n    Common.set = function(obj, path, val, begin, end) {\n        var parts = path.split('.').slice(begin, end);\n        Common.get(obj, path, 0, -1)[parts[parts.length - 1]] = val;\n        return val;\n    };\n\n    /**\n     * Shuffles the given array in-place.\n     * The function uses a seeded random generator.\n     * @method shuffle\n     * @param {array} array\n     * @return {array} array shuffled randomly\n     */\n    Common.shuffle = function(array) {\n        for (var i = array.length - 1; i > 0; i--) {\n            var j = Math.floor(Common.random() * (i + 1));\n            var temp = array[i];\n            array[i] = array[j];\n            array[j] = temp;\n        }\n        return array;\n    };\n\n    /**\n     * Randomly chooses a value from a list with equal probability.\n     * The function uses a seeded random generator.\n     * @method choose\n     * @param {array} choices\n     * @return {object} A random choice object from the array\n     */\n    Common.choose = function(choices) {\n        return choices[Math.floor(Common.random() * choices.length)];\n    };\n\n    /**\n     * Returns true if the object is a HTMLElement, otherwise false.\n     * @method isElement\n     * @param {object} obj\n     * @return {boolean} True if the object is a HTMLElement, otherwise false\n     */\n    Common.isElement = function(obj) {\n        if (typeof HTMLElement !== 'undefined') {\n            return obj instanceof HTMLElement;\n        }\n\n        return !!(obj && obj.nodeType && obj.nodeName);\n    };\n\n    /**\n     * Returns true if the object is an array.\n     * @method isArray\n     * @param {object} obj\n     * @return {boolean} True if the object is an array, otherwise false\n     */\n    Common.isArray = function(obj) {\n        return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n\n    /**\n     * Returns true if the object is a function.\n     * @method isFunction\n     * @param {object} obj\n     * @return {boolean} True if the object is a function, otherwise false\n     */\n    Common.isFunction = function(obj) {\n        return typeof obj === \"function\";\n    };\n\n    /**\n     * Returns true if the object is a plain object.\n     * @method isPlainObject\n     * @param {object} obj\n     * @return {boolean} True if the object is a plain object, otherwise false\n     */\n    Common.isPlainObject = function(obj) {\n        return typeof obj === 'object' && obj.constructor === Object;\n    };\n\n    /**\n     * Returns true if the object is a string.\n     * @method isString\n     * @param {object} obj\n     * @return {boolean} True if the object is a string, otherwise false\n     */\n    Common.isString = function(obj) {\n        return toString.call(obj) === '[object String]';\n    };\n    \n    /**\n     * Returns the given value clamped between a minimum and maximum value.\n     * @method clamp\n     * @param {number} value\n     * @param {number} min\n     * @param {number} max\n     * @return {number} The value clamped between min and max inclusive\n     */\n    Common.clamp = function(value, min, max) {\n        if (value < min)\n            return min;\n        if (value > max)\n            return max;\n        return value;\n    };\n    \n    /**\n     * Returns the sign of the given value.\n     * @method sign\n     * @param {number} value\n     * @return {number} -1 if negative, +1 if 0 or positive\n     */\n    Common.sign = function(value) {\n        return value < 0 ? -1 : 1;\n    };\n    \n    /**\n     * Returns the current timestamp since the time origin (e.g. from page load).\n     * The result is in milliseconds and will use high-resolution timing if available.\n     * @method now\n     * @return {number} the current timestamp in milliseconds\n     */\n    Common.now = function() {\n        if (typeof window !== 'undefined' && window.performance) {\n            if (window.performance.now) {\n                return window.performance.now();\n            } else if (window.performance.webkitNow) {\n                return window.performance.webkitNow();\n            }\n        }\n\n        if (Date.now) {\n            return Date.now();\n        }\n\n        return (new Date()) - Common._nowStartTime;\n    };\n    \n    /**\n     * Returns a random value between a minimum and a maximum value inclusive.\n     * The function uses a seeded random generator.\n     * @method random\n     * @param {number} min\n     * @param {number} max\n     * @return {number} A random number between min and max inclusive\n     */\n    Common.random = function(min, max) {\n        min = (typeof min !== \"undefined\") ? min : 0;\n        max = (typeof max !== \"undefined\") ? max : 1;\n        return min + _seededRandom() * (max - min);\n    };\n\n    var _seededRandom = function() {\n        // https://en.wikipedia.org/wiki/Linear_congruential_generator\n        Common._seed = (Common._seed * 9301 + 49297) % 233280;\n        return Common._seed / 233280;\n    };\n\n    /**\n     * Converts a CSS hex colour string into an integer.\n     * @method colorToNumber\n     * @param {string} colorString\n     * @return {number} An integer representing the CSS hex string\n     */\n    Common.colorToNumber = function(colorString) {\n        colorString = colorString.replace('#','');\n\n        if (colorString.length == 3) {\n            colorString = colorString.charAt(0) + colorString.charAt(0)\n                        + colorString.charAt(1) + colorString.charAt(1)\n                        + colorString.charAt(2) + colorString.charAt(2);\n        }\n\n        return parseInt(colorString, 16);\n    };\n\n    /**\n     * The console logging level to use, where each level includes all levels above and excludes the levels below.\n     * The default level is 'debug' which shows all console messages.  \n     *\n     * Possible level values are:\n     * - 0 = None\n     * - 1 = Debug\n     * - 2 = Info\n     * - 3 = Warn\n     * - 4 = Error\n     * @property Common.logLevel\n     * @type {Number}\n     * @default 1\n     */\n    Common.logLevel = 1;\n\n    /**\n     * Shows a `console.log` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method log\n     * @param ...objs {} The objects to log.\n     */\n    Common.log = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\n            console.log.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Shows a `console.info` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method info\n     * @param ...objs {} The objects to log.\n     */\n    Common.info = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 2) {\n            console.info.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Shows a `console.warn` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method warn\n     * @param ...objs {} The objects to log.\n     */\n    Common.warn = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\n            console.warn.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Uses `Common.warn` to log the given message one time only.\n     * @method warnOnce\n     * @param ...objs {} The objects to log.\n     */\n    Common.warnOnce = function() {\n        var message = Array.prototype.slice.call(arguments).join(' ');\n\n        if (!Common._warnedOnce[message]) {\n            Common.warn(message);\n            Common._warnedOnce[message] = true;\n        }\n    };\n\n    /**\n     * Shows a deprecated console warning when the function on the given object is called.\n     * The target function will be replaced with a new function that first shows the warning\n     * and then calls the original function.\n     * @method deprecated\n     * @param {object} obj The object or module\n     * @param {string} name The property name of the function on obj\n     * @param {string} warning The one-time message to show if the function is called\n     */\n    Common.deprecated = function(obj, prop, warning) {\n        obj[prop] = Common.chain(function() {\n            Common.warnOnce('🔅 deprecated 🔅', warning);\n        }, obj[prop]);\n    };\n\n    /**\n     * Returns the next unique sequential ID.\n     * @method nextId\n     * @return {Number} Unique sequential ID\n     */\n    Common.nextId = function() {\n        return Common._nextId++;\n    };\n\n    /**\n     * A cross browser compatible indexOf implementation.\n     * @method indexOf\n     * @param {array} haystack\n     * @param {object} needle\n     * @return {number} The position of needle in haystack, otherwise -1.\n     */\n    Common.indexOf = function(haystack, needle) {\n        if (haystack.indexOf)\n            return haystack.indexOf(needle);\n\n        for (var i = 0; i < haystack.length; i++) {\n            if (haystack[i] === needle)\n                return i;\n        }\n\n        return -1;\n    };\n\n    /**\n     * A cross browser compatible array map implementation.\n     * @method map\n     * @param {array} list\n     * @param {function} func\n     * @return {array} Values from list transformed by func.\n     */\n    Common.map = function(list, func) {\n        if (list.map) {\n            return list.map(func);\n        }\n\n        var mapped = [];\n\n        for (var i = 0; i < list.length; i += 1) {\n            mapped.push(func(list[i]));\n        }\n\n        return mapped;\n    };\n\n    /**\n     * Takes a directed graph and returns the partially ordered set of vertices in topological order.\n     * Circular dependencies are allowed.\n     * @method topologicalSort\n     * @param {object} graph\n     * @return {array} Partially ordered set of vertices in topological order.\n     */\n    Common.topologicalSort = function(graph) {\n        // https://github.com/mgechev/javascript-algorithms\n        // Copyright (c) Minko Gechev (MIT license)\n        // Modifications: tidy formatting and naming\n        var result = [],\n            visited = [],\n            temp = [];\n\n        for (var node in graph) {\n            if (!visited[node] && !temp[node]) {\n                Common._topologicalSort(node, visited, temp, graph, result);\n            }\n        }\n\n        return result;\n    };\n\n    Common._topologicalSort = function(node, visited, temp, graph, result) {\n        var neighbors = graph[node] || [];\n        temp[node] = true;\n\n        for (var i = 0; i < neighbors.length; i += 1) {\n            var neighbor = neighbors[i];\n\n            if (temp[neighbor]) {\n                // skip circular dependencies\n                continue;\n            }\n\n            if (!visited[neighbor]) {\n                Common._topologicalSort(neighbor, visited, temp, graph, result);\n            }\n        }\n\n        temp[node] = false;\n        visited[node] = true;\n\n        result.push(node);\n    };\n\n    /**\n     * Takes _n_ functions as arguments and returns a new function that calls them in order.\n     * The arguments applied when calling the new function will also be applied to every function passed.\n     * The value of `this` refers to the last value returned in the chain that was not `undefined`.\n     * Therefore if a passed function does not return a value, the previously returned value is maintained.\n     * After all passed functions have been called the new function returns the last returned value (if any).\n     * If any of the passed functions are a chain, then the chain will be flattened.\n     * @method chain\n     * @param ...funcs {function} The functions to chain.\n     * @return {function} A new function that calls the passed functions in order.\n     */\n    Common.chain = function() {\n        var funcs = [];\n\n        for (var i = 0; i < arguments.length; i += 1) {\n            var func = arguments[i];\n\n            if (func._chained) {\n                // flatten already chained functions\n                funcs.push.apply(funcs, func._chained);\n            } else {\n                funcs.push(func);\n            }\n        }\n\n        var chain = function() {\n            // https://github.com/GoogleChrome/devtools-docs/issues/53#issuecomment-51941358\n            var lastResult,\n                args = new Array(arguments.length);\n\n            for (var i = 0, l = arguments.length; i < l; i++) {\n                args[i] = arguments[i];\n            }\n\n            for (i = 0; i < funcs.length; i += 1) {\n                var result = funcs[i].apply(lastResult, args);\n\n                if (typeof result !== 'undefined') {\n                    lastResult = result;\n                }\n            }\n\n            return lastResult;\n        };\n\n        chain._chained = funcs;\n\n        return chain;\n    };\n\n    /**\n     * Chains a function to excute before the original function on the given `path` relative to `base`.\n     * See also docs for `Common.chain`.\n     * @method chainPathBefore\n     * @param {} base The base object\n     * @param {string} path The path relative to `base`\n     * @param {function} func The function to chain before the original\n     * @return {function} The chained function that replaced the original\n     */\n    Common.chainPathBefore = function(base, path, func) {\n        return Common.set(base, path, Common.chain(\n            func,\n            Common.get(base, path)\n        ));\n    };\n\n    /**\n     * Chains a function to excute after the original function on the given `path` relative to `base`.\n     * See also docs for `Common.chain`.\n     * @method chainPathAfter\n     * @param {} base The base object\n     * @param {string} path The path relative to `base`\n     * @param {function} func The function to chain after the original\n     * @return {function} The chained function that replaced the original\n     */\n    Common.chainPathAfter = function(base, path, func) {\n        return Common.set(base, path, Common.chain(\n            Common.get(base, path),\n            func\n        ));\n    };\n\n    /**\n     * Provide the [poly-decomp](https://github.com/schteppe/poly-decomp.js) library module to enable\n     * concave vertex decomposition support when using `Bodies.fromVertices` e.g. `Common.setDecomp(require('poly-decomp'))`.\n     * @method setDecomp\n     * @param {} decomp The [poly-decomp](https://github.com/schteppe/poly-decomp.js) library module.\n     */\n    Common.setDecomp = function(decomp) {\n        Common._decomp = decomp;\n    };\n\n    /**\n     * Returns the [poly-decomp](https://github.com/schteppe/poly-decomp.js) library module provided through `Common.setDecomp`,\n     * otherwise returns the global `decomp` if set.\n     * @method getDecomp\n     * @return {} The [poly-decomp](https://github.com/schteppe/poly-decomp.js) library module if provided.\n     */\n    Common.getDecomp = function() {\n        // get user provided decomp if set\n        var decomp = Common._decomp;\n\n        try {\n            // otherwise from window global\n            if (!decomp && typeof window !== 'undefined') {\n                decomp = window.decomp;\n            }\n    \n            // otherwise from node global\n            if (!decomp && typeof global !== 'undefined') {\n                decomp = global.decomp;\n            }\n        } catch (e) {\n            // decomp not available\n            decomp = null;\n        }\n\n        return decomp;\n    };\n})();\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n/**\n* The `Matter.Bounds` module contains methods for creating and manipulating axis-aligned bounding boxes (AABB).\n*\n* @class Bounds\n*/\n\nvar Bounds = {};\n\nmodule.exports = Bounds;\n\n(function() {\n\n    /**\n     * Creates a new axis-aligned bounding box (AABB) for the given vertices.\n     * @method create\n     * @param {vertices} vertices\n     * @return {bounds} A new bounds object\n     */\n    Bounds.create = function(vertices) {\n        var bounds = { \n            min: { x: 0, y: 0 }, \n            max: { x: 0, y: 0 }\n        };\n\n        if (vertices)\n            Bounds.update(bounds, vertices);\n        \n        return bounds;\n    };\n\n    /**\n     * Updates bounds using the given vertices and extends the bounds given a velocity.\n     * @method update\n     * @param {bounds} bounds\n     * @param {vertices} vertices\n     * @param {vector} velocity\n     */\n    Bounds.update = function(bounds, vertices, velocity) {\n        bounds.min.x = Infinity;\n        bounds.max.x = -Infinity;\n        bounds.min.y = Infinity;\n        bounds.max.y = -Infinity;\n\n        for (var i = 0; i < vertices.length; i++) {\n            var vertex = vertices[i];\n            if (vertex.x > bounds.max.x) bounds.max.x = vertex.x;\n            if (vertex.x < bounds.min.x) bounds.min.x = vertex.x;\n            if (vertex.y > bounds.max.y) bounds.max.y = vertex.y;\n            if (vertex.y < bounds.min.y) bounds.min.y = vertex.y;\n        }\n        \n        if (velocity) {\n            if (velocity.x > 0) {\n                bounds.max.x += velocity.x;\n            } else {\n                bounds.min.x += velocity.x;\n            }\n            \n            if (velocity.y > 0) {\n                bounds.max.y += velocity.y;\n            } else {\n                bounds.min.y += velocity.y;\n            }\n        }\n    };\n\n    /**\n     * Returns true if the bounds contains the given point.\n     * @method contains\n     * @param {bounds} bounds\n     * @param {vector} point\n     * @return {boolean} True if the bounds contain the point, otherwise false\n     */\n    Bounds.contains = function(bounds, point) {\n        return point.x >= bounds.min.x && point.x <= bounds.max.x \n               && point.y >= bounds.min.y && point.y <= bounds.max.y;\n    };\n\n    /**\n     * Returns true if the two bounds intersect.\n     * @method overlaps\n     * @param {bounds} boundsA\n     * @param {bounds} boundsB\n     * @return {boolean} True if the bounds overlap, otherwise false\n     */\n    Bounds.overlaps = function(boundsA, boundsB) {\n        return (boundsA.min.x <= boundsB.max.x && boundsA.max.x >= boundsB.min.x\n                && boundsA.max.y >= boundsB.min.y && boundsA.min.y <= boundsB.max.y);\n    };\n\n    /**\n     * Translates the bounds by the given vector.\n     * @method translate\n     * @param {bounds} bounds\n     * @param {vector} vector\n     */\n    Bounds.translate = function(bounds, vector) {\n        bounds.min.x += vector.x;\n        bounds.max.x += vector.x;\n        bounds.min.y += vector.y;\n        bounds.max.y += vector.y;\n    };\n\n    /**\n     * Shifts the bounds to the given position.\n     * @method shift\n     * @param {bounds} bounds\n     * @param {vector} position\n     */\n    Bounds.shift = function(bounds, position) {\n        var deltaX = bounds.max.x - bounds.min.x,\n            deltaY = bounds.max.y - bounds.min.y;\n            \n        bounds.min.x = position.x;\n        bounds.max.x = position.x + deltaX;\n        bounds.min.y = position.y;\n        bounds.max.y = position.y + deltaY;\n    };\n    \n})();\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n/**\n* The `Matter.Vector` module contains methods for creating and manipulating vectors.\n* Vectors are the basis of all the geometry related operations in the engine.\n* A `Matter.Vector` object is of the form `{ x: 0, y: 0 }`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vector\n*/\n\n// TODO: consider params for reusing vector objects\n\nvar Vector = {};\n\nmodule.exports = Vector;\n\n(function() {\n\n    /**\n     * Creates a new vector.\n     * @method create\n     * @param {number} x\n     * @param {number} y\n     * @return {vector} A new vector\n     */\n    Vector.create = function(x, y) {\n        return { x: x || 0, y: y || 0 };\n    };\n\n    /**\n     * Returns a new vector with `x` and `y` copied from the given `vector`.\n     * @method clone\n     * @param {vector} vector\n     * @return {vector} A new cloned vector\n     */\n    Vector.clone = function(vector) {\n        return { x: vector.x, y: vector.y };\n    };\n\n    /**\n     * Returns the magnitude (length) of a vector.\n     * @method magnitude\n     * @param {vector} vector\n     * @return {number} The magnitude of the vector\n     */\n    Vector.magnitude = function(vector) {\n        return Math.sqrt((vector.x * vector.x) + (vector.y * vector.y));\n    };\n\n    /**\n     * Returns the magnitude (length) of a vector (therefore saving a `sqrt` operation).\n     * @method magnitudeSquared\n     * @param {vector} vector\n     * @return {number} The squared magnitude of the vector\n     */\n    Vector.magnitudeSquared = function(vector) {\n        return (vector.x * vector.x) + (vector.y * vector.y);\n    };\n\n    /**\n     * Rotates the vector about (0, 0) by specified angle.\n     * @method rotate\n     * @param {vector} vector\n     * @param {number} angle\n     * @param {vector} [output]\n     * @return {vector} The vector rotated about (0, 0)\n     */\n    Vector.rotate = function(vector, angle, output) {\n        var cos = Math.cos(angle), sin = Math.sin(angle);\n        if (!output) output = {};\n        var x = vector.x * cos - vector.y * sin;\n        output.y = vector.x * sin + vector.y * cos;\n        output.x = x;\n        return output;\n    };\n\n    /**\n     * Rotates the vector about a specified point by specified angle.\n     * @method rotateAbout\n     * @param {vector} vector\n     * @param {number} angle\n     * @param {vector} point\n     * @param {vector} [output]\n     * @return {vector} A new vector rotated about the point\n     */\n    Vector.rotateAbout = function(vector, angle, point, output) {\n        var cos = Math.cos(angle), sin = Math.sin(angle);\n        if (!output) output = {};\n        var x = point.x + ((vector.x - point.x) * cos - (vector.y - point.y) * sin);\n        output.y = point.y + ((vector.x - point.x) * sin + (vector.y - point.y) * cos);\n        output.x = x;\n        return output;\n    };\n\n    /**\n     * Normalises a vector (such that its magnitude is `1`).\n     * @method normalise\n     * @param {vector} vector\n     * @return {vector} A new vector normalised\n     */\n    Vector.normalise = function(vector) {\n        var magnitude = Vector.magnitude(vector);\n        if (magnitude === 0)\n            return { x: 0, y: 0 };\n        return { x: vector.x / magnitude, y: vector.y / magnitude };\n    };\n\n    /**\n     * Returns the dot-product of two vectors.\n     * @method dot\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The dot product of the two vectors\n     */\n    Vector.dot = function(vectorA, vectorB) {\n        return (vectorA.x * vectorB.x) + (vectorA.y * vectorB.y);\n    };\n\n    /**\n     * Returns the cross-product of two vectors.\n     * @method cross\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The cross product of the two vectors\n     */\n    Vector.cross = function(vectorA, vectorB) {\n        return (vectorA.x * vectorB.y) - (vectorA.y * vectorB.x);\n    };\n\n    /**\n     * Returns the cross-product of three vectors.\n     * @method cross3\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} vectorC\n     * @return {number} The cross product of the three vectors\n     */\n    Vector.cross3 = function(vectorA, vectorB, vectorC) {\n        return (vectorB.x - vectorA.x) * (vectorC.y - vectorA.y) - (vectorB.y - vectorA.y) * (vectorC.x - vectorA.x);\n    };\n\n    /**\n     * Adds the two vectors.\n     * @method add\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB added\n     */\n    Vector.add = function(vectorA, vectorB, output) {\n        if (!output) output = {};\n        output.x = vectorA.x + vectorB.x;\n        output.y = vectorA.y + vectorB.y;\n        return output;\n    };\n\n    /**\n     * Subtracts the two vectors.\n     * @method sub\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB subtracted\n     */\n    Vector.sub = function(vectorA, vectorB, output) {\n        if (!output) output = {};\n        output.x = vectorA.x - vectorB.x;\n        output.y = vectorA.y - vectorB.y;\n        return output;\n    };\n\n    /**\n     * Multiplies a vector and a scalar.\n     * @method mult\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector multiplied by scalar\n     */\n    Vector.mult = function(vector, scalar) {\n        return { x: vector.x * scalar, y: vector.y * scalar };\n    };\n\n    /**\n     * Divides a vector and a scalar.\n     * @method div\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector divided by scalar\n     */\n    Vector.div = function(vector, scalar) {\n        return { x: vector.x / scalar, y: vector.y / scalar };\n    };\n\n    /**\n     * Returns the perpendicular vector. Set `negate` to true for the perpendicular in the opposite direction.\n     * @method perp\n     * @param {vector} vector\n     * @param {bool} [negate=false]\n     * @return {vector} The perpendicular vector\n     */\n    Vector.perp = function(vector, negate) {\n        negate = negate === true ? -1 : 1;\n        return { x: negate * -vector.y, y: negate * vector.x };\n    };\n\n    /**\n     * Negates both components of a vector such that it points in the opposite direction.\n     * @method neg\n     * @param {vector} vector\n     * @return {vector} The negated vector\n     */\n    Vector.neg = function(vector) {\n        return { x: -vector.x, y: -vector.y };\n    };\n\n    /**\n     * Returns the angle between the vector `vectorB - vectorA` and the x-axis in radians.\n     * @method angle\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The angle in radians\n     */\n    Vector.angle = function(vectorA, vectorB) {\n        return Math.atan2(vectorB.y - vectorA.y, vectorB.x - vectorA.x);\n    };\n\n    /**\n     * Temporary vector pool (not thread-safe).\n     * @property _temp\n     * @type {vector[]}\n     * @private\n     */\n    Vector._temp = [\n        Vector.create(), Vector.create(), \n        Vector.create(), Vector.create(), \n        Vector.create(), Vector.create()\n    ];\n\n})();\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Vertices` module contains methods for creating and manipulating sets of vertices.\n* A set of vertices is an array of `Matter.Vector` with additional indexing properties inserted by `Vertices.create`.\n* A `Matter.Body` maintains a set of vertices to represent the shape of the object (its convex hull).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vertices\n*/\n\nvar Vertices = {};\n\nmodule.exports = Vertices;\n\nvar Vector = __webpack_require__(2);\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    /**\n     * Creates a new set of `Matter.Body` compatible vertices.\n     * The `points` argument accepts an array of `Matter.Vector` points orientated around the origin `(0, 0)`, for example:\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * The `Vertices.create` method returns a new array of vertices, which are similar to Matter.Vector objects,\n     * but with some additional references required for efficient collision detection routines.\n     *\n     * Vertices must be specified in clockwise order.\n     *\n     * Note that the `body` argument is not optional, a `Matter.Body` reference must be provided.\n     *\n     * @method create\n     * @param {vector[]} points\n     * @param {body} body\n     */\n    Vertices.create = function(points, body) {\n        var vertices = [];\n\n        for (var i = 0; i < points.length; i++) {\n            var point = points[i],\n                vertex = {\n                    x: point.x,\n                    y: point.y,\n                    index: i,\n                    body: body,\n                    isInternal: false\n                };\n\n            vertices.push(vertex);\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Parses a string containing ordered x y pairs separated by spaces (and optionally commas), \n     * into a `Matter.Vertices` object for the given `Matter.Body`.\n     * For parsing SVG paths, see `Svg.pathToVertices`.\n     * @method fromPath\n     * @param {string} path\n     * @param {body} body\n     * @return {vertices} vertices\n     */\n    Vertices.fromPath = function(path, body) {\n        var pathPattern = /L?\\s*([-\\d.e]+)[\\s,]*([-\\d.e]+)*/ig,\n            points = [];\n\n        path.replace(pathPattern, function(match, x, y) {\n            points.push({ x: parseFloat(x), y: parseFloat(y) });\n        });\n\n        return Vertices.create(points, body);\n    };\n\n    /**\n     * Returns the centre (centroid) of the set of vertices.\n     * @method centre\n     * @param {vertices} vertices\n     * @return {vector} The centre point\n     */\n    Vertices.centre = function(vertices) {\n        var area = Vertices.area(vertices, true),\n            centre = { x: 0, y: 0 },\n            cross,\n            temp,\n            j;\n\n        for (var i = 0; i < vertices.length; i++) {\n            j = (i + 1) % vertices.length;\n            cross = Vector.cross(vertices[i], vertices[j]);\n            temp = Vector.mult(Vector.add(vertices[i], vertices[j]), cross);\n            centre = Vector.add(centre, temp);\n        }\n\n        return Vector.div(centre, 6 * area);\n    };\n\n    /**\n     * Returns the average (mean) of the set of vertices.\n     * @method mean\n     * @param {vertices} vertices\n     * @return {vector} The average point\n     */\n    Vertices.mean = function(vertices) {\n        var average = { x: 0, y: 0 };\n\n        for (var i = 0; i < vertices.length; i++) {\n            average.x += vertices[i].x;\n            average.y += vertices[i].y;\n        }\n\n        return Vector.div(average, vertices.length);\n    };\n\n    /**\n     * Returns the area of the set of vertices.\n     * @method area\n     * @param {vertices} vertices\n     * @param {bool} signed\n     * @return {number} The area\n     */\n    Vertices.area = function(vertices, signed) {\n        var area = 0,\n            j = vertices.length - 1;\n\n        for (var i = 0; i < vertices.length; i++) {\n            area += (vertices[j].x - vertices[i].x) * (vertices[j].y + vertices[i].y);\n            j = i;\n        }\n\n        if (signed)\n            return area / 2;\n\n        return Math.abs(area) / 2;\n    };\n\n    /**\n     * Returns the moment of inertia (second moment of area) of the set of vertices given the total mass.\n     * @method inertia\n     * @param {vertices} vertices\n     * @param {number} mass\n     * @return {number} The polygon's moment of inertia\n     */\n    Vertices.inertia = function(vertices, mass) {\n        var numerator = 0,\n            denominator = 0,\n            v = vertices,\n            cross,\n            j;\n\n        // find the polygon's moment of inertia, using second moment of area\n        // from equations at http://www.physicsforums.com/showthread.php?t=25293\n        for (var n = 0; n < v.length; n++) {\n            j = (n + 1) % v.length;\n            cross = Math.abs(Vector.cross(v[j], v[n]));\n            numerator += cross * (Vector.dot(v[j], v[j]) + Vector.dot(v[j], v[n]) + Vector.dot(v[n], v[n]));\n            denominator += cross;\n        }\n\n        return (mass / 6) * (numerator / denominator);\n    };\n\n    /**\n     * Translates the set of vertices in-place.\n     * @method translate\n     * @param {vertices} vertices\n     * @param {vector} vector\n     * @param {number} scalar\n     */\n    Vertices.translate = function(vertices, vector, scalar) {\n        scalar = typeof scalar !== 'undefined' ? scalar : 1;\n\n        var verticesLength = vertices.length,\n            translateX = vector.x * scalar,\n            translateY = vector.y * scalar,\n            i;\n        \n        for (i = 0; i < verticesLength; i++) {\n            vertices[i].x += translateX;\n            vertices[i].y += translateY;\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Rotates the set of vertices in-place.\n     * @method rotate\n     * @param {vertices} vertices\n     * @param {number} angle\n     * @param {vector} point\n     */\n    Vertices.rotate = function(vertices, angle, point) {\n        if (angle === 0)\n            return;\n\n        var cos = Math.cos(angle),\n            sin = Math.sin(angle),\n            pointX = point.x,\n            pointY = point.y,\n            verticesLength = vertices.length,\n            vertex,\n            dx,\n            dy,\n            i;\n\n        for (i = 0; i < verticesLength; i++) {\n            vertex = vertices[i];\n            dx = vertex.x - pointX;\n            dy = vertex.y - pointY;\n            vertex.x = pointX + (dx * cos - dy * sin);\n            vertex.y = pointY + (dx * sin + dy * cos);\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Returns `true` if the `point` is inside the set of `vertices`.\n     * @method contains\n     * @param {vertices} vertices\n     * @param {vector} point\n     * @return {boolean} True if the vertices contains point, otherwise false\n     */\n    Vertices.contains = function(vertices, point) {\n        var pointX = point.x,\n            pointY = point.y,\n            verticesLength = vertices.length,\n            vertex = vertices[verticesLength - 1],\n            nextVertex;\n\n        for (var i = 0; i < verticesLength; i++) {\n            nextVertex = vertices[i];\n\n            if ((pointX - vertex.x) * (nextVertex.y - vertex.y) \n                + (pointY - vertex.y) * (vertex.x - nextVertex.x) > 0) {\n                return false;\n            }\n\n            vertex = nextVertex;\n        }\n\n        return true;\n    };\n\n    /**\n     * Scales the vertices from a point (default is centre) in-place.\n     * @method scale\n     * @param {vertices} vertices\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     */\n    Vertices.scale = function(vertices, scaleX, scaleY, point) {\n        if (scaleX === 1 && scaleY === 1)\n            return vertices;\n\n        point = point || Vertices.centre(vertices);\n\n        var vertex,\n            delta;\n\n        for (var i = 0; i < vertices.length; i++) {\n            vertex = vertices[i];\n            delta = Vector.sub(vertex, point);\n            vertices[i].x = point.x + delta.x * scaleX;\n            vertices[i].y = point.y + delta.y * scaleY;\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Chamfers a set of vertices by giving them rounded corners, returns a new set of vertices.\n     * The radius parameter is a single number or an array to specify the radius for each vertex.\n     * @method chamfer\n     * @param {vertices} vertices\n     * @param {number[]} radius\n     * @param {number} quality\n     * @param {number} qualityMin\n     * @param {number} qualityMax\n     */\n    Vertices.chamfer = function(vertices, radius, quality, qualityMin, qualityMax) {\n        if (typeof radius === 'number') {\n            radius = [radius];\n        } else {\n            radius = radius || [8];\n        }\n\n        // quality defaults to -1, which is auto\n        quality = (typeof quality !== 'undefined') ? quality : -1;\n        qualityMin = qualityMin || 2;\n        qualityMax = qualityMax || 14;\n\n        var newVertices = [];\n\n        for (var i = 0; i < vertices.length; i++) {\n            var prevVertex = vertices[i - 1 >= 0 ? i - 1 : vertices.length - 1],\n                vertex = vertices[i],\n                nextVertex = vertices[(i + 1) % vertices.length],\n                currentRadius = radius[i < radius.length ? i : radius.length - 1];\n\n            if (currentRadius === 0) {\n                newVertices.push(vertex);\n                continue;\n            }\n\n            var prevNormal = Vector.normalise({ \n                x: vertex.y - prevVertex.y, \n                y: prevVertex.x - vertex.x\n            });\n\n            var nextNormal = Vector.normalise({ \n                x: nextVertex.y - vertex.y, \n                y: vertex.x - nextVertex.x\n            });\n\n            var diagonalRadius = Math.sqrt(2 * Math.pow(currentRadius, 2)),\n                radiusVector = Vector.mult(Common.clone(prevNormal), currentRadius),\n                midNormal = Vector.normalise(Vector.mult(Vector.add(prevNormal, nextNormal), 0.5)),\n                scaledVertex = Vector.sub(vertex, Vector.mult(midNormal, diagonalRadius));\n\n            var precision = quality;\n\n            if (quality === -1) {\n                // automatically decide precision\n                precision = Math.pow(currentRadius, 0.32) * 1.75;\n            }\n\n            precision = Common.clamp(precision, qualityMin, qualityMax);\n\n            // use an even value for precision, more likely to reduce axes by using symmetry\n            if (precision % 2 === 1)\n                precision += 1;\n\n            var alpha = Math.acos(Vector.dot(prevNormal, nextNormal)),\n                theta = alpha / precision;\n\n            for (var j = 0; j < precision; j++) {\n                newVertices.push(Vector.add(Vector.rotate(radiusVector, theta * j), scaledVertex));\n            }\n        }\n\n        return newVertices;\n    };\n\n    /**\n     * Sorts the input vertices into clockwise order in place.\n     * @method clockwiseSort\n     * @param {vertices} vertices\n     * @return {vertices} vertices\n     */\n    Vertices.clockwiseSort = function(vertices) {\n        var centre = Vertices.mean(vertices);\n\n        vertices.sort(function(vertexA, vertexB) {\n            return Vector.angle(centre, vertexA) - Vector.angle(centre, vertexB);\n        });\n\n        return vertices;\n    };\n\n    /**\n     * Returns true if the vertices form a convex shape (vertices must be in clockwise order).\n     * @method isConvex\n     * @param {vertices} vertices\n     * @return {bool} `true` if the `vertices` are convex, `false` if not (or `null` if not computable).\n     */\n    Vertices.isConvex = function(vertices) {\n        // http://paulbourke.net/geometry/polygonmesh/\n        // Copyright (c) Paul Bourke (use permitted)\n\n        var flag = 0,\n            n = vertices.length,\n            i,\n            j,\n            k,\n            z;\n\n        if (n < 3)\n            return null;\n\n        for (i = 0; i < n; i++) {\n            j = (i + 1) % n;\n            k = (i + 2) % n;\n            z = (vertices[j].x - vertices[i].x) * (vertices[k].y - vertices[j].y);\n            z -= (vertices[j].y - vertices[i].y) * (vertices[k].x - vertices[j].x);\n\n            if (z < 0) {\n                flag |= 1;\n            } else if (z > 0) {\n                flag |= 2;\n            }\n\n            if (flag === 3) {\n                return false;\n            }\n        }\n\n        if (flag !== 0){\n            return true;\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Returns the convex hull of the input vertices as a new array of points.\n     * @method hull\n     * @param {vertices} vertices\n     * @return [vertex] vertices\n     */\n    Vertices.hull = function(vertices) {\n        // http://geomalgorithms.com/a10-_hull-1.html\n\n        var upper = [],\n            lower = [], \n            vertex,\n            i;\n\n        // sort vertices on x-axis (y-axis for ties)\n        vertices = vertices.slice(0);\n        vertices.sort(function(vertexA, vertexB) {\n            var dx = vertexA.x - vertexB.x;\n            return dx !== 0 ? dx : vertexA.y - vertexB.y;\n        });\n\n        // build lower hull\n        for (i = 0; i < vertices.length; i += 1) {\n            vertex = vertices[i];\n\n            while (lower.length >= 2 \n                   && Vector.cross3(lower[lower.length - 2], lower[lower.length - 1], vertex) <= 0) {\n                lower.pop();\n            }\n\n            lower.push(vertex);\n        }\n\n        // build upper hull\n        for (i = vertices.length - 1; i >= 0; i -= 1) {\n            vertex = vertices[i];\n\n            while (upper.length >= 2 \n                   && Vector.cross3(upper[upper.length - 2], upper[upper.length - 1], vertex) <= 0) {\n                upper.pop();\n            }\n\n            upper.push(vertex);\n        }\n\n        // concatenation of the lower and upper hulls gives the convex hull\n        // omit last points because they are repeated at the beginning of the other list\n        upper.pop();\n        lower.pop();\n\n        return upper.concat(lower);\n    };\n\n})();\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Events` module contains methods to fire and listen to events on other objects.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Events\n*/\n\nvar Events = {};\n\nmodule.exports = Events;\n\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    /**\n     * Subscribes a callback function to the given object's `eventName`.\n     * @method on\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n    Events.on = function(object, eventNames, callback) {\n        var names = eventNames.split(' '),\n            name;\n\n        for (var i = 0; i < names.length; i++) {\n            name = names[i];\n            object.events = object.events || {};\n            object.events[name] = object.events[name] || [];\n            object.events[name].push(callback);\n        }\n\n        return callback;\n    };\n\n    /**\n     * Removes the given event callback. If no callback, clears all callbacks in `eventNames`. If no `eventNames`, clears all events.\n     * @method off\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n    Events.off = function(object, eventNames, callback) {\n        if (!eventNames) {\n            object.events = {};\n            return;\n        }\n\n        // handle Events.off(object, callback)\n        if (typeof eventNames === 'function') {\n            callback = eventNames;\n            eventNames = Common.keys(object.events).join(' ');\n        }\n\n        var names = eventNames.split(' ');\n\n        for (var i = 0; i < names.length; i++) {\n            var callbacks = object.events[names[i]],\n                newCallbacks = [];\n\n            if (callback && callbacks) {\n                for (var j = 0; j < callbacks.length; j++) {\n                    if (callbacks[j] !== callback)\n                        newCallbacks.push(callbacks[j]);\n                }\n            }\n\n            object.events[names[i]] = newCallbacks;\n        }\n    };\n\n    /**\n     * Fires all the callbacks subscribed to the given object's `eventName`, in the order they subscribed, if any.\n     * @method trigger\n     * @param {} object\n     * @param {string} eventNames\n     * @param {} event\n     */\n    Events.trigger = function(object, eventNames, event) {\n        var names,\n            name,\n            callbacks,\n            eventClone;\n\n        var events = object.events;\n        \n        if (events && Common.keys(events).length > 0) {\n            if (!event)\n                event = {};\n\n            names = eventNames.split(' ');\n\n            for (var i = 0; i < names.length; i++) {\n                name = names[i];\n                callbacks = events[name];\n\n                if (callbacks) {\n                    eventClone = Common.clone(event, false);\n                    eventClone.name = name;\n                    eventClone.source = object;\n\n                    for (var j = 0; j < callbacks.length; j++) {\n                        callbacks[j].apply(object, [eventClone]);\n                    }\n                }\n            }\n        }\n    };\n\n})();\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* A composite is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite` objects.\n*\n* They are a container that can represent complex objects made of multiple parts, even if they are not physically connected.\n* A composite could contain anything from a single body all the way up to a whole world.\n* \n* When making any changes to composites, use the included functions rather than changing their properties directly.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composite\n*/\n\nvar Composite = {};\n\nmodule.exports = Composite;\n\nvar Events = __webpack_require__(4);\nvar Common = __webpack_require__(0);\nvar Bounds = __webpack_require__(1);\nvar Body = __webpack_require__(6);\n\n(function() {\n\n    /**\n     * Creates a new composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properites section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} [options]\n     * @return {composite} A new composite\n     */\n    Composite.create = function(options) {\n        return Common.extend({ \n            id: Common.nextId(),\n            type: 'composite',\n            parent: null,\n            isModified: false,\n            bodies: [], \n            constraints: [], \n            composites: [],\n            label: 'Composite',\n            plugin: {},\n            cache: {\n                allBodies: null,\n                allConstraints: null,\n                allComposites: null\n            }\n        }, options);\n    };\n\n    /**\n     * Sets the composite's `isModified` flag. \n     * If `updateParents` is true, all parents will be set (default: false).\n     * If `updateChildren` is true, all children will be set (default: false).\n     * @private\n     * @method setModified\n     * @param {composite} composite\n     * @param {boolean} isModified\n     * @param {boolean} [updateParents=false]\n     * @param {boolean} [updateChildren=false]\n     */\n    Composite.setModified = function(composite, isModified, updateParents, updateChildren) {\n        composite.isModified = isModified;\n\n        if (isModified && composite.cache) {\n            composite.cache.allBodies = null;\n            composite.cache.allConstraints = null;\n            composite.cache.allComposites = null;\n        }\n\n        if (updateParents && composite.parent) {\n            Composite.setModified(composite.parent, isModified, updateParents, updateChildren);\n        }\n\n        if (updateChildren) {\n            for (var i = 0; i < composite.composites.length; i++) {\n                var childComposite = composite.composites[i];\n                Composite.setModified(childComposite, isModified, updateParents, updateChildren);\n            }\n        }\n    };\n\n    /**\n     * Generic single or multi-add function. Adds a single or an array of body(s), constraint(s) or composite(s) to the given composite.\n     * Triggers `beforeAdd` and `afterAdd` events on the `composite`.\n     * @method add\n     * @param {composite} composite\n     * @param {object|array} object A single or an array of body(s), constraint(s) or composite(s)\n     * @return {composite} The original composite with the objects added\n     */\n    Composite.add = function(composite, object) {\n        var objects = [].concat(object);\n\n        Events.trigger(composite, 'beforeAdd', { object: object });\n\n        for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n\n            switch (obj.type) {\n\n            case 'body':\n                // skip adding compound parts\n                if (obj.parent !== obj) {\n                    Common.warn('Composite.add: skipped adding a compound body part (you must add its parent instead)');\n                    break;\n                }\n\n                Composite.addBody(composite, obj);\n                break;\n            case 'constraint':\n                Composite.addConstraint(composite, obj);\n                break;\n            case 'composite':\n                Composite.addComposite(composite, obj);\n                break;\n            case 'mouseConstraint':\n                Composite.addConstraint(composite, obj.constraint);\n                break;\n\n            }\n        }\n\n        Events.trigger(composite, 'afterAdd', { object: object });\n\n        return composite;\n    };\n\n    /**\n     * Generic remove function. Removes one or many body(s), constraint(s) or a composite(s) to the given composite.\n     * Optionally searching its children recursively.\n     * Triggers `beforeRemove` and `afterRemove` events on the `composite`.\n     * @method remove\n     * @param {composite} composite\n     * @param {object|array} object\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the objects removed\n     */\n    Composite.remove = function(composite, object, deep) {\n        var objects = [].concat(object);\n\n        Events.trigger(composite, 'beforeRemove', { object: object });\n\n        for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n\n            switch (obj.type) {\n\n            case 'body':\n                Composite.removeBody(composite, obj, deep);\n                break;\n            case 'constraint':\n                Composite.removeConstraint(composite, obj, deep);\n                break;\n            case 'composite':\n                Composite.removeComposite(composite, obj, deep);\n                break;\n            case 'mouseConstraint':\n                Composite.removeConstraint(composite, obj.constraint);\n                break;\n\n            }\n        }\n\n        Events.trigger(composite, 'afterRemove', { object: object });\n\n        return composite;\n    };\n\n    /**\n     * Adds a composite to the given composite.\n     * @private\n     * @method addComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @return {composite} The original compositeA with the objects from compositeB added\n     */\n    Composite.addComposite = function(compositeA, compositeB) {\n        compositeA.composites.push(compositeB);\n        compositeB.parent = compositeA;\n        Composite.setModified(compositeA, true, true, false);\n        return compositeA;\n    };\n\n    /**\n     * Removes a composite from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @param {boolean} [deep=false]\n     * @return {composite} The original compositeA with the composite removed\n     */\n    Composite.removeComposite = function(compositeA, compositeB, deep) {\n        var position = Common.indexOf(compositeA.composites, compositeB);\n        if (position !== -1) {\n            Composite.removeCompositeAt(compositeA, position);\n        }\n\n        if (deep) {\n            for (var i = 0; i < compositeA.composites.length; i++){\n                Composite.removeComposite(compositeA.composites[i], compositeB, true);\n            }\n        }\n\n        return compositeA;\n    };\n\n    /**\n     * Removes a composite from the given composite.\n     * @private\n     * @method removeCompositeAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the composite removed\n     */\n    Composite.removeCompositeAt = function(composite, position) {\n        composite.composites.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Adds a body to the given composite.\n     * @private\n     * @method addBody\n     * @param {composite} composite\n     * @param {body} body\n     * @return {composite} The original composite with the body added\n     */\n    Composite.addBody = function(composite, body) {\n        composite.bodies.push(body);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeBody\n     * @param {composite} composite\n     * @param {body} body\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the body removed\n     */\n    Composite.removeBody = function(composite, body, deep) {\n        var position = Common.indexOf(composite.bodies, body);\n        if (position !== -1) {\n            Composite.removeBodyAt(composite, position);\n        }\n\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.removeBody(composite.composites[i], body, true);\n            }\n        }\n\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeBodyAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the body removed\n     */\n    Composite.removeBodyAt = function(composite, position) {\n        composite.bodies.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Adds a constraint to the given composite.\n     * @private\n     * @method addConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @return {composite} The original composite with the constraint added\n     */\n    Composite.addConstraint = function(composite, constraint) {\n        composite.constraints.push(constraint);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes a constraint from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the constraint removed\n     */\n    Composite.removeConstraint = function(composite, constraint, deep) {\n        var position = Common.indexOf(composite.constraints, constraint);\n        if (position !== -1) {\n            Composite.removeConstraintAt(composite, position);\n        }\n\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.removeConstraint(composite.composites[i], constraint, true);\n            }\n        }\n\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeConstraintAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the constraint removed\n     */\n    Composite.removeConstraintAt = function(composite, position) {\n        composite.constraints.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes all bodies, constraints and composites from the given composite.\n     * Optionally clearing its children recursively.\n     * @method clear\n     * @param {composite} composite\n     * @param {boolean} keepStatic\n     * @param {boolean} [deep=false]\n     */\n    Composite.clear = function(composite, keepStatic, deep) {\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.clear(composite.composites[i], keepStatic, true);\n            }\n        }\n        \n        if (keepStatic) {\n            composite.bodies = composite.bodies.filter(function(body) { return body.isStatic; });\n        } else {\n            composite.bodies.length = 0;\n        }\n\n        composite.constraints.length = 0;\n        composite.composites.length = 0;\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Returns all bodies in the given composite, including all bodies in its children, recursively.\n     * @method allBodies\n     * @param {composite} composite\n     * @return {body[]} All the bodies\n     */\n    Composite.allBodies = function(composite) {\n        if (composite.cache && composite.cache.allBodies) {\n            return composite.cache.allBodies;\n        }\n\n        var bodies = [].concat(composite.bodies);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            bodies = bodies.concat(Composite.allBodies(composite.composites[i]));\n\n        if (composite.cache) {\n            composite.cache.allBodies = bodies;\n        }\n\n        return bodies;\n    };\n\n    /**\n     * Returns all constraints in the given composite, including all constraints in its children, recursively.\n     * @method allConstraints\n     * @param {composite} composite\n     * @return {constraint[]} All the constraints\n     */\n    Composite.allConstraints = function(composite) {\n        if (composite.cache && composite.cache.allConstraints) {\n            return composite.cache.allConstraints;\n        }\n\n        var constraints = [].concat(composite.constraints);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            constraints = constraints.concat(Composite.allConstraints(composite.composites[i]));\n\n        if (composite.cache) {\n            composite.cache.allConstraints = constraints;\n        }\n\n        return constraints;\n    };\n\n    /**\n     * Returns all composites in the given composite, including all composites in its children, recursively.\n     * @method allComposites\n     * @param {composite} composite\n     * @return {composite[]} All the composites\n     */\n    Composite.allComposites = function(composite) {\n        if (composite.cache && composite.cache.allComposites) {\n            return composite.cache.allComposites;\n        }\n\n        var composites = [].concat(composite.composites);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            composites = composites.concat(Composite.allComposites(composite.composites[i]));\n\n        if (composite.cache) {\n            composite.cache.allComposites = composites;\n        }\n\n        return composites;\n    };\n\n    /**\n     * Searches the composite recursively for an object matching the type and id supplied, null if not found.\n     * @method get\n     * @param {composite} composite\n     * @param {number} id\n     * @param {string} type\n     * @return {object} The requested object, if found\n     */\n    Composite.get = function(composite, id, type) {\n        var objects,\n            object;\n\n        switch (type) {\n        case 'body':\n            objects = Composite.allBodies(composite);\n            break;\n        case 'constraint':\n            objects = Composite.allConstraints(composite);\n            break;\n        case 'composite':\n            objects = Composite.allComposites(composite).concat(composite);\n            break;\n        }\n\n        if (!objects)\n            return null;\n\n        object = objects.filter(function(object) { \n            return object.id.toString() === id.toString(); \n        });\n\n        return object.length === 0 ? null : object[0];\n    };\n\n    /**\n     * Moves the given object(s) from compositeA to compositeB (equal to a remove followed by an add).\n     * @method move\n     * @param {compositeA} compositeA\n     * @param {object[]} objects\n     * @param {compositeB} compositeB\n     * @return {composite} Returns compositeA\n     */\n    Composite.move = function(compositeA, objects, compositeB) {\n        Composite.remove(compositeA, objects);\n        Composite.add(compositeB, objects);\n        return compositeA;\n    };\n\n    /**\n     * Assigns new ids for all objects in the composite, recursively.\n     * @method rebase\n     * @param {composite} composite\n     * @return {composite} Returns composite\n     */\n    Composite.rebase = function(composite) {\n        var objects = Composite.allBodies(composite)\n            .concat(Composite.allConstraints(composite))\n            .concat(Composite.allComposites(composite));\n\n        for (var i = 0; i < objects.length; i++) {\n            objects[i].id = Common.nextId();\n        }\n\n        return composite;\n    };\n\n    /**\n     * Translates all children in the composite by a given vector relative to their current positions, \n     * without imparting any velocity.\n     * @method translate\n     * @param {composite} composite\n     * @param {vector} translation\n     * @param {bool} [recursive=true]\n     */\n    Composite.translate = function(composite, translation, recursive) {\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            Body.translate(bodies[i], translation);\n        }\n\n        return composite;\n    };\n\n    /**\n     * Rotates all children in the composite by a given angle about the given point, without imparting any angular velocity.\n     * @method rotate\n     * @param {composite} composite\n     * @param {number} rotation\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n    Composite.rotate = function(composite, rotation, point, recursive) {\n        var cos = Math.cos(rotation),\n            sin = Math.sin(rotation),\n            bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + (dx * cos - dy * sin),\n                y: point.y + (dx * sin + dy * cos)\n            });\n\n            Body.rotate(body, rotation);\n        }\n\n        return composite;\n    };\n\n    /**\n     * Scales all children in the composite, including updating physical properties (mass, area, axes, inertia), from a world-space point.\n     * @method scale\n     * @param {composite} composite\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n    Composite.scale = function(composite, scaleX, scaleY, point, recursive) {\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + dx * scaleX,\n                y: point.y + dy * scaleY\n            });\n\n            Body.scale(body, scaleX, scaleY);\n        }\n\n        return composite;\n    };\n\n    /**\n     * Returns the union of the bounds of all of the composite's bodies.\n     * @method bounds\n     * @param {composite} composite The composite.\n     * @returns {bounds} The composite bounds.\n     */\n    Composite.bounds = function(composite) {\n        var bodies = Composite.allBodies(composite),\n            vertices = [];\n\n        for (var i = 0; i < bodies.length; i += 1) {\n            var body = bodies[i];\n            vertices.push(body.bounds.min, body.bounds.max);\n        }\n\n        return Bounds.create(vertices);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when a call to `Composite.add` is made, before objects have been added.\n    *\n    * @event beforeAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.add` is made, after objects have been added.\n    *\n    * @event afterAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.remove` is made, before objects have been removed.\n    *\n    * @event beforeRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.remove` is made, after objects have been removed.\n    *\n    * @event afterRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"composite\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage composites.\n     *\n     * @property label\n     * @type string\n     * @default \"Composite\"\n     */\n\n    /**\n     * A flag that specifies whether the composite has been modified during the current step.\n     * This is automatically managed when bodies, constraints or composites are added or removed.\n     *\n     * @property isModified\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * The `Composite` that is the parent of this composite. It is automatically managed by the `Matter.Composite` methods.\n     *\n     * @property parent\n     * @type composite\n     * @default null\n     */\n\n    /**\n     * An array of `Body` that are _direct_ children of this composite.\n     * To add or remove bodies you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allBodies` method.\n     *\n     * @property bodies\n     * @type body[]\n     * @default []\n     */\n\n    /**\n     * An array of `Constraint` that are _direct_ children of this composite.\n     * To add or remove constraints you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allConstraints` method.\n     *\n     * @property constraints\n     * @type constraint[]\n     * @default []\n     */\n\n    /**\n     * An array of `Composite` that are _direct_ children of this composite.\n     * To add or remove composites you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allComposites` method.\n     *\n     * @property composites\n     * @type composite[]\n     * @default []\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n    /**\n     * An object used for storing cached results for performance reasons.\n     * This is used internally only and is automatically managed.\n     *\n     * @private\n     * @property cache\n     * @type {}\n     */\n\n})();\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Body` module contains methods for creating and manipulating body models.\n* A `Matter.Body` is a rigid body that can be simulated by a `Matter.Engine`.\n* Factories for commonly used body configurations (such as rectangles, circles and other polygons) can be found in the module `Matter.Bodies`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n\n* @class Body\n*/\n\nvar Body = {};\n\nmodule.exports = Body;\n\nvar Vertices = __webpack_require__(3);\nvar Vector = __webpack_require__(2);\nvar Sleeping = __webpack_require__(7);\nvar Render = __webpack_require__(16);\nvar Common = __webpack_require__(0);\nvar Bounds = __webpack_require__(1);\nvar Axes = __webpack_require__(11);\n\n(function() {\n\n    Body._inertiaScale = 4;\n    Body._nextCollidingGroupId = 1;\n    Body._nextNonCollidingGroupId = -1;\n    Body._nextCategory = 0x0001;\n\n    /**\n     * Creates a new rigid body model. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * Vertices must be specified in clockwise order.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {body} body\n     */\n    Body.create = function(options) {\n        var defaults = {\n            id: Common.nextId(),\n            type: 'body',\n            label: 'Body',\n            parts: [],\n            plugin: {},\n            angle: 0,\n            vertices: Vertices.fromPath('L 0 0 L 40 0 L 40 40 L 0 40'),\n            position: { x: 0, y: 0 },\n            force: { x: 0, y: 0 },\n            torque: 0,\n            positionImpulse: { x: 0, y: 0 },\n            constraintImpulse: { x: 0, y: 0, angle: 0 },\n            totalContacts: 0,\n            speed: 0,\n            angularSpeed: 0,\n            velocity: { x: 0, y: 0 },\n            angularVelocity: 0,\n            isSensor: false,\n            isStatic: false,\n            isSleeping: false,\n            motion: 0,\n            sleepThreshold: 60,\n            density: 0.001,\n            restitution: 0,\n            friction: 0.1,\n            frictionStatic: 0.5,\n            frictionAir: 0.01,\n            collisionFilter: {\n                category: 0x0001,\n                mask: 0xFFFFFFFF,\n                group: 0\n            },\n            slop: 0.05,\n            timeScale: 1,\n            render: {\n                visible: true,\n                opacity: 1,\n                strokeStyle: null,\n                fillStyle: null,\n                lineWidth: null,\n                sprite: {\n                    xScale: 1,\n                    yScale: 1,\n                    xOffset: 0,\n                    yOffset: 0\n                }\n            },\n            events: null,\n            bounds: null,\n            chamfer: null,\n            circleRadius: 0,\n            positionPrev: null,\n            anglePrev: 0,\n            parent: null,\n            axes: null,\n            area: 0,\n            mass: 0,\n            inertia: 0,\n            _original: null\n        };\n\n        var body = Common.extend(defaults, options);\n\n        _initProperties(body, options);\n\n        return body;\n    };\n\n    /**\n     * Returns the next unique group index for which bodies will collide.\n     * If `isNonColliding` is `true`, returns the next unique group index for which bodies will _not_ collide.\n     * See `body.collisionFilter` for more information.\n     * @method nextGroup\n     * @param {bool} [isNonColliding=false]\n     * @return {Number} Unique group index\n     */\n    Body.nextGroup = function(isNonColliding) {\n        if (isNonColliding)\n            return Body._nextNonCollidingGroupId--;\n\n        return Body._nextCollidingGroupId++;\n    };\n\n    /**\n     * Returns the next unique category bitfield (starting after the initial default category `0x0001`).\n     * There are 32 available. See `body.collisionFilter` for more information.\n     * @method nextCategory\n     * @return {Number} Unique category bitfield\n     */\n    Body.nextCategory = function() {\n        Body._nextCategory = Body._nextCategory << 1;\n        return Body._nextCategory;\n    };\n\n    /**\n     * Initialises body properties.\n     * @method _initProperties\n     * @private\n     * @param {body} body\n     * @param {} [options]\n     */\n    var _initProperties = function(body, options) {\n        options = options || {};\n\n        // init required properties (order is important)\n        Body.set(body, {\n            bounds: body.bounds || Bounds.create(body.vertices),\n            positionPrev: body.positionPrev || Vector.clone(body.position),\n            anglePrev: body.anglePrev || body.angle,\n            vertices: body.vertices,\n            parts: body.parts || [body],\n            isStatic: body.isStatic,\n            isSleeping: body.isSleeping,\n            parent: body.parent || body\n        });\n\n        Vertices.rotate(body.vertices, body.angle, body.position);\n        Axes.rotate(body.axes, body.angle);\n        Bounds.update(body.bounds, body.vertices, body.velocity);\n\n        // allow options to override the automatically calculated properties\n        Body.set(body, {\n            axes: options.axes || body.axes,\n            area: options.area || body.area,\n            mass: options.mass || body.mass,\n            inertia: options.inertia || body.inertia\n        });\n\n        // render properties\n        var defaultFillStyle = (body.isStatic ? '#14151f' : Common.choose(['#f19648', '#f5d259', '#f55a3c', '#063e7b', '#ececd1'])),\n            defaultStrokeStyle = body.isStatic ? '#555' : '#ccc',\n            defaultLineWidth = body.isStatic && body.render.fillStyle === null ? 1 : 0;\n        body.render.fillStyle = body.render.fillStyle || defaultFillStyle;\n        body.render.strokeStyle = body.render.strokeStyle || defaultStrokeStyle;\n        body.render.lineWidth = body.render.lineWidth || defaultLineWidth;\n        body.render.sprite.xOffset += -(body.bounds.min.x - body.position.x) / (body.bounds.max.x - body.bounds.min.x);\n        body.render.sprite.yOffset += -(body.bounds.min.y - body.position.y) / (body.bounds.max.y - body.bounds.min.y);\n    };\n\n    /**\n     * Given a property and a value (or map of), sets the property(s) on the body, using the appropriate setter functions if they exist.\n     * Prefer to use the actual setter functions in performance critical situations.\n     * @method set\n     * @param {body} body\n     * @param {} settings A property name (or map of properties and values) to set on the body.\n     * @param {} value The value to set if `settings` is a single property name.\n     */\n    Body.set = function(body, settings, value) {\n        var property;\n\n        if (typeof settings === 'string') {\n            property = settings;\n            settings = {};\n            settings[property] = value;\n        }\n\n        for (property in settings) {\n            if (!Object.prototype.hasOwnProperty.call(settings, property))\n                continue;\n\n            value = settings[property];\n            switch (property) {\n\n            case 'isStatic':\n                Body.setStatic(body, value);\n                break;\n            case 'isSleeping':\n                Sleeping.set(body, value);\n                break;\n            case 'mass':\n                Body.setMass(body, value);\n                break;\n            case 'density':\n                Body.setDensity(body, value);\n                break;\n            case 'inertia':\n                Body.setInertia(body, value);\n                break;\n            case 'vertices':\n                Body.setVertices(body, value);\n                break;\n            case 'position':\n                Body.setPosition(body, value);\n                break;\n            case 'angle':\n                Body.setAngle(body, value);\n                break;\n            case 'velocity':\n                Body.setVelocity(body, value);\n                break;\n            case 'angularVelocity':\n                Body.setAngularVelocity(body, value);\n                break;\n            case 'parts':\n                Body.setParts(body, value);\n                break;\n            case 'centre':\n                Body.setCentre(body, value);\n                break;\n            default:\n                body[property] = value;\n\n            }\n        }\n    };\n\n    /**\n     * Sets the body as static, including isStatic flag and setting mass and inertia to Infinity.\n     * @method setStatic\n     * @param {body} body\n     * @param {bool} isStatic\n     */\n    Body.setStatic = function(body, isStatic) {\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.isStatic = isStatic;\n\n            if (isStatic) {\n                part._original = {\n                    restitution: part.restitution,\n                    friction: part.friction,\n                    mass: part.mass,\n                    inertia: part.inertia,\n                    density: part.density,\n                    inverseMass: part.inverseMass,\n                    inverseInertia: part.inverseInertia\n                };\n\n                part.restitution = 0;\n                part.friction = 1;\n                part.mass = part.inertia = part.density = Infinity;\n                part.inverseMass = part.inverseInertia = 0;\n\n                part.positionPrev.x = part.position.x;\n                part.positionPrev.y = part.position.y;\n                part.anglePrev = part.angle;\n                part.angularVelocity = 0;\n                part.speed = 0;\n                part.angularSpeed = 0;\n                part.motion = 0;\n            } else if (part._original) {\n                part.restitution = part._original.restitution;\n                part.friction = part._original.friction;\n                part.mass = part._original.mass;\n                part.inertia = part._original.inertia;\n                part.density = part._original.density;\n                part.inverseMass = part._original.inverseMass;\n                part.inverseInertia = part._original.inverseInertia;\n\n                part._original = null;\n            }\n        }\n    };\n\n    /**\n     * Sets the mass of the body. Inverse mass, density and inertia are automatically updated to reflect the change.\n     * @method setMass\n     * @param {body} body\n     * @param {number} mass\n     */\n    Body.setMass = function(body, mass) {\n        var moment = body.inertia / (body.mass / 6);\n        body.inertia = moment * (mass / 6);\n        body.inverseInertia = 1 / body.inertia;\n\n        body.mass = mass;\n        body.inverseMass = 1 / body.mass;\n        body.density = body.mass / body.area;\n    };\n\n    /**\n     * Sets the density of the body. Mass and inertia are automatically updated to reflect the change.\n     * @method setDensity\n     * @param {body} body\n     * @param {number} density\n     */\n    Body.setDensity = function(body, density) {\n        Body.setMass(body, density * body.area);\n        body.density = density;\n    };\n\n    /**\n     * Sets the moment of inertia (i.e. second moment of area) of the body. \n     * Inverse inertia is automatically updated to reflect the change. Mass is not changed.\n     * @method setInertia\n     * @param {body} body\n     * @param {number} inertia\n     */\n    Body.setInertia = function(body, inertia) {\n        body.inertia = inertia;\n        body.inverseInertia = 1 / body.inertia;\n    };\n\n    /**\n     * Sets the body's vertices and updates body properties accordingly, including inertia, area and mass (with respect to `body.density`).\n     * Vertices will be automatically transformed to be orientated around their centre of mass as the origin.\n     * They are then automatically translated to world space based on `body.position`.\n     *\n     * The `vertices` argument should be passed as an array of `Matter.Vector` points (or a `Matter.Vertices` array).\n     * Vertices must form a convex hull, concave hulls are not supported.\n     *\n     * @method setVertices\n     * @param {body} body\n     * @param {vector[]} vertices\n     */\n    Body.setVertices = function(body, vertices) {\n        // change vertices\n        if (vertices[0].body === body) {\n            body.vertices = vertices;\n        } else {\n            body.vertices = Vertices.create(vertices, body);\n        }\n\n        // update properties\n        body.axes = Axes.fromVertices(body.vertices);\n        body.area = Vertices.area(body.vertices);\n        Body.setMass(body, body.density * body.area);\n\n        // orient vertices around the centre of mass at origin (0, 0)\n        var centre = Vertices.centre(body.vertices);\n        Vertices.translate(body.vertices, centre, -1);\n\n        // update inertia while vertices are at origin (0, 0)\n        Body.setInertia(body, Body._inertiaScale * Vertices.inertia(body.vertices, body.mass));\n\n        // update geometry\n        Vertices.translate(body.vertices, body.position);\n        Bounds.update(body.bounds, body.vertices, body.velocity);\n    };\n\n    /**\n     * Sets the parts of the `body` and updates mass, inertia and centroid.\n     * Each part will have its parent set to `body`.\n     * By default the convex hull will be automatically computed and set on `body`, unless `autoHull` is set to `false.`\n     * Note that this method will ensure that the first part in `body.parts` will always be the `body`.\n     * @method setParts\n     * @param {body} body\n     * @param [body] parts\n     * @param {bool} [autoHull=true]\n     */\n    Body.setParts = function(body, parts, autoHull) {\n        var i;\n\n        // add all the parts, ensuring that the first part is always the parent body\n        parts = parts.slice(0);\n        body.parts.length = 0;\n        body.parts.push(body);\n        body.parent = body;\n\n        for (i = 0; i < parts.length; i++) {\n            var part = parts[i];\n            if (part !== body) {\n                part.parent = body;\n                body.parts.push(part);\n            }\n        }\n\n        if (body.parts.length === 1)\n            return;\n\n        autoHull = typeof autoHull !== 'undefined' ? autoHull : true;\n\n        // find the convex hull of all parts to set on the parent body\n        if (autoHull) {\n            var vertices = [];\n            for (i = 0; i < parts.length; i++) {\n                vertices = vertices.concat(parts[i].vertices);\n            }\n\n            Vertices.clockwiseSort(vertices);\n\n            var hull = Vertices.hull(vertices),\n                hullCentre = Vertices.centre(hull);\n\n            Body.setVertices(body, hull);\n            Vertices.translate(body.vertices, hullCentre);\n        }\n\n        // sum the properties of all compound parts of the parent body\n        var total = Body._totalProperties(body);\n\n        body.area = total.area;\n        body.parent = body;\n        body.position.x = total.centre.x;\n        body.position.y = total.centre.y;\n        body.positionPrev.x = total.centre.x;\n        body.positionPrev.y = total.centre.y;\n\n        Body.setMass(body, total.mass);\n        Body.setInertia(body, total.inertia);\n        Body.setPosition(body, total.centre);\n    };\n\n    /**\n     * Set the centre of mass of the body. \n     * The `centre` is a vector in world-space unless `relative` is set, in which case it is a translation.\n     * The centre of mass is the point the body rotates about and can be used to simulate non-uniform density.\n     * This is equal to moving `body.position` but not the `body.vertices`.\n     * Invalid if the `centre` falls outside the body's convex hull.\n     * @method setCentre\n     * @param {body} body\n     * @param {vector} centre\n     * @param {bool} relative\n     */\n    Body.setCentre = function(body, centre, relative) {\n        if (!relative) {\n            body.positionPrev.x = centre.x - (body.position.x - body.positionPrev.x);\n            body.positionPrev.y = centre.y - (body.position.y - body.positionPrev.y);\n            body.position.x = centre.x;\n            body.position.y = centre.y;\n        } else {\n            body.positionPrev.x += centre.x;\n            body.positionPrev.y += centre.y;\n            body.position.x += centre.x;\n            body.position.y += centre.y;\n        }\n    };\n\n    /**\n     * Sets the position of the body instantly. Velocity, angle, force etc. are unchanged.\n     * @method setPosition\n     * @param {body} body\n     * @param {vector} position\n     */\n    Body.setPosition = function(body, position) {\n        var delta = Vector.sub(position, body.position);\n        body.positionPrev.x += delta.x;\n        body.positionPrev.y += delta.y;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.position.x += delta.x;\n            part.position.y += delta.y;\n            Vertices.translate(part.vertices, delta);\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n    };\n\n    /**\n     * Sets the angle of the body instantly. Angular velocity, position, force etc. are unchanged.\n     * @method setAngle\n     * @param {body} body\n     * @param {number} angle\n     */\n    Body.setAngle = function(body, angle) {\n        var delta = angle - body.angle;\n        body.anglePrev += delta;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.angle += delta;\n            Vertices.rotate(part.vertices, delta, body.position);\n            Axes.rotate(part.axes, delta);\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n            if (i > 0) {\n                Vector.rotateAbout(part.position, delta, body.position, part.position);\n            }\n        }\n    };\n\n    /**\n     * Sets the linear velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n     * @method setVelocity\n     * @param {body} body\n     * @param {vector} velocity\n     */\n    Body.setVelocity = function(body, velocity) {\n        body.positionPrev.x = body.position.x - velocity.x;\n        body.positionPrev.y = body.position.y - velocity.y;\n        body.velocity.x = velocity.x;\n        body.velocity.y = velocity.y;\n        body.speed = Vector.magnitude(body.velocity);\n    };\n\n    /**\n     * Sets the angular velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n     * @method setAngularVelocity\n     * @param {body} body\n     * @param {number} velocity\n     */\n    Body.setAngularVelocity = function(body, velocity) {\n        body.anglePrev = body.angle - velocity;\n        body.angularVelocity = velocity;\n        body.angularSpeed = Math.abs(body.angularVelocity);\n    };\n\n    /**\n     * Moves a body by a given vector relative to its current position, without imparting any velocity.\n     * @method translate\n     * @param {body} body\n     * @param {vector} translation\n     */\n    Body.translate = function(body, translation) {\n        Body.setPosition(body, Vector.add(body.position, translation));\n    };\n\n    /**\n     * Rotates a body by a given angle relative to its current angle, without imparting any angular velocity.\n     * @method rotate\n     * @param {body} body\n     * @param {number} rotation\n     * @param {vector} [point]\n     */\n    Body.rotate = function(body, rotation, point) {\n        if (!point) {\n            Body.setAngle(body, body.angle + rotation);\n        } else {\n            var cos = Math.cos(rotation),\n                sin = Math.sin(rotation),\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + (dx * cos - dy * sin),\n                y: point.y + (dx * sin + dy * cos)\n            });\n\n            Body.setAngle(body, body.angle + rotation);\n        }\n    };\n\n    /**\n     * Scales the body, including updating physical properties (mass, area, axes, inertia), from a world-space point (default is body centre).\n     * @method scale\n     * @param {body} body\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} [point]\n     */\n    Body.scale = function(body, scaleX, scaleY, point) {\n        var totalArea = 0,\n            totalInertia = 0;\n\n        point = point || body.position;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n\n            // scale vertices\n            Vertices.scale(part.vertices, scaleX, scaleY, point);\n\n            // update properties\n            part.axes = Axes.fromVertices(part.vertices);\n            part.area = Vertices.area(part.vertices);\n            Body.setMass(part, body.density * part.area);\n\n            // update inertia (requires vertices to be at origin)\n            Vertices.translate(part.vertices, { x: -part.position.x, y: -part.position.y });\n            Body.setInertia(part, Body._inertiaScale * Vertices.inertia(part.vertices, part.mass));\n            Vertices.translate(part.vertices, { x: part.position.x, y: part.position.y });\n\n            if (i > 0) {\n                totalArea += part.area;\n                totalInertia += part.inertia;\n            }\n\n            // scale position\n            part.position.x = point.x + (part.position.x - point.x) * scaleX;\n            part.position.y = point.y + (part.position.y - point.y) * scaleY;\n\n            // update bounds\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n\n        // handle parent body\n        if (body.parts.length > 1) {\n            body.area = totalArea;\n\n            if (!body.isStatic) {\n                Body.setMass(body, body.density * totalArea);\n                Body.setInertia(body, totalInertia);\n            }\n        }\n\n        // handle circles\n        if (body.circleRadius) { \n            if (scaleX === scaleY) {\n                body.circleRadius *= scaleX;\n            } else {\n                // body is no longer a circle\n                body.circleRadius = null;\n            }\n        }\n    };\n\n    /**\n     * Performs a simulation step for the given `body`, including updating position and angle using Verlet integration.\n     * @method update\n     * @param {body} body\n     * @param {number} deltaTime\n     * @param {number} timeScale\n     * @param {number} correction\n     */\n    Body.update = function(body, deltaTime, timeScale, correction) {\n        var deltaTimeSquared = Math.pow(deltaTime * timeScale * body.timeScale, 2);\n\n        // from the previous step\n        var frictionAir = 1 - body.frictionAir * timeScale * body.timeScale,\n            velocityPrevX = body.position.x - body.positionPrev.x,\n            velocityPrevY = body.position.y - body.positionPrev.y;\n\n        // update velocity with Verlet integration\n        body.velocity.x = (velocityPrevX * frictionAir * correction) + (body.force.x / body.mass) * deltaTimeSquared;\n        body.velocity.y = (velocityPrevY * frictionAir * correction) + (body.force.y / body.mass) * deltaTimeSquared;\n\n        body.positionPrev.x = body.position.x;\n        body.positionPrev.y = body.position.y;\n        body.position.x += body.velocity.x;\n        body.position.y += body.velocity.y;\n\n        // update angular velocity with Verlet integration\n        body.angularVelocity = ((body.angle - body.anglePrev) * frictionAir * correction) + (body.torque / body.inertia) * deltaTimeSquared;\n        body.anglePrev = body.angle;\n        body.angle += body.angularVelocity;\n\n        // track speed and acceleration\n        body.speed = Vector.magnitude(body.velocity);\n        body.angularSpeed = Math.abs(body.angularVelocity);\n\n        // transform the body geometry\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n\n            Vertices.translate(part.vertices, body.velocity);\n            \n            if (i > 0) {\n                part.position.x += body.velocity.x;\n                part.position.y += body.velocity.y;\n            }\n\n            if (body.angularVelocity !== 0) {\n                Vertices.rotate(part.vertices, body.angularVelocity, body.position);\n                Axes.rotate(part.axes, body.angularVelocity);\n                if (i > 0) {\n                    Vector.rotateAbout(part.position, body.angularVelocity, body.position, part.position);\n                }\n            }\n\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n    };\n\n    /**\n     * Applies a force to a body from a given world-space position, including resulting torque.\n     * @method applyForce\n     * @param {body} body\n     * @param {vector} position\n     * @param {vector} force\n     */\n    Body.applyForce = function(body, position, force) {\n        body.force.x += force.x;\n        body.force.y += force.y;\n        var offset = { x: position.x - body.position.x, y: position.y - body.position.y };\n        body.torque += offset.x * force.y - offset.y * force.x;\n    };\n\n    /**\n     * Returns the sums of the properties of all compound parts of the parent body.\n     * @method _totalProperties\n     * @private\n     * @param {body} body\n     * @return {}\n     */\n    Body._totalProperties = function(body) {\n        // from equations at:\n        // https://ecourses.ou.edu/cgi-bin/ebook.cgi?doc=&topic=st&chap_sec=07.2&page=theory\n        // http://output.to/sideway/default.asp?qno=121100087\n\n        var properties = {\n            mass: 0,\n            area: 0,\n            inertia: 0,\n            centre: { x: 0, y: 0 }\n        };\n\n        // sum the properties of all compound parts of the parent body\n        for (var i = body.parts.length === 1 ? 0 : 1; i < body.parts.length; i++) {\n            var part = body.parts[i],\n                mass = part.mass !== Infinity ? part.mass : 1;\n\n            properties.mass += mass;\n            properties.area += part.area;\n            properties.inertia += part.inertia;\n            properties.centre = Vector.add(properties.centre, Vector.mult(part.position, mass));\n        }\n\n        properties.centre = Vector.div(properties.centre, properties.mass);\n\n        return properties;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when a body starts sleeping (where `this` is the body).\n    *\n    * @event sleepStart\n    * @this {body} The body that has started sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a body ends sleeping (where `this` is the body).\n    *\n    * @event sleepEnd\n    * @this {body} The body that has ended sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Body.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"body\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Body\"\n     */\n\n    /**\n     * An array of bodies that make up this body. \n     * The first body in the array must always be a self reference to the current body instance.\n     * All bodies in the `parts` array together form a single rigid compound body.\n     * Parts are allowed to overlap, have gaps or holes or even form concave bodies.\n     * Parts themselves should never be added to a `World`, only the parent body should be.\n     * Use `Body.setParts` when setting parts to ensure correct updates of all properties.\n     *\n     * @property parts\n     * @type body[]\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n    /**\n     * A self reference if the body is _not_ a part of another body.\n     * Otherwise this is a reference to the body that this is a part of.\n     * See `body.parts`.\n     *\n     * @property parent\n     * @type body\n     */\n\n    /**\n     * A `Number` specifying the angle of the body, in radians.\n     *\n     * @property angle\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * An array of `Vector` objects that specify the convex hull of the rigid body.\n     * These should be provided about the origin `(0, 0)`. E.g.\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * When passed via `Body.create`, the vertices are translated relative to `body.position` (i.e. world-space, and constantly updated by `Body.update` during simulation).\n     * The `Vector` objects are also augmented with additional properties required for efficient collision detection. \n     *\n     * Other properties such as `inertia` and `bounds` are automatically calculated from the passed vertices (unless provided via `options`).\n     * Concave hulls are not currently supported. The module `Matter.Vertices` contains useful methods for working with vertices.\n     *\n     * @property vertices\n     * @type vector[]\n     */\n\n    /**\n     * A `Vector` that specifies the current world-space position of the body.\n     *\n     * @property position\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Vector` that specifies the force to apply in the current step. It is zeroed after every `Body.update`. See also `Body.applyForce`.\n     *\n     * @property force\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that specifies the torque (turning force) to apply in the current step. It is zeroed after every `Body.update`.\n     *\n     * @property torque\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that _measures_ the current speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.velocity`).\n     *\n     * @readOnly\n     * @property speed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that _measures_ the current angular speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.angularVelocity`).\n     *\n     * @readOnly\n     * @property angularSpeed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Vector` that _measures_ the current velocity of the body after the last `Body.update`. It is read-only. \n     * If you need to modify a body's velocity directly, you should either apply a force or simply change the body's `position` (as the engine uses position-Verlet integration).\n     *\n     * @readOnly\n     * @property velocity\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that _measures_ the current angular velocity of the body after the last `Body.update`. It is read-only. \n     * If you need to modify a body's angular velocity directly, you should apply a torque or simply change the body's `angle` (as the engine uses position-Verlet integration).\n     *\n     * @readOnly\n     * @property angularVelocity\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A flag that indicates whether a body is considered static. A static body can never change position or angle and is completely fixed.\n     * If you need to set a body as static after its creation, you should use `Body.setStatic` as this requires more than just setting this flag.\n     *\n     * @property isStatic\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag that indicates whether a body is a sensor. Sensor triggers collision events, but doesn't react with colliding body physically.\n     *\n     * @property isSensor\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag that indicates whether the body is considered sleeping. A sleeping body acts similar to a static body, except it is only temporary and can be awoken.\n     * If you need to set a body as sleeping, you should use `Sleeping.set` as this requires more than just setting this flag.\n     *\n     * @property isSleeping\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Number` that _measures_ the amount of movement a body currently has (a combination of `speed` and `angularSpeed`). It is read-only and always positive.\n     * It is used and updated by the `Matter.Sleeping` module during simulation to decide if a body has come to rest.\n     *\n     * @readOnly\n     * @property motion\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that defines the number of updates in which this body must have near-zero velocity before it is set as sleeping by the `Matter.Sleeping` module (if sleeping is enabled by the engine).\n     *\n     * @property sleepThreshold\n     * @type number\n     * @default 60\n     */\n\n    /**\n     * A `Number` that defines the density of the body, that is its mass per unit area.\n     * If you pass the density via `Body.create` the `mass` property is automatically calculated for you based on the size (area) of the object.\n     * This is generally preferable to simply setting mass and allows for more intuitive definition of materials (e.g. rock has a higher density than wood).\n     *\n     * @property density\n     * @type number\n     * @default 0.001\n     */\n\n    /**\n     * A `Number` that defines the mass of the body, although it may be more appropriate to specify the `density` property instead.\n     * If you modify this value, you must also modify the `body.inverseMass` property (`1 / mass`).\n     *\n     * @property mass\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the inverse mass of the body (`1 / mass`).\n     * If you modify this value, you must also modify the `body.mass` property.\n     *\n     * @property inverseMass\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the moment of inertia (i.e. second moment of area) of the body.\n     * It is automatically calculated from the given convex hull (`vertices` array) and density in `Body.create`.\n     * If you modify this value, you must also modify the `body.inverseInertia` property (`1 / inertia`).\n     *\n     * @property inertia\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the inverse moment of inertia of the body (`1 / inertia`).\n     * If you modify this value, you must also modify the `body.inertia` property.\n     *\n     * @property inverseInertia\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the restitution (elasticity) of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means collisions may be perfectly inelastic and no bouncing may occur. \n     * A value of `0.8` means the body may bounce back with approximately 80% of its kinetic energy.\n     * Note that collision response is based on _pairs_ of bodies, and that `restitution` values are _combined_ with the following formula:\n     *\n     *     Math.max(bodyA.restitution, bodyB.restitution)\n     *\n     * @property restitution\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that defines the friction of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means that the body may slide indefinitely.\n     * A value of `1` means the body may come to a stop almost instantly after a force is applied.\n     *\n     * The effects of the value may be non-linear. \n     * High values may be unstable depending on the body.\n     * The engine uses a Coulomb friction model including static and kinetic friction.\n     * Note that collision response is based on _pairs_ of bodies, and that `friction` values are _combined_ with the following formula:\n     *\n     *     Math.min(bodyA.friction, bodyB.friction)\n     *\n     * @property friction\n     * @type number\n     * @default 0.1\n     */\n\n    /**\n     * A `Number` that defines the static friction of the body (in the Coulomb friction model). \n     * A value of `0` means the body will never 'stick' when it is nearly stationary and only dynamic `friction` is used.\n     * The higher the value (e.g. `10`), the more force it will take to initially get the body moving when nearly stationary.\n     * This value is multiplied with the `friction` property to make it easier to change `friction` and maintain an appropriate amount of static friction.\n     *\n     * @property frictionStatic\n     * @type number\n     * @default 0.5\n     */\n\n    /**\n     * A `Number` that defines the air friction of the body (air resistance). \n     * A value of `0` means the body will never slow as it moves through space.\n     * The higher the value, the faster a body slows when moving through space.\n     * The effects of the value are non-linear. \n     *\n     * @property frictionAir\n     * @type number\n     * @default 0.01\n     */\n\n    /**\n     * An `Object` that specifies the collision filtering properties of this body.\n     *\n     * Collisions between two bodies will obey the following rules:\n     * - If the two bodies have the same non-zero value of `collisionFilter.group`,\n     *   they will always collide if the value is positive, and they will never collide\n     *   if the value is negative.\n     * - If the two bodies have different values of `collisionFilter.group` or if one\n     *   (or both) of the bodies has a value of 0, then the category/mask rules apply as follows:\n     *\n     * Each body belongs to a collision category, given by `collisionFilter.category`. This\n     * value is used as a bit field and the category should have only one bit set, meaning that\n     * the value of this property is a power of two in the range [1, 2^31]. Thus, there are 32\n     * different collision categories available.\n     *\n     * Each body also defines a collision bitmask, given by `collisionFilter.mask` which specifies\n     * the categories it collides with (the value is the bitwise AND value of all these categories).\n     *\n     * Using the category/mask rules, two bodies `A` and `B` collide if each includes the other's\n     * category in its mask, i.e. `(categoryA & maskB) !== 0` and `(categoryB & maskA) !== 0`\n     * are both true.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n    /**\n     * An Integer `Number`, that specifies the collision group this body belongs to.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.group\n     * @type object\n     * @default 0\n     */\n\n    /**\n     * A bit field that specifies the collision category this body belongs to.\n     * The category value should have only one bit set, for example `0x0001`.\n     * This means there are up to 32 unique collision categories available.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.category\n     * @type object\n     * @default 1\n     */\n\n    /**\n     * A bit mask that specifies the collision categories this body may collide with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.mask\n     * @type object\n     * @default -1\n     */\n\n    /**\n     * A `Number` that specifies a tolerance on how far a body is allowed to 'sink' or rotate into other bodies.\n     * Avoid changing this value unless you understand the purpose of `slop` in physics engines.\n     * The default should generally suffice, although very large bodies may require larger values for stable stacking.\n     *\n     * @property slop\n     * @type number\n     * @default 0.05\n     */\n\n    /**\n     * A `Number` that allows per-body time scaling, e.g. a force-field where bodies inside are in slow-motion, while others are at full speed.\n     *\n     * @property timeScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n    /**\n     * A flag that indicates if the body should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * Sets the opacity to use when rendering.\n     *\n     * @property render.opacity\n     * @type number\n     * @default 1\n    */\n\n    /**\n     * An `Object` that defines the sprite properties to use when rendering, if any.\n     *\n     * @property render.sprite\n     * @type object\n     */\n\n    /**\n     * An `String` that defines the path to the image to use as the sprite texture, if any.\n     *\n     * @property render.sprite.texture\n     * @type string\n     */\n     \n    /**\n     * A `Number` that defines the scaling in the x-axis for the sprite, if any.\n     *\n     * @property render.sprite.xScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that defines the scaling in the y-axis for the sprite, if any.\n     *\n     * @property render.sprite.yScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n      * A `Number` that defines the offset in the x-axis for the sprite (normalised by texture width).\n      *\n      * @property render.sprite.xOffset\n      * @type number\n      * @default 0\n      */\n\n    /**\n      * A `Number` that defines the offset in the y-axis for the sprite (normalised by texture height).\n      *\n      * @property render.sprite.yOffset\n      * @type number\n      * @default 0\n      */\n\n    /**\n     * A `Number` that defines the line width to use when rendering the body outline (if a sprite is not defined).\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `String` that defines the fill style to use when rendering the body (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.fillStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * A `String` that defines the stroke style to use when rendering the body outline (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * An array of unique axis vectors (edge normals) used for collision detection.\n     * These are automatically calculated from the given convex hull (`vertices` array) in `Body.create`.\n     * They are constantly updated by `Body.update` during the simulation.\n     *\n     * @property axes\n     * @type vector[]\n     */\n     \n    /**\n     * A `Number` that _measures_ the area of the body's convex hull, calculated at creation by `Body.create`.\n     *\n     * @property area\n     * @type string\n     * @default \n     */\n\n    /**\n     * A `Bounds` object that defines the AABB region for the body.\n     * It is automatically calculated from the given convex hull (`vertices` array) in `Body.create` and constantly updated by `Body.update` during simulation.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n})();\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Sleeping` module contains methods to manage the sleeping state of bodies.\n*\n* @class Sleeping\n*/\n\nvar Sleeping = {};\n\nmodule.exports = Sleeping;\n\nvar Events = __webpack_require__(4);\n\n(function() {\n\n    Sleeping._motionWakeThreshold = 0.18;\n    Sleeping._motionSleepThreshold = 0.08;\n    Sleeping._minBias = 0.9;\n\n    /**\n     * Puts bodies to sleep or wakes them up depending on their motion.\n     * @method update\n     * @param {body[]} bodies\n     * @param {number} timeScale\n     */\n    Sleeping.update = function(bodies, timeScale) {\n        var timeFactor = timeScale * timeScale * timeScale;\n\n        // update bodies sleeping status\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                motion = body.speed * body.speed + body.angularSpeed * body.angularSpeed;\n\n            // wake up bodies if they have a force applied\n            if (body.force.x !== 0 || body.force.y !== 0) {\n                Sleeping.set(body, false);\n                continue;\n            }\n\n            var minMotion = Math.min(body.motion, motion),\n                maxMotion = Math.max(body.motion, motion);\n        \n            // biased average motion estimation between frames\n            body.motion = Sleeping._minBias * minMotion + (1 - Sleeping._minBias) * maxMotion;\n            \n            if (body.sleepThreshold > 0 && body.motion < Sleeping._motionSleepThreshold * timeFactor) {\n                body.sleepCounter += 1;\n                \n                if (body.sleepCounter >= body.sleepThreshold)\n                    Sleeping.set(body, true);\n            } else if (body.sleepCounter > 0) {\n                body.sleepCounter -= 1;\n            }\n        }\n    };\n\n    /**\n     * Given a set of colliding pairs, wakes the sleeping bodies involved.\n     * @method afterCollisions\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Sleeping.afterCollisions = function(pairs, timeScale) {\n        var timeFactor = timeScale * timeScale * timeScale;\n\n        // wake up bodies involved in collisions\n        for (var i = 0; i < pairs.length; i++) {\n            var pair = pairs[i];\n            \n            // don't wake inactive pairs\n            if (!pair.isActive)\n                continue;\n\n            var collision = pair.collision,\n                bodyA = collision.bodyA.parent, \n                bodyB = collision.bodyB.parent;\n        \n            // don't wake if at least one body is static\n            if ((bodyA.isSleeping && bodyB.isSleeping) || bodyA.isStatic || bodyB.isStatic)\n                continue;\n        \n            if (bodyA.isSleeping || bodyB.isSleeping) {\n                var sleepingBody = (bodyA.isSleeping && !bodyA.isStatic) ? bodyA : bodyB,\n                    movingBody = sleepingBody === bodyA ? bodyB : bodyA;\n\n                if (!sleepingBody.isStatic && movingBody.motion > Sleeping._motionWakeThreshold * timeFactor) {\n                    Sleeping.set(sleepingBody, false);\n                }\n            }\n        }\n    };\n  \n    /**\n     * Set a body as sleeping or awake.\n     * @method set\n     * @param {body} body\n     * @param {boolean} isSleeping\n     */\n    Sleeping.set = function(body, isSleeping) {\n        var wasSleeping = body.isSleeping;\n\n        if (isSleeping) {\n            body.isSleeping = true;\n            body.sleepCounter = body.sleepThreshold;\n\n            body.positionImpulse.x = 0;\n            body.positionImpulse.y = 0;\n\n            body.positionPrev.x = body.position.x;\n            body.positionPrev.y = body.position.y;\n\n            body.anglePrev = body.angle;\n            body.speed = 0;\n            body.angularSpeed = 0;\n            body.motion = 0;\n\n            if (!wasSleeping) {\n                Events.trigger(body, 'sleepStart');\n            }\n        } else {\n            body.isSleeping = false;\n            body.sleepCounter = 0;\n\n            if (wasSleeping) {\n                Events.trigger(body, 'sleepEnd');\n            }\n        }\n    };\n\n})();\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Collision` module contains methods for detecting collisions between a given pair of bodies.\n*\n* For efficient detection between a list of bodies, see `Matter.Detector` and `Matter.Query`.\n*\n* See `Matter.Engine` for collision events.\n*\n* @class Collision\n*/\n\nvar Collision = {};\n\nmodule.exports = Collision;\n\nvar Vertices = __webpack_require__(3);\nvar Pair = __webpack_require__(9);\n\n(function() {\n    var _supports = [];\n\n    var _overlapAB = {\n        overlap: 0,\n        axis: null\n    };\n\n    var _overlapBA = {\n        overlap: 0,\n        axis: null\n    };\n\n    /**\n     * Creates a new collision record.\n     * @method create\n     * @param {body} bodyA The first body part represented by the collision record\n     * @param {body} bodyB The second body part represented by the collision record\n     * @return {collision} A new collision record\n     */\n    Collision.create = function(bodyA, bodyB) {\n        return { \n            pair: null,\n            collided: false,\n            bodyA: bodyA,\n            bodyB: bodyB,\n            parentA: bodyA.parent,\n            parentB: bodyB.parent,\n            depth: 0,\n            normal: { x: 0, y: 0 },\n            tangent: { x: 0, y: 0 },\n            penetration: { x: 0, y: 0 },\n            supports: []\n        };\n    };\n\n    /**\n     * Detect collision between two bodies.\n     * @method collides\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @param {pairs} [pairs] Optionally reuse collision records from existing pairs.\n     * @return {collision|null} A collision record if detected, otherwise null\n     */\n    Collision.collides = function(bodyA, bodyB, pairs) {\n        Collision._overlapAxes(_overlapAB, bodyA.vertices, bodyB.vertices, bodyA.axes);\n\n        if (_overlapAB.overlap <= 0) {\n            return null;\n        }\n\n        Collision._overlapAxes(_overlapBA, bodyB.vertices, bodyA.vertices, bodyB.axes);\n\n        if (_overlapBA.overlap <= 0) {\n            return null;\n        }\n\n        // reuse collision records for gc efficiency\n        var pair = pairs && pairs.table[Pair.id(bodyA, bodyB)],\n            collision;\n\n        if (!pair) {\n            collision = Collision.create(bodyA, bodyB);\n            collision.collided = true;\n            collision.bodyA = bodyA.id < bodyB.id ? bodyA : bodyB;\n            collision.bodyB = bodyA.id < bodyB.id ? bodyB : bodyA;\n            collision.parentA = collision.bodyA.parent;\n            collision.parentB = collision.bodyB.parent;\n        } else {\n            collision = pair.collision;\n        }\n\n        bodyA = collision.bodyA;\n        bodyB = collision.bodyB;\n\n        var minOverlap;\n\n        if (_overlapAB.overlap < _overlapBA.overlap) {\n            minOverlap = _overlapAB;\n        } else {\n            minOverlap = _overlapBA;\n        }\n\n        var normal = collision.normal,\n            supports = collision.supports,\n            minAxis = minOverlap.axis,\n            minAxisX = minAxis.x,\n            minAxisY = minAxis.y;\n\n        // ensure normal is facing away from bodyA\n        if (minAxisX * (bodyB.position.x - bodyA.position.x) + minAxisY * (bodyB.position.y - bodyA.position.y) < 0) {\n            normal.x = minAxisX;\n            normal.y = minAxisY;\n        } else {\n            normal.x = -minAxisX;\n            normal.y = -minAxisY;\n        }\n        \n        collision.tangent.x = -normal.y;\n        collision.tangent.y = normal.x;\n\n        collision.depth = minOverlap.overlap;\n\n        collision.penetration.x = normal.x * collision.depth;\n        collision.penetration.y = normal.y * collision.depth;\n\n        // find support points, there is always either exactly one or two\n        var supportsB = Collision._findSupports(bodyA, bodyB, normal, 1),\n            supportCount = 0;\n\n        // find the supports from bodyB that are inside bodyA\n        if (Vertices.contains(bodyA.vertices, supportsB[0])) {\n            supports[supportCount++] = supportsB[0];\n        }\n\n        if (Vertices.contains(bodyA.vertices, supportsB[1])) {\n            supports[supportCount++] = supportsB[1];\n        }\n\n        // find the supports from bodyA that are inside bodyB\n        if (supportCount < 2) {\n            var supportsA = Collision._findSupports(bodyB, bodyA, normal, -1);\n\n            if (Vertices.contains(bodyB.vertices, supportsA[0])) {\n                supports[supportCount++] = supportsA[0];\n            }\n\n            if (supportCount < 2 && Vertices.contains(bodyB.vertices, supportsA[1])) {\n                supports[supportCount++] = supportsA[1];\n            }\n        }\n\n        // account for the edge case of overlapping but no vertex containment\n        if (supportCount === 0) {\n            supports[supportCount++] = supportsB[0];\n        }\n\n        // update supports array size\n        supports.length = supportCount;\n\n        return collision;\n    };\n\n    /**\n     * Find the overlap between two sets of vertices.\n     * @method _overlapAxes\n     * @private\n     * @param {object} result\n     * @param {vertices} verticesA\n     * @param {vertices} verticesB\n     * @param {axes} axes\n     */\n    Collision._overlapAxes = function(result, verticesA, verticesB, axes) {\n        var verticesALength = verticesA.length,\n            verticesBLength = verticesB.length,\n            verticesAX = verticesA[0].x,\n            verticesAY = verticesA[0].y,\n            verticesBX = verticesB[0].x,\n            verticesBY = verticesB[0].y,\n            axesLength = axes.length,\n            overlapMin = Number.MAX_VALUE,\n            overlapAxisNumber = 0,\n            overlap,\n            overlapAB,\n            overlapBA,\n            dot,\n            i,\n            j;\n\n        for (i = 0; i < axesLength; i++) {\n            var axis = axes[i],\n                axisX = axis.x,\n                axisY = axis.y,\n                minA = verticesAX * axisX + verticesAY * axisY,\n                minB = verticesBX * axisX + verticesBY * axisY,\n                maxA = minA,\n                maxB = minB;\n            \n            for (j = 1; j < verticesALength; j += 1) {\n                dot = verticesA[j].x * axisX + verticesA[j].y * axisY;\n\n                if (dot > maxA) { \n                    maxA = dot;\n                } else if (dot < minA) { \n                    minA = dot;\n                }\n            }\n\n            for (j = 1; j < verticesBLength; j += 1) {\n                dot = verticesB[j].x * axisX + verticesB[j].y * axisY;\n\n                if (dot > maxB) { \n                    maxB = dot;\n                } else if (dot < minB) { \n                    minB = dot;\n                }\n            }\n\n            overlapAB = maxA - minB;\n            overlapBA = maxB - minA;\n            overlap = overlapAB < overlapBA ? overlapAB : overlapBA;\n\n            if (overlap < overlapMin) {\n                overlapMin = overlap;\n                overlapAxisNumber = i;\n\n                if (overlap <= 0) {\n                    // can not be intersecting\n                    break;\n                }\n            } \n        }\n\n        result.axis = axes[overlapAxisNumber];\n        result.overlap = overlapMin;\n    };\n\n    /**\n     * Projects vertices on an axis and returns an interval.\n     * @method _projectToAxis\n     * @private\n     * @param {} projection\n     * @param {} vertices\n     * @param {} axis\n     */\n    Collision._projectToAxis = function(projection, vertices, axis) {\n        var min = vertices[0].x * axis.x + vertices[0].y * axis.y,\n            max = min;\n\n        for (var i = 1; i < vertices.length; i += 1) {\n            var dot = vertices[i].x * axis.x + vertices[i].y * axis.y;\n\n            if (dot > max) { \n                max = dot; \n            } else if (dot < min) { \n                min = dot; \n            }\n        }\n\n        projection.min = min;\n        projection.max = max;\n    };\n\n    /**\n     * Finds supporting vertices given two bodies along a given direction using hill-climbing.\n     * @method _findSupports\n     * @private\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @param {vector} normal\n     * @param {number} direction\n     * @return [vector]\n     */\n    Collision._findSupports = function(bodyA, bodyB, normal, direction) {\n        var vertices = bodyB.vertices,\n            verticesLength = vertices.length,\n            bodyAPositionX = bodyA.position.x,\n            bodyAPositionY = bodyA.position.y,\n            normalX = normal.x * direction,\n            normalY = normal.y * direction,\n            nearestDistance = Number.MAX_VALUE,\n            vertexA,\n            vertexB,\n            vertexC,\n            distance,\n            j;\n\n        // find deepest vertex relative to the axis\n        for (j = 0; j < verticesLength; j += 1) {\n            vertexB = vertices[j];\n            distance = normalX * (bodyAPositionX - vertexB.x) + normalY * (bodyAPositionY - vertexB.y);\n\n            // convex hill-climbing\n            if (distance < nearestDistance) {\n                nearestDistance = distance;\n                vertexA = vertexB;\n            }\n        }\n\n        // measure next vertex\n        vertexC = vertices[(verticesLength + vertexA.index - 1) % verticesLength];\n        nearestDistance = normalX * (bodyAPositionX - vertexC.x) + normalY * (bodyAPositionY - vertexC.y);\n\n        // compare with previous vertex\n        vertexB = vertices[(vertexA.index + 1) % verticesLength];\n        if (normalX * (bodyAPositionX - vertexB.x) + normalY * (bodyAPositionY - vertexB.y) < nearestDistance) {\n            _supports[0] = vertexA;\n            _supports[1] = vertexB;\n\n            return _supports;\n        }\n\n        _supports[0] = vertexA;\n        _supports[1] = vertexC;\n\n        return _supports;\n    };\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A reference to the pair using this collision record, if there is one.\n     *\n     * @property pair\n     * @type {pair|null}\n     * @default null\n     */\n\n    /**\n     * A flag that indicates if the bodies were colliding when the collision was last updated.\n     * \n     * @property collided\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * The first body part represented by the collision (see also `collision.parentA`).\n     * \n     * @property bodyA\n     * @type body\n     */\n\n    /**\n     * The second body part represented by the collision (see also `collision.parentB`).\n     * \n     * @property bodyB\n     * @type body\n     */\n\n    /**\n     * The first body represented by the collision (i.e. `collision.bodyA.parent`).\n     * \n     * @property parentA\n     * @type body\n     */\n\n    /**\n     * The second body represented by the collision (i.e. `collision.bodyB.parent`).\n     * \n     * @property parentB\n     * @type body\n     */\n\n    /**\n     * A `Number` that represents the minimum separating distance between the bodies along the collision normal.\n     *\n     * @readOnly\n     * @property depth\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A normalised `Vector` that represents the direction between the bodies that provides the minimum separating distance.\n     *\n     * @property normal\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A normalised `Vector` that is the tangent direction to the collision normal.\n     *\n     * @property tangent\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Vector` that represents the direction and depth of the collision.\n     *\n     * @property penetration\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * An array of body vertices that represent the support points in the collision.\n     * These are the deepest vertices (along the collision normal) of each body that are contained by the other body's vertices.\n     *\n     * @property supports\n     * @type vector[]\n     * @default []\n     */\n\n})();\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Pair` module contains methods for creating and manipulating collision pairs.\n*\n* @class Pair\n*/\n\nvar Pair = {};\n\nmodule.exports = Pair;\n\nvar Contact = __webpack_require__(17);\n\n(function() {\n    \n    /**\n     * Creates a pair.\n     * @method create\n     * @param {collision} collision\n     * @param {number} timestamp\n     * @return {pair} A new pair\n     */\n    Pair.create = function(collision, timestamp) {\n        var bodyA = collision.bodyA,\n            bodyB = collision.bodyB;\n\n        var pair = {\n            id: Pair.id(bodyA, bodyB),\n            bodyA: bodyA,\n            bodyB: bodyB,\n            collision: collision,\n            contacts: [],\n            activeContacts: [],\n            separation: 0,\n            isActive: true,\n            confirmedActive: true,\n            isSensor: bodyA.isSensor || bodyB.isSensor,\n            timeCreated: timestamp,\n            timeUpdated: timestamp,\n            inverseMass: 0,\n            friction: 0,\n            frictionStatic: 0,\n            restitution: 0,\n            slop: 0\n        };\n\n        Pair.update(pair, collision, timestamp);\n\n        return pair;\n    };\n\n    /**\n     * Updates a pair given a collision.\n     * @method update\n     * @param {pair} pair\n     * @param {collision} collision\n     * @param {number} timestamp\n     */\n    Pair.update = function(pair, collision, timestamp) {\n        var contacts = pair.contacts,\n            supports = collision.supports,\n            activeContacts = pair.activeContacts,\n            parentA = collision.parentA,\n            parentB = collision.parentB,\n            parentAVerticesLength = parentA.vertices.length;\n        \n        pair.isActive = true;\n        pair.timeUpdated = timestamp;\n        pair.collision = collision;\n        pair.separation = collision.depth;\n        pair.inverseMass = parentA.inverseMass + parentB.inverseMass;\n        pair.friction = parentA.friction < parentB.friction ? parentA.friction : parentB.friction;\n        pair.frictionStatic = parentA.frictionStatic > parentB.frictionStatic ? parentA.frictionStatic : parentB.frictionStatic;\n        pair.restitution = parentA.restitution > parentB.restitution ? parentA.restitution : parentB.restitution;\n        pair.slop = parentA.slop > parentB.slop ? parentA.slop : parentB.slop;\n\n        collision.pair = pair;\n        activeContacts.length = 0;\n        \n        for (var i = 0; i < supports.length; i++) {\n            var support = supports[i],\n                contactId = support.body === parentA ? support.index : parentAVerticesLength + support.index,\n                contact = contacts[contactId];\n\n            if (contact) {\n                activeContacts.push(contact);\n            } else {\n                activeContacts.push(contacts[contactId] = Contact.create(support));\n            }\n        }\n    };\n    \n    /**\n     * Set a pair as active or inactive.\n     * @method setActive\n     * @param {pair} pair\n     * @param {bool} isActive\n     * @param {number} timestamp\n     */\n    Pair.setActive = function(pair, isActive, timestamp) {\n        if (isActive) {\n            pair.isActive = true;\n            pair.timeUpdated = timestamp;\n        } else {\n            pair.isActive = false;\n            pair.activeContacts.length = 0;\n        }\n    };\n\n    /**\n     * Get the id for the given pair.\n     * @method id\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @return {string} Unique pairId\n     */\n    Pair.id = function(bodyA, bodyB) {\n        if (bodyA.id < bodyB.id) {\n            return 'A' + bodyA.id + 'B' + bodyB.id;\n        } else {\n            return 'A' + bodyB.id + 'B' + bodyA.id;\n        }\n    };\n\n})();\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Constraint` module contains methods for creating and manipulating constraints.\n* Constraints are used for specifying that a fixed distance must be maintained between two bodies (or a body and a fixed world-space position).\n* The stiffness of constraints can be modified to create springs or elastic.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Constraint\n*/\n\nvar Constraint = {};\n\nmodule.exports = Constraint;\n\nvar Vertices = __webpack_require__(3);\nvar Vector = __webpack_require__(2);\nvar Sleeping = __webpack_require__(7);\nvar Bounds = __webpack_require__(1);\nvar Axes = __webpack_require__(11);\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    Constraint._warming = 0.4;\n    Constraint._torqueDampen = 1;\n    Constraint._minLength = 0.000001;\n\n    /**\n     * Creates a new constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * To simulate a revolute constraint (or pin joint) set `length: 0` and a high `stiffness` value (e.g. `0.7` or above).\n     * If the constraint is unstable, try lowering the `stiffness` value and / or increasing `engine.constraintIterations`.\n     * For compound bodies, constraints must be applied to the parent body (not one of its parts).\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {constraint} constraint\n     */\n    Constraint.create = function(options) {\n        var constraint = options;\n\n        // if bodies defined but no points, use body centre\n        if (constraint.bodyA && !constraint.pointA)\n            constraint.pointA = { x: 0, y: 0 };\n        if (constraint.bodyB && !constraint.pointB)\n            constraint.pointB = { x: 0, y: 0 };\n\n        // calculate static length using initial world space points\n        var initialPointA = constraint.bodyA ? Vector.add(constraint.bodyA.position, constraint.pointA) : constraint.pointA,\n            initialPointB = constraint.bodyB ? Vector.add(constraint.bodyB.position, constraint.pointB) : constraint.pointB,\n            length = Vector.magnitude(Vector.sub(initialPointA, initialPointB));\n    \n        constraint.length = typeof constraint.length !== 'undefined' ? constraint.length : length;\n\n        // option defaults\n        constraint.id = constraint.id || Common.nextId();\n        constraint.label = constraint.label || 'Constraint';\n        constraint.type = 'constraint';\n        constraint.stiffness = constraint.stiffness || (constraint.length > 0 ? 1 : 0.7);\n        constraint.damping = constraint.damping || 0;\n        constraint.angularStiffness = constraint.angularStiffness || 0;\n        constraint.angleA = constraint.bodyA ? constraint.bodyA.angle : constraint.angleA;\n        constraint.angleB = constraint.bodyB ? constraint.bodyB.angle : constraint.angleB;\n        constraint.plugin = {};\n\n        // render\n        var render = {\n            visible: true,\n            lineWidth: 2,\n            strokeStyle: '#ffffff',\n            type: 'line',\n            anchors: true\n        };\n\n        if (constraint.length === 0 && constraint.stiffness > 0.1) {\n            render.type = 'pin';\n            render.anchors = false;\n        } else if (constraint.stiffness < 0.9) {\n            render.type = 'spring';\n        }\n\n        constraint.render = Common.extend(render, constraint.render);\n\n        return constraint;\n    };\n\n    /**\n     * Prepares for solving by constraint warming.\n     * @private\n     * @method preSolveAll\n     * @param {body[]} bodies\n     */\n    Constraint.preSolveAll = function(bodies) {\n        for (var i = 0; i < bodies.length; i += 1) {\n            var body = bodies[i],\n                impulse = body.constraintImpulse;\n\n            if (body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)) {\n                continue;\n            }\n\n            body.position.x += impulse.x;\n            body.position.y += impulse.y;\n            body.angle += impulse.angle;\n        }\n    };\n\n    /**\n     * Solves all constraints in a list of collisions.\n     * @private\n     * @method solveAll\n     * @param {constraint[]} constraints\n     * @param {number} timeScale\n     */\n    Constraint.solveAll = function(constraints, timeScale) {\n        // Solve fixed constraints first.\n        for (var i = 0; i < constraints.length; i += 1) {\n            var constraint = constraints[i],\n                fixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic),\n                fixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic);\n\n            if (fixedA || fixedB) {\n                Constraint.solve(constraints[i], timeScale);\n            }\n        }\n\n        // Solve free constraints last.\n        for (i = 0; i < constraints.length; i += 1) {\n            constraint = constraints[i];\n            fixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic);\n            fixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic);\n\n            if (!fixedA && !fixedB) {\n                Constraint.solve(constraints[i], timeScale);\n            }\n        }\n    };\n\n    /**\n     * Solves a distance constraint with Gauss-Siedel method.\n     * @private\n     * @method solve\n     * @param {constraint} constraint\n     * @param {number} timeScale\n     */\n    Constraint.solve = function(constraint, timeScale) {\n        var bodyA = constraint.bodyA,\n            bodyB = constraint.bodyB,\n            pointA = constraint.pointA,\n            pointB = constraint.pointB;\n\n        if (!bodyA && !bodyB)\n            return;\n\n        // update reference angle\n        if (bodyA && !bodyA.isStatic) {\n            Vector.rotate(pointA, bodyA.angle - constraint.angleA, pointA);\n            constraint.angleA = bodyA.angle;\n        }\n        \n        // update reference angle\n        if (bodyB && !bodyB.isStatic) {\n            Vector.rotate(pointB, bodyB.angle - constraint.angleB, pointB);\n            constraint.angleB = bodyB.angle;\n        }\n\n        var pointAWorld = pointA,\n            pointBWorld = pointB;\n\n        if (bodyA) pointAWorld = Vector.add(bodyA.position, pointA);\n        if (bodyB) pointBWorld = Vector.add(bodyB.position, pointB);\n\n        if (!pointAWorld || !pointBWorld)\n            return;\n\n        var delta = Vector.sub(pointAWorld, pointBWorld),\n            currentLength = Vector.magnitude(delta);\n\n        // prevent singularity\n        if (currentLength < Constraint._minLength) {\n            currentLength = Constraint._minLength;\n        }\n\n        // solve distance constraint with Gauss-Siedel method\n        var difference = (currentLength - constraint.length) / currentLength,\n            stiffness = constraint.stiffness < 1 ? constraint.stiffness * timeScale : constraint.stiffness,\n            force = Vector.mult(delta, difference * stiffness),\n            massTotal = (bodyA ? bodyA.inverseMass : 0) + (bodyB ? bodyB.inverseMass : 0),\n            inertiaTotal = (bodyA ? bodyA.inverseInertia : 0) + (bodyB ? bodyB.inverseInertia : 0),\n            resistanceTotal = massTotal + inertiaTotal,\n            torque,\n            share,\n            normal,\n            normalVelocity,\n            relativeVelocity;\n\n        if (constraint.damping) {\n            var zero = Vector.create();\n            normal = Vector.div(delta, currentLength);\n\n            relativeVelocity = Vector.sub(\n                bodyB && Vector.sub(bodyB.position, bodyB.positionPrev) || zero,\n                bodyA && Vector.sub(bodyA.position, bodyA.positionPrev) || zero\n            );\n\n            normalVelocity = Vector.dot(normal, relativeVelocity);\n        }\n\n        if (bodyA && !bodyA.isStatic) {\n            share = bodyA.inverseMass / massTotal;\n\n            // keep track of applied impulses for post solving\n            bodyA.constraintImpulse.x -= force.x * share;\n            bodyA.constraintImpulse.y -= force.y * share;\n\n            // apply forces\n            bodyA.position.x -= force.x * share;\n            bodyA.position.y -= force.y * share;\n\n            // apply damping\n            if (constraint.damping) {\n                bodyA.positionPrev.x -= constraint.damping * normal.x * normalVelocity * share;\n                bodyA.positionPrev.y -= constraint.damping * normal.y * normalVelocity * share;\n            }\n\n            // apply torque\n            torque = (Vector.cross(pointA, force) / resistanceTotal) * Constraint._torqueDampen * bodyA.inverseInertia * (1 - constraint.angularStiffness);\n            bodyA.constraintImpulse.angle -= torque;\n            bodyA.angle -= torque;\n        }\n\n        if (bodyB && !bodyB.isStatic) {\n            share = bodyB.inverseMass / massTotal;\n\n            // keep track of applied impulses for post solving\n            bodyB.constraintImpulse.x += force.x * share;\n            bodyB.constraintImpulse.y += force.y * share;\n            \n            // apply forces\n            bodyB.position.x += force.x * share;\n            bodyB.position.y += force.y * share;\n\n            // apply damping\n            if (constraint.damping) {\n                bodyB.positionPrev.x += constraint.damping * normal.x * normalVelocity * share;\n                bodyB.positionPrev.y += constraint.damping * normal.y * normalVelocity * share;\n            }\n\n            // apply torque\n            torque = (Vector.cross(pointB, force) / resistanceTotal) * Constraint._torqueDampen * bodyB.inverseInertia * (1 - constraint.angularStiffness);\n            bodyB.constraintImpulse.angle += torque;\n            bodyB.angle += torque;\n        }\n\n    };\n\n    /**\n     * Performs body updates required after solving constraints.\n     * @private\n     * @method postSolveAll\n     * @param {body[]} bodies\n     */\n    Constraint.postSolveAll = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                impulse = body.constraintImpulse;\n\n            if (body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)) {\n                continue;\n            }\n\n            Sleeping.set(body, false);\n\n            // update geometry and reset\n            for (var j = 0; j < body.parts.length; j++) {\n                var part = body.parts[j];\n                \n                Vertices.translate(part.vertices, impulse);\n\n                if (j > 0) {\n                    part.position.x += impulse.x;\n                    part.position.y += impulse.y;\n                }\n\n                if (impulse.angle !== 0) {\n                    Vertices.rotate(part.vertices, impulse.angle, body.position);\n                    Axes.rotate(part.axes, impulse.angle);\n                    if (j > 0) {\n                        Vector.rotateAbout(part.position, impulse.angle, body.position, part.position);\n                    }\n                }\n\n                Bounds.update(part.bounds, part.vertices, body.velocity);\n            }\n\n            // dampen the cached impulse for warming next step\n            impulse.angle *= Constraint._warming;\n            impulse.x *= Constraint._warming;\n            impulse.y *= Constraint._warming;\n        }\n    };\n\n    /**\n     * Returns the world-space position of `constraint.pointA`, accounting for `constraint.bodyA`.\n     * @method pointAWorld\n     * @param {constraint} constraint\n     * @returns {vector} the world-space position\n     */\n    Constraint.pointAWorld = function(constraint) {\n        return {\n            x: (constraint.bodyA ? constraint.bodyA.position.x : 0) + constraint.pointA.x,\n            y: (constraint.bodyA ? constraint.bodyA.position.y : 0) + constraint.pointA.y\n        };\n    };\n\n    /**\n     * Returns the world-space position of `constraint.pointB`, accounting for `constraint.bodyB`.\n     * @method pointBWorld\n     * @param {constraint} constraint\n     * @returns {vector} the world-space position\n     */\n    Constraint.pointBWorld = function(constraint) {\n        return {\n            x: (constraint.bodyB ? constraint.bodyB.position.x : 0) + constraint.pointB.x,\n            y: (constraint.bodyB ? constraint.bodyB.position.y : 0) + constraint.pointB.y\n        };\n    };\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Constraint\"\n     */\n\n    /**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n    /**\n     * A flag that indicates if the constraint should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A `Number` that defines the line width to use when rendering the constraint outline.\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 2\n     */\n\n    /**\n     * A `String` that defines the stroke style to use when rendering the constraint outline.\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * A `String` that defines the constraint rendering type. \n     * The possible values are 'line', 'pin', 'spring'.\n     * An appropriate render type will be automatically chosen unless one is given in options.\n     *\n     * @property render.type\n     * @type string\n     * @default 'line'\n     */\n\n    /**\n     * A `Boolean` that defines if the constraint's anchor points should be rendered.\n     *\n     * @property render.anchors\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * The first possible `Body` that this constraint is attached to.\n     *\n     * @property bodyA\n     * @type body\n     * @default null\n     */\n\n    /**\n     * The second possible `Body` that this constraint is attached to.\n     *\n     * @property bodyB\n     * @type body\n     * @default null\n     */\n\n    /**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyA` if defined, otherwise a world-space position.\n     *\n     * @property pointA\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyB` if defined, otherwise a world-space position.\n     *\n     * @property pointB\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that specifies the stiffness of the constraint, i.e. the rate at which it returns to its resting `constraint.length`.\n     * A value of `1` means the constraint should be very stiff.\n     * A value of `0.2` means the constraint acts like a soft spring.\n     *\n     * @property stiffness\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that specifies the damping of the constraint, \n     * i.e. the amount of resistance applied to each body based on their velocities to limit the amount of oscillation.\n     * Damping will only be apparent when the constraint also has a very low `stiffness`.\n     * A value of `0.1` means the constraint will apply heavy damping, resulting in little to no oscillation.\n     * A value of `0` means the constraint will apply no damping.\n     *\n     * @property damping\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that specifies the target resting length of the constraint. \n     * It is calculated automatically in `Constraint.create` from initial positions of the `constraint.bodyA` and `constraint.bodyB`.\n     *\n     * @property length\n     * @type number\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Axes` module contains methods for creating and manipulating sets of axes.\n*\n* @class Axes\n*/\n\nvar Axes = {};\n\nmodule.exports = Axes;\n\nvar Vector = __webpack_require__(2);\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    /**\n     * Creates a new set of axes from the given vertices.\n     * @method fromVertices\n     * @param {vertices} vertices\n     * @return {axes} A new axes from the given vertices\n     */\n    Axes.fromVertices = function(vertices) {\n        var axes = {};\n\n        // find the unique axes, using edge normal gradients\n        for (var i = 0; i < vertices.length; i++) {\n            var j = (i + 1) % vertices.length, \n                normal = Vector.normalise({ \n                    x: vertices[j].y - vertices[i].y, \n                    y: vertices[i].x - vertices[j].x\n                }),\n                gradient = (normal.y === 0) ? Infinity : (normal.x / normal.y);\n            \n            // limit precision\n            gradient = gradient.toFixed(3).toString();\n            axes[gradient] = normal;\n        }\n\n        return Common.values(axes);\n    };\n\n    /**\n     * Rotates a set of axes by the given angle.\n     * @method rotate\n     * @param {axes} axes\n     * @param {number} angle\n     */\n    Axes.rotate = function(axes, angle) {\n        if (angle === 0)\n            return;\n        \n        var cos = Math.cos(angle),\n            sin = Math.sin(angle);\n\n        for (var i = 0; i < axes.length; i++) {\n            var axis = axes[i],\n                xx;\n            xx = axis.x * cos - axis.y * sin;\n            axis.y = axis.x * sin + axis.y * cos;\n            axis.x = xx;\n        }\n    };\n\n})();\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Bodies` module contains factory methods for creating rigid body models \n* with commonly used body configurations (such as rectangles, circles and other polygons).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Bodies\n*/\n\n// TODO: true circle bodies\n\nvar Bodies = {};\n\nmodule.exports = Bodies;\n\nvar Vertices = __webpack_require__(3);\nvar Common = __webpack_require__(0);\nvar Body = __webpack_require__(6);\nvar Bounds = __webpack_require__(1);\nvar Vector = __webpack_require__(2);\n\n(function() {\n\n    /**\n     * Creates a new rigid body model with a rectangle hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method rectangle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {object} [options]\n     * @return {body} A new rectangle body\n     */\n    Bodies.rectangle = function(x, y, width, height, options) {\n        options = options || {};\n\n        var rectangle = { \n            label: 'Rectangle Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath('L 0 0 L ' + width + ' 0 L ' + width + ' ' + height + ' L 0 ' + height)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            rectangle.vertices = Vertices.chamfer(rectangle.vertices, chamfer.radius, \n                chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, rectangle, options));\n    };\n    \n    /**\n     * Creates a new rigid body model with a trapezoid hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method trapezoid\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {number} slope\n     * @param {object} [options]\n     * @return {body} A new trapezoid body\n     */\n    Bodies.trapezoid = function(x, y, width, height, slope, options) {\n        options = options || {};\n\n        slope *= 0.5;\n        var roof = (1 - (slope * 2)) * width;\n        \n        var x1 = width * slope,\n            x2 = x1 + roof,\n            x3 = x2 + x1,\n            verticesPath;\n\n        if (slope < 0.5) {\n            verticesPath = 'L 0 0 L ' + x1 + ' ' + (-height) + ' L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\n        } else {\n            verticesPath = 'L 0 0 L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\n        }\n\n        var trapezoid = { \n            label: 'Trapezoid Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath(verticesPath)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            trapezoid.vertices = Vertices.chamfer(trapezoid.vertices, chamfer.radius, \n                chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, trapezoid, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a circle hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method circle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} radius\n     * @param {object} [options]\n     * @param {number} [maxSides]\n     * @return {body} A new circle body\n     */\n    Bodies.circle = function(x, y, radius, options, maxSides) {\n        options = options || {};\n\n        var circle = {\n            label: 'Circle Body',\n            circleRadius: radius\n        };\n        \n        // approximate circles with polygons until true circles implemented in SAT\n        maxSides = maxSides || 25;\n        var sides = Math.ceil(Math.max(10, Math.min(maxSides, radius)));\n\n        // optimisation: always use even number of sides (half the number of unique axes)\n        if (sides % 2 === 1)\n            sides += 1;\n\n        return Bodies.polygon(x, y, sides, radius, Common.extend({}, circle, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a regular polygon hull with the given number of sides. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method polygon\n     * @param {number} x\n     * @param {number} y\n     * @param {number} sides\n     * @param {number} radius\n     * @param {object} [options]\n     * @return {body} A new regular polygon body\n     */\n    Bodies.polygon = function(x, y, sides, radius, options) {\n        options = options || {};\n\n        if (sides < 3)\n            return Bodies.circle(x, y, radius, options);\n\n        var theta = 2 * Math.PI / sides,\n            path = '',\n            offset = theta * 0.5;\n\n        for (var i = 0; i < sides; i += 1) {\n            var angle = offset + (i * theta),\n                xx = Math.cos(angle) * radius,\n                yy = Math.sin(angle) * radius;\n\n            path += 'L ' + xx.toFixed(3) + ' ' + yy.toFixed(3) + ' ';\n        }\n\n        var polygon = { \n            label: 'Polygon Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath(path)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            polygon.vertices = Vertices.chamfer(polygon.vertices, chamfer.radius, \n                chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, polygon, options));\n    };\n\n    /**\n     * Utility to create a compound body based on set(s) of vertices.\n     * \n     * _Note:_ To optionally enable automatic concave vertices decomposition the [poly-decomp](https://github.com/schteppe/poly-decomp.js) \n     * package must be first installed and provided see `Common.setDecomp`, otherwise the convex hull of each vertex set will be used.\n     * \n     * The resulting vertices are reorientated about their centre of mass,\n     * and offset such that `body.position` corresponds to this point.\n     * \n     * The resulting offset may be found if needed by subtracting `body.bounds` from the original input bounds.\n     * To later move the centre of mass see `Body.setCentre`.\n     * \n     * Note that automatic conconcave decomposition results are not always optimal. \n     * For best results, simplify the input vertices as much as possible first.\n     * By default this function applies some addtional simplification to help.\n     * \n     * Some outputs may also require further manual processing afterwards to be robust.\n     * In particular some parts may need to be overlapped to avoid collision gaps.\n     * Thin parts and sharp points should be avoided or removed where possible.\n     *\n     * The options parameter object specifies any `Matter.Body` properties you wish to override the defaults.\n     * \n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method fromVertices\n     * @param {number} x\n     * @param {number} y\n     * @param {array} vertexSets One or more arrays of vertex points e.g. `[[{ x: 0, y: 0 }...], ...]`.\n     * @param {object} [options] The body options.\n     * @param {bool} [flagInternal=false] Optionally marks internal edges with `isInternal`.\n     * @param {number} [removeCollinear=0.01] Threshold when simplifying vertices along the same edge.\n     * @param {number} [minimumArea=10] Threshold when removing small parts.\n     * @param {number} [removeDuplicatePoints=0.01] Threshold when simplifying nearby vertices.\n     * @return {body}\n     */\n    Bodies.fromVertices = function(x, y, vertexSets, options, flagInternal, removeCollinear, minimumArea, removeDuplicatePoints) {\n        var decomp = Common.getDecomp(),\n            canDecomp,\n            body,\n            parts,\n            isConvex,\n            isConcave,\n            vertices,\n            i,\n            j,\n            k,\n            v,\n            z;\n\n        // check decomp is as expected\n        canDecomp = Boolean(decomp && decomp.quickDecomp);\n\n        options = options || {};\n        parts = [];\n\n        flagInternal = typeof flagInternal !== 'undefined' ? flagInternal : false;\n        removeCollinear = typeof removeCollinear !== 'undefined' ? removeCollinear : 0.01;\n        minimumArea = typeof minimumArea !== 'undefined' ? minimumArea : 10;\n        removeDuplicatePoints = typeof removeDuplicatePoints !== 'undefined' ? removeDuplicatePoints : 0.01;\n\n        // ensure vertexSets is an array of arrays\n        if (!Common.isArray(vertexSets[0])) {\n            vertexSets = [vertexSets];\n        }\n\n        for (v = 0; v < vertexSets.length; v += 1) {\n            vertices = vertexSets[v];\n            isConvex = Vertices.isConvex(vertices);\n            isConcave = !isConvex;\n\n            if (isConcave && !canDecomp) {\n                Common.warnOnce(\n                    'Bodies.fromVertices: Install the \\'poly-decomp\\' library and use Common.setDecomp or provide \\'decomp\\' as a global to decompose concave vertices.'\n                );\n            }\n\n            if (isConvex || !canDecomp) {\n                if (isConvex) {\n                    vertices = Vertices.clockwiseSort(vertices);\n                } else {\n                    // fallback to convex hull when decomposition is not possible\n                    vertices = Vertices.hull(vertices);\n                }\n\n                parts.push({\n                    position: { x: x, y: y },\n                    vertices: vertices\n                });\n            } else {\n                // initialise a decomposition\n                var concave = vertices.map(function(vertex) {\n                    return [vertex.x, vertex.y];\n                });\n\n                // vertices are concave and simple, we can decompose into parts\n                decomp.makeCCW(concave);\n                if (removeCollinear !== false)\n                    decomp.removeCollinearPoints(concave, removeCollinear);\n                if (removeDuplicatePoints !== false && decomp.removeDuplicatePoints)\n                    decomp.removeDuplicatePoints(concave, removeDuplicatePoints);\n\n                // use the quick decomposition algorithm (Bayazit)\n                var decomposed = decomp.quickDecomp(concave);\n\n                // for each decomposed chunk\n                for (i = 0; i < decomposed.length; i++) {\n                    var chunk = decomposed[i];\n\n                    // convert vertices into the correct structure\n                    var chunkVertices = chunk.map(function(vertices) {\n                        return {\n                            x: vertices[0],\n                            y: vertices[1]\n                        };\n                    });\n\n                    // skip small chunks\n                    if (minimumArea > 0 && Vertices.area(chunkVertices) < minimumArea)\n                        continue;\n\n                    // create a compound part\n                    parts.push({\n                        position: Vertices.centre(chunkVertices),\n                        vertices: chunkVertices\n                    });\n                }\n            }\n        }\n\n        // create body parts\n        for (i = 0; i < parts.length; i++) {\n            parts[i] = Body.create(Common.extend(parts[i], options));\n        }\n\n        // flag internal edges (coincident part edges)\n        if (flagInternal) {\n            var coincident_max_dist = 5;\n\n            for (i = 0; i < parts.length; i++) {\n                var partA = parts[i];\n\n                for (j = i + 1; j < parts.length; j++) {\n                    var partB = parts[j];\n\n                    if (Bounds.overlaps(partA.bounds, partB.bounds)) {\n                        var pav = partA.vertices,\n                            pbv = partB.vertices;\n\n                        // iterate vertices of both parts\n                        for (k = 0; k < partA.vertices.length; k++) {\n                            for (z = 0; z < partB.vertices.length; z++) {\n                                // find distances between the vertices\n                                var da = Vector.magnitudeSquared(Vector.sub(pav[(k + 1) % pav.length], pbv[z])),\n                                    db = Vector.magnitudeSquared(Vector.sub(pav[k], pbv[(z + 1) % pbv.length]));\n\n                                // if both vertices are very close, consider the edge concident (internal)\n                                if (da < coincident_max_dist && db < coincident_max_dist) {\n                                    pav[k].isInternal = true;\n                                    pbv[z].isInternal = true;\n                                }\n                            }\n                        }\n\n                    }\n                }\n            }\n        }\n\n        if (parts.length > 1) {\n            // create the parent body to be returned, that contains generated compound parts\n            body = Body.create(Common.extend({ parts: parts.slice(0) }, options));\n\n            // offset such that body.position is at the centre off mass\n            Body.setPosition(body, { x: x, y: y });\n\n            return body;\n        } else {\n            return parts[0];\n        }\n    };\n\n})();\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Mouse` module contains methods for creating and manipulating mouse inputs.\n*\n* @class Mouse\n*/\n\nvar Mouse = {};\n\nmodule.exports = Mouse;\n\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    /**\n     * Creates a mouse input.\n     * @method create\n     * @param {HTMLElement} element\n     * @return {mouse} A new mouse\n     */\n    Mouse.create = function(element) {\n        var mouse = {};\n\n        if (!element) {\n            Common.log('Mouse.create: element was undefined, defaulting to document.body', 'warn');\n        }\n        \n        mouse.element = element || document.body;\n        mouse.absolute = { x: 0, y: 0 };\n        mouse.position = { x: 0, y: 0 };\n        mouse.mousedownPosition = { x: 0, y: 0 };\n        mouse.mouseupPosition = { x: 0, y: 0 };\n        mouse.offset = { x: 0, y: 0 };\n        mouse.scale = { x: 1, y: 1 };\n        mouse.wheelDelta = 0;\n        mouse.button = -1;\n        mouse.pixelRatio = parseInt(mouse.element.getAttribute('data-pixel-ratio'), 10) || 1;\n\n        mouse.sourceEvents = {\n            mousemove: null,\n            mousedown: null,\n            mouseup: null,\n            mousewheel: null\n        };\n        \n        mouse.mousemove = function(event) { \n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                mouse.button = 0;\n                event.preventDefault();\n            }\n\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.sourceEvents.mousemove = event;\n        };\n        \n        mouse.mousedown = function(event) {\n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                mouse.button = 0;\n                event.preventDefault();\n            } else {\n                mouse.button = event.button;\n            }\n\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.mousedownPosition.x = mouse.position.x;\n            mouse.mousedownPosition.y = mouse.position.y;\n            mouse.sourceEvents.mousedown = event;\n        };\n        \n        mouse.mouseup = function(event) {\n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                event.preventDefault();\n            }\n            \n            mouse.button = -1;\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.mouseupPosition.x = mouse.position.x;\n            mouse.mouseupPosition.y = mouse.position.y;\n            mouse.sourceEvents.mouseup = event;\n        };\n\n        mouse.mousewheel = function(event) {\n            mouse.wheelDelta = Math.max(-1, Math.min(1, event.wheelDelta || -event.detail));\n            event.preventDefault();\n        };\n\n        Mouse.setElement(mouse, mouse.element);\n\n        return mouse;\n    };\n\n    /**\n     * Sets the element the mouse is bound to (and relative to).\n     * @method setElement\n     * @param {mouse} mouse\n     * @param {HTMLElement} element\n     */\n    Mouse.setElement = function(mouse, element) {\n        mouse.element = element;\n\n        element.addEventListener('mousemove', mouse.mousemove);\n        element.addEventListener('mousedown', mouse.mousedown);\n        element.addEventListener('mouseup', mouse.mouseup);\n        \n        element.addEventListener('mousewheel', mouse.mousewheel);\n        element.addEventListener('DOMMouseScroll', mouse.mousewheel);\n\n        element.addEventListener('touchmove', mouse.mousemove);\n        element.addEventListener('touchstart', mouse.mousedown);\n        element.addEventListener('touchend', mouse.mouseup);\n    };\n\n    /**\n     * Clears all captured source events.\n     * @method clearSourceEvents\n     * @param {mouse} mouse\n     */\n    Mouse.clearSourceEvents = function(mouse) {\n        mouse.sourceEvents.mousemove = null;\n        mouse.sourceEvents.mousedown = null;\n        mouse.sourceEvents.mouseup = null;\n        mouse.sourceEvents.mousewheel = null;\n        mouse.wheelDelta = 0;\n    };\n\n    /**\n     * Sets the mouse position offset.\n     * @method setOffset\n     * @param {mouse} mouse\n     * @param {vector} offset\n     */\n    Mouse.setOffset = function(mouse, offset) {\n        mouse.offset.x = offset.x;\n        mouse.offset.y = offset.y;\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n    };\n\n    /**\n     * Sets the mouse position scale.\n     * @method setScale\n     * @param {mouse} mouse\n     * @param {vector} scale\n     */\n    Mouse.setScale = function(mouse, scale) {\n        mouse.scale.x = scale.x;\n        mouse.scale.y = scale.y;\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n    };\n    \n    /**\n     * Gets the mouse position relative to an element given a screen pixel ratio.\n     * @method _getRelativeMousePosition\n     * @private\n     * @param {} event\n     * @param {} element\n     * @param {number} pixelRatio\n     * @return {}\n     */\n    Mouse._getRelativeMousePosition = function(event, element, pixelRatio) {\n        var elementBounds = element.getBoundingClientRect(),\n            rootNode = (document.documentElement || document.body.parentNode || document.body),\n            scrollX = (window.pageXOffset !== undefined) ? window.pageXOffset : rootNode.scrollLeft,\n            scrollY = (window.pageYOffset !== undefined) ? window.pageYOffset : rootNode.scrollTop,\n            touches = event.changedTouches,\n            x, y;\n        \n        if (touches) {\n            x = touches[0].pageX - elementBounds.left - scrollX;\n            y = touches[0].pageY - elementBounds.top - scrollY;\n        } else {\n            x = event.pageX - elementBounds.left - scrollX;\n            y = event.pageY - elementBounds.top - scrollY;\n        }\n\n        return { \n            x: x / (element.clientWidth / (element.width || element.clientWidth) * pixelRatio),\n            y: y / (element.clientHeight / (element.height || element.clientHeight) * pixelRatio)\n        };\n    };\n\n})();\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Detector` module contains methods for efficiently detecting collisions between a list of bodies using a broadphase algorithm.\n*\n* @class Detector\n*/\n\nvar Detector = {};\n\nmodule.exports = Detector;\n\nvar Common = __webpack_require__(0);\nvar Collision = __webpack_require__(8);\n\n(function() {\n\n    /**\n     * Creates a new collision detector.\n     * @method create\n     * @param {} options\n     * @return {detector} A new collision detector\n     */\n    Detector.create = function(options) {\n        var defaults = {\n            bodies: [],\n            pairs: null\n        };\n\n        return Common.extend(defaults, options);\n    };\n\n    /**\n     * Sets the list of bodies in the detector.\n     * @method setBodies\n     * @param {detector} detector\n     * @param {body[]} bodies\n     */\n    Detector.setBodies = function(detector, bodies) {\n        detector.bodies = bodies.slice(0);\n    };\n\n    /**\n     * Clears the detector including its list of bodies.\n     * @method clear\n     * @param {detector} detector\n     */\n    Detector.clear = function(detector) {\n        detector.bodies = [];\n    };\n\n    /**\n     * Efficiently finds all collisions among all the bodies in `detector.bodies` using a broadphase algorithm.\n     * \n     * _Note:_ The specific ordering of collisions returned is not guaranteed between releases and may change for performance reasons.\n     * If a specific ordering is required then apply a sort to the resulting array.\n     * @method collisions\n     * @param {detector} detector\n     * @return {collision[]} collisions\n     */\n    Detector.collisions = function(detector) {\n        var collisions = [],\n            pairs = detector.pairs,\n            bodies = detector.bodies,\n            bodiesLength = bodies.length,\n            canCollide = Detector.canCollide,\n            collides = Collision.collides,\n            i,\n            j;\n\n        bodies.sort(Detector._compareBoundsX);\n\n        for (i = 0; i < bodiesLength; i++) {\n            var bodyA = bodies[i],\n                boundsA = bodyA.bounds,\n                boundXMax = bodyA.bounds.max.x,\n                boundYMax = bodyA.bounds.max.y,\n                boundYMin = bodyA.bounds.min.y,\n                bodyAStatic = bodyA.isStatic || bodyA.isSleeping,\n                partsALength = bodyA.parts.length,\n                partsASingle = partsALength === 1;\n\n            for (j = i + 1; j < bodiesLength; j++) {\n                var bodyB = bodies[j],\n                    boundsB = bodyB.bounds;\n\n                if (boundsB.min.x > boundXMax) {\n                    break;\n                }\n\n                if (boundYMax < boundsB.min.y || boundYMin > boundsB.max.y) {\n                    continue;\n                }\n\n                if (bodyAStatic && (bodyB.isStatic || bodyB.isSleeping)) {\n                    continue;\n                }\n\n                if (!canCollide(bodyA.collisionFilter, bodyB.collisionFilter)) {\n                    continue;\n                }\n\n                var partsBLength = bodyB.parts.length;\n\n                if (partsASingle && partsBLength === 1) {\n                    var collision = collides(bodyA, bodyB, pairs);\n\n                    if (collision) {\n                        collisions.push(collision);\n                    }\n                } else {\n                    var partsAStart = partsALength > 1 ? 1 : 0,\n                        partsBStart = partsBLength > 1 ? 1 : 0;\n                    \n                    for (var k = partsAStart; k < partsALength; k++) {\n                        var partA = bodyA.parts[k],\n                            boundsA = partA.bounds;\n\n                        for (var z = partsBStart; z < partsBLength; z++) {\n                            var partB = bodyB.parts[z],\n                                boundsB = partB.bounds;\n\n                            if (boundsA.min.x > boundsB.max.x || boundsA.max.x < boundsB.min.x\n                                || boundsA.max.y < boundsB.min.y || boundsA.min.y > boundsB.max.y) {\n                                continue;\n                            }\n\n                            var collision = collides(partA, partB, pairs);\n\n                            if (collision) {\n                                collisions.push(collision);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return collisions;\n    };\n\n    /**\n     * Returns `true` if both supplied collision filters will allow a collision to occur.\n     * See `body.collisionFilter` for more information.\n     * @method canCollide\n     * @param {} filterA\n     * @param {} filterB\n     * @return {bool} `true` if collision can occur\n     */\n    Detector.canCollide = function(filterA, filterB) {\n        if (filterA.group === filterB.group && filterA.group !== 0)\n            return filterA.group > 0;\n\n        return (filterA.mask & filterB.category) !== 0 && (filterB.mask & filterA.category) !== 0;\n    };\n\n    /**\n     * The comparison function used in the broadphase algorithm.\n     * Returns the signed delta of the bodies bounds on the x-axis.\n     * @private\n     * @method _sortCompare\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @return {number} The signed delta used for sorting\n     */\n    Detector._compareBoundsX = function(bodyA, bodyB) {\n        return bodyA.bounds.min.x - bodyB.bounds.min.x;\n    };\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * The array of `Matter.Body` between which the detector finds collisions.\n     * \n     * _Note:_ The order of bodies in this array _is not fixed_ and will be continually managed by the detector.\n     * @property bodies\n     * @type body[]\n     * @default []\n     */\n\n    /**\n     * Optional. A `Matter.Pairs` object from which previous collision objects may be reused. Intended for internal `Matter.Engine` usage.\n     * @property pairs\n     * @type {pairs|null}\n     * @default null\n     */\n\n})();\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Plugin` module contains functions for registering and installing plugins on modules.\n*\n* @class Plugin\n*/\n\nvar Plugin = {};\n\nmodule.exports = Plugin;\n\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    Plugin._registry = {};\n\n    /**\n     * Registers a plugin object so it can be resolved later by name.\n     * @method register\n     * @param plugin {} The plugin to register.\n     * @return {object} The plugin.\n     */\n    Plugin.register = function(plugin) {\n        if (!Plugin.isPlugin(plugin)) {\n            Common.warn('Plugin.register:', Plugin.toString(plugin), 'does not implement all required fields.');\n        }\n\n        if (plugin.name in Plugin._registry) {\n            var registered = Plugin._registry[plugin.name],\n                pluginVersion = Plugin.versionParse(plugin.version).number,\n                registeredVersion = Plugin.versionParse(registered.version).number;\n\n            if (pluginVersion > registeredVersion) {\n                Common.warn('Plugin.register:', Plugin.toString(registered), 'was upgraded to', Plugin.toString(plugin));\n                Plugin._registry[plugin.name] = plugin;\n            } else if (pluginVersion < registeredVersion) {\n                Common.warn('Plugin.register:', Plugin.toString(registered), 'can not be downgraded to', Plugin.toString(plugin));\n            } else if (plugin !== registered) {\n                Common.warn('Plugin.register:', Plugin.toString(plugin), 'is already registered to different plugin object');\n            }\n        } else {\n            Plugin._registry[plugin.name] = plugin;\n        }\n\n        return plugin;\n    };\n\n    /**\n     * Resolves a dependency to a plugin object from the registry if it exists. \n     * The `dependency` may contain a version, but only the name matters when resolving.\n     * @method resolve\n     * @param dependency {string} The dependency.\n     * @return {object} The plugin if resolved, otherwise `undefined`.\n     */\n    Plugin.resolve = function(dependency) {\n        return Plugin._registry[Plugin.dependencyParse(dependency).name];\n    };\n\n    /**\n     * Returns a pretty printed plugin name and version.\n     * @method toString\n     * @param plugin {} The plugin.\n     * @return {string} Pretty printed plugin name and version.\n     */\n    Plugin.toString = function(plugin) {\n        return typeof plugin === 'string' ? plugin : (plugin.name || 'anonymous') + '@' + (plugin.version || plugin.range || '0.0.0');\n    };\n\n    /**\n     * Returns `true` if the object meets the minimum standard to be considered a plugin.\n     * This means it must define the following properties:\n     * - `name`\n     * - `version`\n     * - `install`\n     * @method isPlugin\n     * @param obj {} The obj to test.\n     * @return {boolean} `true` if the object can be considered a plugin otherwise `false`.\n     */\n    Plugin.isPlugin = function(obj) {\n        return obj && obj.name && obj.version && obj.install;\n    };\n\n    /**\n     * Returns `true` if a plugin with the given `name` been installed on `module`.\n     * @method isUsed\n     * @param module {} The module.\n     * @param name {string} The plugin name.\n     * @return {boolean} `true` if a plugin with the given `name` been installed on `module`, otherwise `false`.\n     */\n    Plugin.isUsed = function(module, name) {\n        return module.used.indexOf(name) > -1;\n    };\n\n    /**\n     * Returns `true` if `plugin.for` is applicable to `module` by comparing against `module.name` and `module.version`.\n     * If `plugin.for` is not specified then it is assumed to be applicable.\n     * The value of `plugin.for` is a string of the format `'module-name'` or `'module-name@version'`.\n     * @method isFor\n     * @param plugin {} The plugin.\n     * @param module {} The module.\n     * @return {boolean} `true` if `plugin.for` is applicable to `module`, otherwise `false`.\n     */\n    Plugin.isFor = function(plugin, module) {\n        var parsed = plugin.for && Plugin.dependencyParse(plugin.for);\n        return !plugin.for || (module.name === parsed.name && Plugin.versionSatisfies(module.version, parsed.range));\n    };\n\n    /**\n     * Installs the plugins by calling `plugin.install` on each plugin specified in `plugins` if passed, otherwise `module.uses`.\n     * For installing plugins on `Matter` see the convenience function `Matter.use`.\n     * Plugins may be specified either by their name or a reference to the plugin object.\n     * Plugins themselves may specify further dependencies, but each plugin is installed only once.\n     * Order is important, a topological sort is performed to find the best resulting order of installation.\n     * This sorting attempts to satisfy every dependency's requested ordering, but may not be exact in all cases.\n     * This function logs the resulting status of each dependency in the console, along with any warnings.\n     * - A green tick ✅ indicates a dependency was resolved and installed.\n     * - An orange diamond 🔶 indicates a dependency was resolved but a warning was thrown for it or one if its dependencies.\n     * - A red cross ❌ indicates a dependency could not be resolved.\n     * Avoid calling this function multiple times on the same module unless you intend to manually control installation order.\n     * @method use\n     * @param module {} The module install plugins on.\n     * @param [plugins=module.uses] {} The plugins to install on module (optional, defaults to `module.uses`).\n     */\n    Plugin.use = function(module, plugins) {\n        module.uses = (module.uses || []).concat(plugins || []);\n\n        if (module.uses.length === 0) {\n            Common.warn('Plugin.use:', Plugin.toString(module), 'does not specify any dependencies to install.');\n            return;\n        }\n\n        var dependencies = Plugin.dependencies(module),\n            sortedDependencies = Common.topologicalSort(dependencies),\n            status = [];\n\n        for (var i = 0; i < sortedDependencies.length; i += 1) {\n            if (sortedDependencies[i] === module.name) {\n                continue;\n            }\n\n            var plugin = Plugin.resolve(sortedDependencies[i]);\n\n            if (!plugin) {\n                status.push('❌ ' + sortedDependencies[i]);\n                continue;\n            }\n\n            if (Plugin.isUsed(module, plugin.name)) {\n                continue;\n            }\n\n            if (!Plugin.isFor(plugin, module)) {\n                Common.warn('Plugin.use:', Plugin.toString(plugin), 'is for', plugin.for, 'but installed on', Plugin.toString(module) + '.');\n                plugin._warned = true;\n            }\n\n            if (plugin.install) {\n                plugin.install(module);\n            } else {\n                Common.warn('Plugin.use:', Plugin.toString(plugin), 'does not specify an install function.');\n                plugin._warned = true;\n            }\n\n            if (plugin._warned) {\n                status.push('🔶 ' + Plugin.toString(plugin));\n                delete plugin._warned;\n            } else {\n                status.push('✅ ' + Plugin.toString(plugin));\n            }\n\n            module.used.push(plugin.name);\n        }\n\n        if (status.length > 0) {\n            Common.info(status.join('  '));\n        }\n    };\n\n    /**\n     * Recursively finds all of a module's dependencies and returns a flat dependency graph.\n     * @method dependencies\n     * @param module {} The module.\n     * @return {object} A dependency graph.\n     */\n    Plugin.dependencies = function(module, tracked) {\n        var parsedBase = Plugin.dependencyParse(module),\n            name = parsedBase.name;\n\n        tracked = tracked || {};\n\n        if (name in tracked) {\n            return;\n        }\n\n        module = Plugin.resolve(module) || module;\n\n        tracked[name] = Common.map(module.uses || [], function(dependency) {\n            if (Plugin.isPlugin(dependency)) {\n                Plugin.register(dependency);\n            }\n\n            var parsed = Plugin.dependencyParse(dependency),\n                resolved = Plugin.resolve(dependency);\n\n            if (resolved && !Plugin.versionSatisfies(resolved.version, parsed.range)) {\n                Common.warn(\n                    'Plugin.dependencies:', Plugin.toString(resolved), 'does not satisfy',\n                    Plugin.toString(parsed), 'used by', Plugin.toString(parsedBase) + '.'\n                );\n\n                resolved._warned = true;\n                module._warned = true;\n            } else if (!resolved) {\n                Common.warn(\n                    'Plugin.dependencies:', Plugin.toString(dependency), 'used by',\n                    Plugin.toString(parsedBase), 'could not be resolved.'\n                );\n\n                module._warned = true;\n            }\n\n            return parsed.name;\n        });\n\n        for (var i = 0; i < tracked[name].length; i += 1) {\n            Plugin.dependencies(tracked[name][i], tracked);\n        }\n\n        return tracked;\n    };\n\n    /**\n     * Parses a dependency string into its components.\n     * The `dependency` is a string of the format `'module-name'` or `'module-name@version'`.\n     * See documentation for `Plugin.versionParse` for a description of the format.\n     * This function can also handle dependencies that are already resolved (e.g. a module object).\n     * @method dependencyParse\n     * @param dependency {string} The dependency of the format `'module-name'` or `'module-name@version'`.\n     * @return {object} The dependency parsed into its components.\n     */\n    Plugin.dependencyParse = function(dependency) {\n        if (Common.isString(dependency)) {\n            var pattern = /^[\\w-]+(@(\\*|[\\^~]?\\d+\\.\\d+\\.\\d+(-[0-9A-Za-z-+]+)?))?$/;\n\n            if (!pattern.test(dependency)) {\n                Common.warn('Plugin.dependencyParse:', dependency, 'is not a valid dependency string.');\n            }\n\n            return {\n                name: dependency.split('@')[0],\n                range: dependency.split('@')[1] || '*'\n            };\n        }\n\n        return {\n            name: dependency.name,\n            range: dependency.range || dependency.version\n        };\n    };\n\n    /**\n     * Parses a version string into its components.  \n     * Versions are strictly of the format `x.y.z` (as in [semver](http://semver.org/)).\n     * Versions may optionally have a prerelease tag in the format `x.y.z-alpha`.\n     * Ranges are a strict subset of [npm ranges](https://docs.npmjs.com/misc/semver#advanced-range-syntax).\n     * Only the following range types are supported:\n     * - Tilde ranges e.g. `~1.2.3`\n     * - Caret ranges e.g. `^1.2.3`\n     * - Greater than ranges e.g. `>1.2.3`\n     * - Greater than or equal ranges e.g. `>=1.2.3`\n     * - Exact version e.g. `1.2.3`\n     * - Any version `*`\n     * @method versionParse\n     * @param range {string} The version string.\n     * @return {object} The version range parsed into its components.\n     */\n    Plugin.versionParse = function(range) {\n        var pattern = /^(\\*)|(\\^|~|>=|>)?\\s*((\\d+)\\.(\\d+)\\.(\\d+))(-[0-9A-Za-z-+]+)?$/;\n\n        if (!pattern.test(range)) {\n            Common.warn('Plugin.versionParse:', range, 'is not a valid version or range.');\n        }\n\n        var parts = pattern.exec(range);\n        var major = Number(parts[4]);\n        var minor = Number(parts[5]);\n        var patch = Number(parts[6]);\n\n        return {\n            isRange: Boolean(parts[1] || parts[2]),\n            version: parts[3],\n            range: range,\n            operator: parts[1] || parts[2] || '',\n            major: major,\n            minor: minor,\n            patch: patch,\n            parts: [major, minor, patch],\n            prerelease: parts[7],\n            number: major * 1e8 + minor * 1e4 + patch\n        };\n    };\n\n    /**\n     * Returns `true` if `version` satisfies the given `range`.\n     * See documentation for `Plugin.versionParse` for a description of the format.\n     * If a version or range is not specified, then any version (`*`) is assumed to satisfy.\n     * @method versionSatisfies\n     * @param version {string} The version string.\n     * @param range {string} The range string.\n     * @return {boolean} `true` if `version` satisfies `range`, otherwise `false`.\n     */\n    Plugin.versionSatisfies = function(version, range) {\n        range = range || '*';\n\n        var r = Plugin.versionParse(range),\n            v = Plugin.versionParse(version);\n\n        if (r.isRange) {\n            if (r.operator === '*' || version === '*') {\n                return true;\n            }\n\n            if (r.operator === '>') {\n                return v.number > r.number;\n            }\n\n            if (r.operator === '>=') {\n                return v.number >= r.number;\n            }\n\n            if (r.operator === '~') {\n                return v.major === r.major && v.minor === r.minor && v.patch >= r.patch;\n            }\n\n            if (r.operator === '^') {\n                if (r.major > 0) {\n                    return v.major === r.major && v.number >= r.number;\n                }\n\n                if (r.minor > 0) {\n                    return v.minor === r.minor && v.patch >= r.patch;\n                }\n\n                return v.patch === r.patch;\n            }\n        }\n\n        return version === range || version === '*';\n    };\n\n})();\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Render` module is a simple canvas based renderer for visualising instances of `Matter.Engine`.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* It includes a number of drawing options including wireframe, vector with support for sprites and viewports.\n*\n* @class Render\n*/\n\nvar Render = {};\n\nmodule.exports = Render;\n\nvar Common = __webpack_require__(0);\nvar Composite = __webpack_require__(5);\nvar Bounds = __webpack_require__(1);\nvar Events = __webpack_require__(4);\nvar Vector = __webpack_require__(2);\nvar Mouse = __webpack_require__(13);\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame\n                                      || function(callback){ window.setTimeout(function() { callback(Common.now()); }, 1000 / 60); };\n\n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame\n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    Render._goodFps = 30;\n    Render._goodDelta = 1000 / 60;\n\n    /**\n     * Creates a new renderer. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {render} A new renderer\n     */\n    Render.create = function(options) {\n        var defaults = {\n            controller: Render,\n            engine: null,\n            element: null,\n            canvas: null,\n            mouse: null,\n            frameRequestId: null,\n            timing: {\n                historySize: 60,\n                delta: 0,\n                deltaHistory: [],\n                lastTime: 0,\n                lastTimestamp: 0,\n                lastElapsed: 0,\n                timestampElapsed: 0,\n                timestampElapsedHistory: [],\n                engineDeltaHistory: [],\n                engineElapsedHistory: [],\n                elapsedHistory: []\n            },\n            options: {\n                width: 800,\n                height: 600,\n                pixelRatio: 1,\n                background: '#14151f',\n                wireframeBackground: '#14151f',\n                hasBounds: !!options.bounds,\n                enabled: true,\n                wireframes: true,\n                showSleeping: true,\n                showDebug: false,\n                showStats: false,\n                showPerformance: false,\n                showBounds: false,\n                showVelocity: false,\n                showCollisions: false,\n                showSeparations: false,\n                showAxes: false,\n                showPositions: false,\n                showAngleIndicator: false,\n                showIds: false,\n                showVertexNumbers: false,\n                showConvexHulls: false,\n                showInternalEdges: false,\n                showMousePosition: false\n            }\n        };\n\n        var render = Common.extend(defaults, options);\n\n        if (render.canvas) {\n            render.canvas.width = render.options.width || render.canvas.width;\n            render.canvas.height = render.options.height || render.canvas.height;\n        }\n\n        render.mouse = options.mouse;\n        render.engine = options.engine;\n        render.canvas = render.canvas || _createCanvas(render.options.width, render.options.height);\n        render.context = render.canvas.getContext('2d');\n        render.textures = {};\n\n        render.bounds = render.bounds || {\n            min: {\n                x: 0,\n                y: 0\n            },\n            max: {\n                x: render.canvas.width,\n                y: render.canvas.height\n            }\n        };\n\n        // for temporary back compatibility only\n        render.options.showBroadphase = false;\n\n        if (render.options.pixelRatio !== 1) {\n            Render.setPixelRatio(render, render.options.pixelRatio);\n        }\n\n        if (Common.isElement(render.element)) {\n            render.element.appendChild(render.canvas);\n        } else if (!render.canvas.parentNode) {\n            Common.log('Render.create: options.element was undefined, render.canvas was created but not appended', 'warn');\n        }\n\n        return render;\n    };\n\n    /**\n     * Continuously updates the render canvas on the `requestAnimationFrame` event.\n     * @method run\n     * @param {render} render\n     */\n    Render.run = function(render) {\n        (function loop(time){\n            render.frameRequestId = _requestAnimationFrame(loop);\n            \n            _updateTiming(render, time);\n\n            Render.world(render, time);\n\n            if (render.options.showStats || render.options.showDebug) {\n                Render.stats(render, render.context, time);\n            }\n\n            if (render.options.showPerformance || render.options.showDebug) {\n                Render.performance(render, render.context, time);\n            }\n        })();\n    };\n\n    /**\n     * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n     * @method stop\n     * @param {render} render\n     */\n    Render.stop = function(render) {\n        _cancelAnimationFrame(render.frameRequestId);\n    };\n\n    /**\n     * Sets the pixel ratio of the renderer and updates the canvas.\n     * To automatically detect the correct ratio, pass the string `'auto'` for `pixelRatio`.\n     * @method setPixelRatio\n     * @param {render} render\n     * @param {number} pixelRatio\n     */\n    Render.setPixelRatio = function(render, pixelRatio) {\n        var options = render.options,\n            canvas = render.canvas;\n\n        if (pixelRatio === 'auto') {\n            pixelRatio = _getPixelRatio(canvas);\n        }\n\n        options.pixelRatio = pixelRatio;\n        canvas.setAttribute('data-pixel-ratio', pixelRatio);\n        canvas.width = options.width * pixelRatio;\n        canvas.height = options.height * pixelRatio;\n        canvas.style.width = options.width + 'px';\n        canvas.style.height = options.height + 'px';\n    };\n\n    /**\n     * Positions and sizes the viewport around the given object bounds.\n     * Objects must have at least one of the following properties:\n     * - `object.bounds`\n     * - `object.position`\n     * - `object.min` and `object.max`\n     * - `object.x` and `object.y`\n     * @method lookAt\n     * @param {render} render\n     * @param {object[]} objects\n     * @param {vector} [padding]\n     * @param {bool} [center=true]\n     */\n    Render.lookAt = function(render, objects, padding, center) {\n        center = typeof center !== 'undefined' ? center : true;\n        objects = Common.isArray(objects) ? objects : [objects];\n        padding = padding || {\n            x: 0,\n            y: 0\n        };\n\n        // find bounds of all objects\n        var bounds = {\n            min: { x: Infinity, y: Infinity },\n            max: { x: -Infinity, y: -Infinity }\n        };\n\n        for (var i = 0; i < objects.length; i += 1) {\n            var object = objects[i],\n                min = object.bounds ? object.bounds.min : (object.min || object.position || object),\n                max = object.bounds ? object.bounds.max : (object.max || object.position || object);\n\n            if (min && max) {\n                if (min.x < bounds.min.x)\n                    bounds.min.x = min.x;\n\n                if (max.x > bounds.max.x)\n                    bounds.max.x = max.x;\n\n                if (min.y < bounds.min.y)\n                    bounds.min.y = min.y;\n\n                if (max.y > bounds.max.y)\n                    bounds.max.y = max.y;\n            }\n        }\n\n        // find ratios\n        var width = (bounds.max.x - bounds.min.x) + 2 * padding.x,\n            height = (bounds.max.y - bounds.min.y) + 2 * padding.y,\n            viewHeight = render.canvas.height,\n            viewWidth = render.canvas.width,\n            outerRatio = viewWidth / viewHeight,\n            innerRatio = width / height,\n            scaleX = 1,\n            scaleY = 1;\n\n        // find scale factor\n        if (innerRatio > outerRatio) {\n            scaleY = innerRatio / outerRatio;\n        } else {\n            scaleX = outerRatio / innerRatio;\n        }\n\n        // enable bounds\n        render.options.hasBounds = true;\n\n        // position and size\n        render.bounds.min.x = bounds.min.x;\n        render.bounds.max.x = bounds.min.x + width * scaleX;\n        render.bounds.min.y = bounds.min.y;\n        render.bounds.max.y = bounds.min.y + height * scaleY;\n\n        // center\n        if (center) {\n            render.bounds.min.x += width * 0.5 - (width * scaleX) * 0.5;\n            render.bounds.max.x += width * 0.5 - (width * scaleX) * 0.5;\n            render.bounds.min.y += height * 0.5 - (height * scaleY) * 0.5;\n            render.bounds.max.y += height * 0.5 - (height * scaleY) * 0.5;\n        }\n\n        // padding\n        render.bounds.min.x -= padding.x;\n        render.bounds.max.x -= padding.x;\n        render.bounds.min.y -= padding.y;\n        render.bounds.max.y -= padding.y;\n\n        // update mouse\n        if (render.mouse) {\n            Mouse.setScale(render.mouse, {\n                x: (render.bounds.max.x - render.bounds.min.x) / render.canvas.width,\n                y: (render.bounds.max.y - render.bounds.min.y) / render.canvas.height\n            });\n\n            Mouse.setOffset(render.mouse, render.bounds.min);\n        }\n    };\n\n    /**\n     * Applies viewport transforms based on `render.bounds` to a render context.\n     * @method startViewTransform\n     * @param {render} render\n     */\n    Render.startViewTransform = function(render) {\n        var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n            boundsHeight = render.bounds.max.y - render.bounds.min.y,\n            boundsScaleX = boundsWidth / render.options.width,\n            boundsScaleY = boundsHeight / render.options.height;\n\n        render.context.setTransform(\n            render.options.pixelRatio / boundsScaleX, 0, 0, \n            render.options.pixelRatio / boundsScaleY, 0, 0\n        );\n        \n        render.context.translate(-render.bounds.min.x, -render.bounds.min.y);\n    };\n\n    /**\n     * Resets all transforms on the render context.\n     * @method endViewTransform\n     * @param {render} render\n     */\n    Render.endViewTransform = function(render) {\n        render.context.setTransform(render.options.pixelRatio, 0, 0, render.options.pixelRatio, 0, 0);\n    };\n\n    /**\n     * Renders the given `engine`'s `Matter.World` object.\n     * This is the entry point for all rendering and should be called every time the scene changes.\n     * @method world\n     * @param {render} render\n     */\n    Render.world = function(render, time) {\n        var startTime = Common.now(),\n            engine = render.engine,\n            world = engine.world,\n            canvas = render.canvas,\n            context = render.context,\n            options = render.options,\n            timing = render.timing;\n\n        var allBodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world),\n            background = options.wireframes ? options.wireframeBackground : options.background,\n            bodies = [],\n            constraints = [],\n            i;\n\n        var event = {\n            timestamp: engine.timing.timestamp\n        };\n\n        Events.trigger(render, 'beforeRender', event);\n\n        // apply background if it has changed\n        if (render.currentBackground !== background)\n            _applyBackground(render, background);\n\n        // clear the canvas with a transparent fill, to allow the canvas background to show\n        context.globalCompositeOperation = 'source-in';\n        context.fillStyle = \"transparent\";\n        context.fillRect(0, 0, canvas.width, canvas.height);\n        context.globalCompositeOperation = 'source-over';\n\n        // handle bounds\n        if (options.hasBounds) {\n            // filter out bodies that are not in view\n            for (i = 0; i < allBodies.length; i++) {\n                var body = allBodies[i];\n                if (Bounds.overlaps(body.bounds, render.bounds))\n                    bodies.push(body);\n            }\n\n            // filter out constraints that are not in view\n            for (i = 0; i < allConstraints.length; i++) {\n                var constraint = allConstraints[i],\n                    bodyA = constraint.bodyA,\n                    bodyB = constraint.bodyB,\n                    pointAWorld = constraint.pointA,\n                    pointBWorld = constraint.pointB;\n\n                if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n                if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n\n                if (!pointAWorld || !pointBWorld)\n                    continue;\n\n                if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld))\n                    constraints.push(constraint);\n            }\n\n            // transform the view\n            Render.startViewTransform(render);\n\n            // update mouse\n            if (render.mouse) {\n                Mouse.setScale(render.mouse, {\n                    x: (render.bounds.max.x - render.bounds.min.x) / render.options.width,\n                    y: (render.bounds.max.y - render.bounds.min.y) / render.options.height\n                });\n\n                Mouse.setOffset(render.mouse, render.bounds.min);\n            }\n        } else {\n            constraints = allConstraints;\n            bodies = allBodies;\n\n            if (render.options.pixelRatio !== 1) {\n                render.context.setTransform(render.options.pixelRatio, 0, 0, render.options.pixelRatio, 0, 0);\n            }\n        }\n\n        if (!options.wireframes || (engine.enableSleeping && options.showSleeping)) {\n            // fully featured rendering of bodies\n            Render.bodies(render, bodies, context);\n        } else {\n            if (options.showConvexHulls)\n                Render.bodyConvexHulls(render, bodies, context);\n\n            // optimised method for wireframes only\n            Render.bodyWireframes(render, bodies, context);\n        }\n\n        if (options.showBounds)\n            Render.bodyBounds(render, bodies, context);\n\n        if (options.showAxes || options.showAngleIndicator)\n            Render.bodyAxes(render, bodies, context);\n\n        if (options.showPositions)\n            Render.bodyPositions(render, bodies, context);\n\n        if (options.showVelocity)\n            Render.bodyVelocity(render, bodies, context);\n\n        if (options.showIds)\n            Render.bodyIds(render, bodies, context);\n\n        if (options.showSeparations)\n            Render.separations(render, engine.pairs.list, context);\n\n        if (options.showCollisions)\n            Render.collisions(render, engine.pairs.list, context);\n\n        if (options.showVertexNumbers)\n            Render.vertexNumbers(render, bodies, context);\n\n        if (options.showMousePosition)\n            Render.mousePosition(render, render.mouse, context);\n\n        Render.constraints(constraints, context);\n\n        if (options.hasBounds) {\n            // revert view transforms\n            Render.endViewTransform(render);\n        }\n\n        Events.trigger(render, 'afterRender', event);\n\n        // log the time elapsed computing this update\n        timing.lastElapsed = Common.now() - startTime;\n    };\n\n    /**\n     * Renders statistics about the engine and world useful for debugging.\n     * @private\n     * @method stats\n     * @param {render} render\n     * @param {RenderingContext} context\n     * @param {Number} time\n     */\n    Render.stats = function(render, context, time) {\n        var engine = render.engine,\n            world = engine.world,\n            bodies = Composite.allBodies(world),\n            parts = 0,\n            width = 55,\n            height = 44,\n            x = 0,\n            y = 0;\n        \n        // count parts\n        for (var i = 0; i < bodies.length; i += 1) {\n            parts += bodies[i].parts.length;\n        }\n\n        // sections\n        var sections = {\n            'Part': parts,\n            'Body': bodies.length,\n            'Cons': Composite.allConstraints(world).length,\n            'Comp': Composite.allComposites(world).length,\n            'Pair': engine.pairs.list.length\n        };\n\n        // background\n        context.fillStyle = '#0e0f19';\n        context.fillRect(x, y, width * 5.5, height);\n\n        context.font = '12px Arial';\n        context.textBaseline = 'top';\n        context.textAlign = 'right';\n\n        // sections\n        for (var key in sections) {\n            var section = sections[key];\n            // label\n            context.fillStyle = '#aaa';\n            context.fillText(key, x + width, y + 8);\n\n            // value\n            context.fillStyle = '#eee';\n            context.fillText(section, x + width, y + 26);\n\n            x += width;\n        }\n    };\n\n    /**\n     * Renders engine and render performance information.\n     * @private\n     * @method performance\n     * @param {render} render\n     * @param {RenderingContext} context\n     */\n    Render.performance = function(render, context) {\n        var engine = render.engine,\n            timing = render.timing,\n            deltaHistory = timing.deltaHistory,\n            elapsedHistory = timing.elapsedHistory,\n            timestampElapsedHistory = timing.timestampElapsedHistory,\n            engineDeltaHistory = timing.engineDeltaHistory,\n            engineElapsedHistory = timing.engineElapsedHistory,\n            lastEngineDelta = engine.timing.lastDelta;\n        \n        var deltaMean = _mean(deltaHistory),\n            elapsedMean = _mean(elapsedHistory),\n            engineDeltaMean = _mean(engineDeltaHistory),\n            engineElapsedMean = _mean(engineElapsedHistory),\n            timestampElapsedMean = _mean(timestampElapsedHistory),\n            rateMean = (timestampElapsedMean / deltaMean) || 0,\n            fps = (1000 / deltaMean) || 0;\n\n        var graphHeight = 4,\n            gap = 12,\n            width = 60,\n            height = 34,\n            x = 10,\n            y = 69;\n\n        // background\n        context.fillStyle = '#0e0f19';\n        context.fillRect(0, 50, gap * 4 + width * 5 + 22, height);\n\n        // show FPS\n        Render.status(\n            context, x, y, width, graphHeight, deltaHistory.length, \n            Math.round(fps) + ' fps', \n            fps / Render._goodFps,\n            function(i) { return (deltaHistory[i] / deltaMean) - 1; }\n        );\n\n        // show engine delta\n        Render.status(\n            context, x + gap + width, y, width, graphHeight, engineDeltaHistory.length,\n            lastEngineDelta.toFixed(2) + ' dt', \n            Render._goodDelta / lastEngineDelta,\n            function(i) { return (engineDeltaHistory[i] / engineDeltaMean) - 1; }\n        );\n\n        // show engine update time\n        Render.status(\n            context, x + (gap + width) * 2, y, width, graphHeight, engineElapsedHistory.length,\n            engineElapsedMean.toFixed(2) + ' ut', \n            1 - (engineElapsedMean / Render._goodFps),\n            function(i) { return (engineElapsedHistory[i] / engineElapsedMean) - 1; }\n        );\n\n        // show render time\n        Render.status(\n            context, x + (gap + width) * 3, y, width, graphHeight, elapsedHistory.length,\n            elapsedMean.toFixed(2) + ' rt', \n            1 - (elapsedMean / Render._goodFps),\n            function(i) { return (elapsedHistory[i] / elapsedMean) - 1; }\n        );\n\n        // show effective speed\n        Render.status(\n            context, x + (gap + width) * 4, y, width, graphHeight, timestampElapsedHistory.length, \n            rateMean.toFixed(2) + ' x', \n            rateMean * rateMean * rateMean,\n            function(i) { return (((timestampElapsedHistory[i] / deltaHistory[i]) / rateMean) || 0) - 1; }\n        );\n    };\n\n    /**\n     * Renders a label, indicator and a chart.\n     * @private\n     * @method status\n     * @param {RenderingContext} context\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {number} count\n     * @param {string} label\n     * @param {string} indicator\n     * @param {function} plotY\n     */\n    Render.status = function(context, x, y, width, height, count, label, indicator, plotY) {\n        // background\n        context.strokeStyle = '#888';\n        context.fillStyle = '#444';\n        context.lineWidth = 1;\n        context.fillRect(x, y + 7, width, 1);\n\n        // chart\n        context.beginPath();\n        context.moveTo(x, y + 7 - height * Common.clamp(0.4 * plotY(0), -2, 2));\n        for (var i = 0; i < width; i += 1) {\n            context.lineTo(x + i, y + 7 - (i < count ? height * Common.clamp(0.4 * plotY(i), -2, 2) : 0));\n        }\n        context.stroke();\n\n        // indicator\n        context.fillStyle = 'hsl(' + Common.clamp(25 + 95 * indicator, 0, 120) + ',100%,60%)';\n        context.fillRect(x, y - 7, 4, 4);\n\n        // label\n        context.font = '12px Arial';\n        context.textBaseline = 'middle';\n        context.textAlign = 'right';\n        context.fillStyle = '#eee';\n        context.fillText(label, x + width, y - 5);\n    };\n\n    /**\n     * Description\n     * @private\n     * @method constraints\n     * @param {constraint[]} constraints\n     * @param {RenderingContext} context\n     */\n    Render.constraints = function(constraints, context) {\n        var c = context;\n\n        for (var i = 0; i < constraints.length; i++) {\n            var constraint = constraints[i];\n\n            if (!constraint.render.visible || !constraint.pointA || !constraint.pointB)\n                continue;\n\n            var bodyA = constraint.bodyA,\n                bodyB = constraint.bodyB,\n                start,\n                end;\n\n            if (bodyA) {\n                start = Vector.add(bodyA.position, constraint.pointA);\n            } else {\n                start = constraint.pointA;\n            }\n\n            if (constraint.render.type === 'pin') {\n                c.beginPath();\n                c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n                c.closePath();\n            } else {\n                if (bodyB) {\n                    end = Vector.add(bodyB.position, constraint.pointB);\n                } else {\n                    end = constraint.pointB;\n                }\n\n                c.beginPath();\n                c.moveTo(start.x, start.y);\n\n                if (constraint.render.type === 'spring') {\n                    var delta = Vector.sub(end, start),\n                        normal = Vector.perp(Vector.normalise(delta)),\n                        coils = Math.ceil(Common.clamp(constraint.length / 5, 12, 20)),\n                        offset;\n\n                    for (var j = 1; j < coils; j += 1) {\n                        offset = j % 2 === 0 ? 1 : -1;\n\n                        c.lineTo(\n                            start.x + delta.x * (j / coils) + normal.x * offset * 4,\n                            start.y + delta.y * (j / coils) + normal.y * offset * 4\n                        );\n                    }\n                }\n\n                c.lineTo(end.x, end.y);\n            }\n\n            if (constraint.render.lineWidth) {\n                c.lineWidth = constraint.render.lineWidth;\n                c.strokeStyle = constraint.render.strokeStyle;\n                c.stroke();\n            }\n\n            if (constraint.render.anchors) {\n                c.fillStyle = constraint.render.strokeStyle;\n                c.beginPath();\n                c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n                c.arc(end.x, end.y, 3, 0, 2 * Math.PI);\n                c.closePath();\n                c.fill();\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method bodies\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodies = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            showInternalEdges = options.showInternalEdges || !options.wireframes,\n            body,\n            part,\n            i,\n            k;\n\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n\n                if (!part.render.visible)\n                    continue;\n\n                if (options.showSleeping && body.isSleeping) {\n                    c.globalAlpha = 0.5 * part.render.opacity;\n                } else if (part.render.opacity !== 1) {\n                    c.globalAlpha = part.render.opacity;\n                }\n\n                if (part.render.sprite && part.render.sprite.texture && !options.wireframes) {\n                    // part sprite\n                    var sprite = part.render.sprite,\n                        texture = _getTexture(render, sprite.texture);\n\n                    c.translate(part.position.x, part.position.y);\n                    c.rotate(part.angle);\n\n                    c.drawImage(\n                        texture,\n                        texture.width * -sprite.xOffset * sprite.xScale,\n                        texture.height * -sprite.yOffset * sprite.yScale,\n                        texture.width * sprite.xScale,\n                        texture.height * sprite.yScale\n                    );\n\n                    // revert translation, hopefully faster than save / restore\n                    c.rotate(-part.angle);\n                    c.translate(-part.position.x, -part.position.y);\n                } else {\n                    // part polygon\n                    if (part.circleRadius) {\n                        c.beginPath();\n                        c.arc(part.position.x, part.position.y, part.circleRadius, 0, 2 * Math.PI);\n                    } else {\n                        c.beginPath();\n                        c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                        for (var j = 1; j < part.vertices.length; j++) {\n                            if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                                c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                            } else {\n                                c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                            }\n\n                            if (part.vertices[j].isInternal && !showInternalEdges) {\n                                c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                            }\n                        }\n\n                        c.lineTo(part.vertices[0].x, part.vertices[0].y);\n                        c.closePath();\n                    }\n\n                    if (!options.wireframes) {\n                        c.fillStyle = part.render.fillStyle;\n\n                        if (part.render.lineWidth) {\n                            c.lineWidth = part.render.lineWidth;\n                            c.strokeStyle = part.render.strokeStyle;\n                            c.stroke();\n                        }\n\n                        c.fill();\n                    } else {\n                        c.lineWidth = 1;\n                        c.strokeStyle = '#bbb';\n                        c.stroke();\n                    }\n                }\n\n                c.globalAlpha = 1;\n            }\n        }\n    };\n\n    /**\n     * Optimised method for drawing body wireframes in one pass\n     * @private\n     * @method bodyWireframes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyWireframes = function(render, bodies, context) {\n        var c = context,\n            showInternalEdges = render.options.showInternalEdges,\n            body,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        // render all bodies\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n\n                c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                for (j = 1; j < part.vertices.length; j++) {\n                    if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                        c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                    } else {\n                        c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                    }\n\n                    if (part.vertices[j].isInternal && !showInternalEdges) {\n                        c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                    }\n                }\n\n                c.lineTo(part.vertices[0].x, part.vertices[0].y);\n            }\n        }\n\n        c.lineWidth = 1;\n        c.strokeStyle = '#bbb';\n        c.stroke();\n    };\n\n    /**\n     * Optimised method for drawing body convex hull wireframes in one pass\n     * @private\n     * @method bodyConvexHulls\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyConvexHulls = function(render, bodies, context) {\n        var c = context,\n            body,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        // render convex hulls\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible || body.parts.length === 1)\n                continue;\n\n            c.moveTo(body.vertices[0].x, body.vertices[0].y);\n\n            for (j = 1; j < body.vertices.length; j++) {\n                c.lineTo(body.vertices[j].x, body.vertices[j].y);\n            }\n\n            c.lineTo(body.vertices[0].x, body.vertices[0].y);\n        }\n\n        c.lineWidth = 1;\n        c.strokeStyle = 'rgba(255,255,255,0.2)';\n        c.stroke();\n    };\n\n    /**\n     * Renders body vertex numbers.\n     * @private\n     * @method vertexNumbers\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.vertexNumbers = function(render, bodies, context) {\n        var c = context,\n            i,\n            j,\n            k;\n\n        for (i = 0; i < bodies.length; i++) {\n            var parts = bodies[i].parts;\n            for (k = parts.length > 1 ? 1 : 0; k < parts.length; k++) {\n                var part = parts[k];\n                for (j = 0; j < part.vertices.length; j++) {\n                    c.fillStyle = 'rgba(255,255,255,0.2)';\n                    c.fillText(i + '_' + j, part.position.x + (part.vertices[j].x - part.position.x) * 0.8, part.position.y + (part.vertices[j].y - part.position.y) * 0.8);\n                }\n            }\n        }\n    };\n\n    /**\n     * Renders mouse position.\n     * @private\n     * @method mousePosition\n     * @param {render} render\n     * @param {mouse} mouse\n     * @param {RenderingContext} context\n     */\n    Render.mousePosition = function(render, mouse, context) {\n        var c = context;\n        c.fillStyle = 'rgba(255,255,255,0.8)';\n        c.fillText(mouse.position.x + '  ' + mouse.position.y, mouse.position.x + 5, mouse.position.y - 5);\n    };\n\n    /**\n     * Draws body bounds\n     * @private\n     * @method bodyBounds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyBounds = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options;\n\n        c.beginPath();\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.render.visible) {\n                var parts = bodies[i].parts;\n                for (var j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    var part = parts[j];\n                    c.rect(part.bounds.min.x, part.bounds.min.y, part.bounds.max.x - part.bounds.min.x, part.bounds.max.y - part.bounds.min.y);\n                }\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,255,255,0.08)';\n        } else {\n            c.strokeStyle = 'rgba(0,0,0,0.1)';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Draws body angle indicators and axes\n     * @private\n     * @method bodyAxes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyAxes = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        for (i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                parts = body.parts;\n\n            if (!body.render.visible)\n                continue;\n\n            if (options.showAxes) {\n                // render all axes\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                        var axis = part.axes[k];\n                        c.moveTo(part.position.x, part.position.y);\n                        c.lineTo(part.position.x + axis.x * 20, part.position.y + axis.y * 20);\n                    }\n                }\n            } else {\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                        // render a single axis indicator\n                        c.moveTo(part.position.x, part.position.y);\n                        c.lineTo((part.vertices[0].x + part.vertices[part.vertices.length-1].x) / 2,\n                            (part.vertices[0].y + part.vertices[part.vertices.length-1].y) / 2);\n                    }\n                }\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'indianred';\n            c.lineWidth = 1;\n        } else {\n            c.strokeStyle = 'rgba(255, 255, 255, 0.4)';\n            c.globalCompositeOperation = 'overlay';\n            c.lineWidth = 2;\n        }\n\n        c.stroke();\n        c.globalCompositeOperation = 'source-over';\n    };\n\n    /**\n     * Draws body positions\n     * @private\n     * @method bodyPositions\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyPositions = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            body,\n            part,\n            i,\n            k;\n\n        c.beginPath();\n\n        // render current positions\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n                c.arc(part.position.x, part.position.y, 3, 0, 2 * Math.PI, false);\n                c.closePath();\n            }\n        }\n\n        if (options.wireframes) {\n            c.fillStyle = 'indianred';\n        } else {\n            c.fillStyle = 'rgba(0,0,0,0.5)';\n        }\n        c.fill();\n\n        c.beginPath();\n\n        // render previous positions\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n            if (body.render.visible) {\n                c.arc(body.positionPrev.x, body.positionPrev.y, 2, 0, 2 * Math.PI, false);\n                c.closePath();\n            }\n        }\n\n        c.fillStyle = 'rgba(255,165,0,0.8)';\n        c.fill();\n    };\n\n    /**\n     * Draws body velocity\n     * @private\n     * @method bodyVelocity\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyVelocity = function(render, bodies, context) {\n        var c = context;\n\n        c.beginPath();\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            c.moveTo(body.position.x, body.position.y);\n            c.lineTo(body.position.x + (body.position.x - body.positionPrev.x) * 2, body.position.y + (body.position.y - body.positionPrev.y) * 2);\n        }\n\n        c.lineWidth = 3;\n        c.strokeStyle = 'cornflowerblue';\n        c.stroke();\n    };\n\n    /**\n     * Draws body ids\n     * @private\n     * @method bodyIds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyIds = function(render, bodies, context) {\n        var c = context,\n            i,\n            j;\n\n        for (i = 0; i < bodies.length; i++) {\n            if (!bodies[i].render.visible)\n                continue;\n\n            var parts = bodies[i].parts;\n            for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                var part = parts[j];\n                c.font = \"12px Arial\";\n                c.fillStyle = 'rgba(255,255,255,0.5)';\n                c.fillText(part.id, part.position.x + 10, part.position.y - 10);\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method collisions\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n    Render.collisions = function(render, pairs, context) {\n        var c = context,\n            options = render.options,\n            pair,\n            collision,\n            corrected,\n            bodyA,\n            bodyB,\n            i,\n            j;\n\n        c.beginPath();\n\n        // render collision positions\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n            for (j = 0; j < pair.activeContacts.length; j++) {\n                var contact = pair.activeContacts[j],\n                    vertex = contact.vertex;\n                c.rect(vertex.x - 1.5, vertex.y - 1.5, 3.5, 3.5);\n            }\n        }\n\n        if (options.wireframes) {\n            c.fillStyle = 'rgba(255,255,255,0.7)';\n        } else {\n            c.fillStyle = 'orange';\n        }\n        c.fill();\n\n        c.beginPath();\n\n        // render collision normals\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n\n            if (pair.activeContacts.length > 0) {\n                var normalPosX = pair.activeContacts[0].vertex.x,\n                    normalPosY = pair.activeContacts[0].vertex.y;\n\n                if (pair.activeContacts.length === 2) {\n                    normalPosX = (pair.activeContacts[0].vertex.x + pair.activeContacts[1].vertex.x) / 2;\n                    normalPosY = (pair.activeContacts[0].vertex.y + pair.activeContacts[1].vertex.y) / 2;\n                }\n\n                if (collision.bodyB === collision.supports[0].body || collision.bodyA.isStatic === true) {\n                    c.moveTo(normalPosX - collision.normal.x * 8, normalPosY - collision.normal.y * 8);\n                } else {\n                    c.moveTo(normalPosX + collision.normal.x * 8, normalPosY + collision.normal.y * 8);\n                }\n\n                c.lineTo(normalPosX, normalPosY);\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.7)';\n        } else {\n            c.strokeStyle = 'orange';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method separations\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n    Render.separations = function(render, pairs, context) {\n        var c = context,\n            options = render.options,\n            pair,\n            collision,\n            corrected,\n            bodyA,\n            bodyB,\n            i,\n            j;\n\n        c.beginPath();\n\n        // render separations\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.bodyA;\n            bodyB = collision.bodyB;\n\n            var k = 1;\n\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyB.isStatic) k = 0;\n\n            c.moveTo(bodyB.position.x, bodyB.position.y);\n            c.lineTo(bodyB.position.x - collision.penetration.x * k, bodyB.position.y - collision.penetration.y * k);\n\n            k = 1;\n\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyA.isStatic) k = 0;\n\n            c.moveTo(bodyA.position.x, bodyA.position.y);\n            c.lineTo(bodyA.position.x + collision.penetration.x * k, bodyA.position.y + collision.penetration.y * k);\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.5)';\n        } else {\n            c.strokeStyle = 'orange';\n        }\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method inspector\n     * @param {inspector} inspector\n     * @param {RenderingContext} context\n     */\n    Render.inspector = function(inspector, context) {\n        var engine = inspector.engine,\n            selected = inspector.selected,\n            render = inspector.render,\n            options = render.options,\n            bounds;\n\n        if (options.hasBounds) {\n            var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n                boundsHeight = render.bounds.max.y - render.bounds.min.y,\n                boundsScaleX = boundsWidth / render.options.width,\n                boundsScaleY = boundsHeight / render.options.height;\n\n            context.scale(1 / boundsScaleX, 1 / boundsScaleY);\n            context.translate(-render.bounds.min.x, -render.bounds.min.y);\n        }\n\n        for (var i = 0; i < selected.length; i++) {\n            var item = selected[i].data;\n\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.9)';\n            context.setLineDash([1,2]);\n\n            switch (item.type) {\n\n            case 'body':\n\n                // render body selections\n                bounds = item.bounds;\n                context.beginPath();\n                context.rect(Math.floor(bounds.min.x - 3), Math.floor(bounds.min.y - 3),\n                    Math.floor(bounds.max.x - bounds.min.x + 6), Math.floor(bounds.max.y - bounds.min.y + 6));\n                context.closePath();\n                context.stroke();\n\n                break;\n\n            case 'constraint':\n\n                // render constraint selections\n                var point = item.pointA;\n                if (item.bodyA)\n                    point = item.pointB;\n                context.beginPath();\n                context.arc(point.x, point.y, 10, 0, 2 * Math.PI);\n                context.closePath();\n                context.stroke();\n\n                break;\n\n            }\n\n            context.setLineDash([]);\n            context.translate(-0.5, -0.5);\n        }\n\n        // render selection region\n        if (inspector.selectStart !== null) {\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.6)';\n            context.fillStyle = 'rgba(255,165,0,0.1)';\n            bounds = inspector.selectBounds;\n            context.beginPath();\n            context.rect(Math.floor(bounds.min.x), Math.floor(bounds.min.y),\n                Math.floor(bounds.max.x - bounds.min.x), Math.floor(bounds.max.y - bounds.min.y));\n            context.closePath();\n            context.stroke();\n            context.fill();\n            context.translate(-0.5, -0.5);\n        }\n\n        if (options.hasBounds)\n            context.setTransform(1, 0, 0, 1, 0, 0);\n    };\n\n    /**\n     * Updates render timing.\n     * @method _updateTiming\n     * @private\n     * @param {render} render\n     * @param {number} time\n     */\n    var _updateTiming = function(render, time) {\n        var engine = render.engine,\n            timing = render.timing,\n            historySize = timing.historySize,\n            timestamp = engine.timing.timestamp;\n\n        timing.delta = time - timing.lastTime || Render._goodDelta;\n        timing.lastTime = time;\n\n        timing.timestampElapsed = timestamp - timing.lastTimestamp || 0;\n        timing.lastTimestamp = timestamp;\n\n        timing.deltaHistory.unshift(timing.delta);\n        timing.deltaHistory.length = Math.min(timing.deltaHistory.length, historySize);\n\n        timing.engineDeltaHistory.unshift(engine.timing.lastDelta);\n        timing.engineDeltaHistory.length = Math.min(timing.engineDeltaHistory.length, historySize);\n\n        timing.timestampElapsedHistory.unshift(timing.timestampElapsed);\n        timing.timestampElapsedHistory.length = Math.min(timing.timestampElapsedHistory.length, historySize);\n\n        timing.engineElapsedHistory.unshift(engine.timing.lastElapsed);\n        timing.engineElapsedHistory.length = Math.min(timing.engineElapsedHistory.length, historySize);\n\n        timing.elapsedHistory.unshift(timing.lastElapsed);\n        timing.elapsedHistory.length = Math.min(timing.elapsedHistory.length, historySize);\n    };\n\n    /**\n     * Returns the mean value of the given numbers.\n     * @method _mean\n     * @private\n     * @param {Number[]} values\n     * @return {Number} the mean of given values\n     */\n    var _mean = function(values) {\n        var result = 0;\n        for (var i = 0; i < values.length; i += 1) {\n            result += values[i];\n        }\n        return (result / values.length) || 0;\n    };\n\n    /**\n     * @method _createCanvas\n     * @private\n     * @param {} width\n     * @param {} height\n     * @return canvas\n     */\n    var _createCanvas = function(width, height) {\n        var canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        canvas.oncontextmenu = function() { return false; };\n        canvas.onselectstart = function() { return false; };\n        return canvas;\n    };\n\n    /**\n     * Gets the pixel ratio of the canvas.\n     * @method _getPixelRatio\n     * @private\n     * @param {HTMLElement} canvas\n     * @return {Number} pixel ratio\n     */\n    var _getPixelRatio = function(canvas) {\n        var context = canvas.getContext('2d'),\n            devicePixelRatio = window.devicePixelRatio || 1,\n            backingStorePixelRatio = context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio\n                                      || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio\n                                      || context.backingStorePixelRatio || 1;\n\n        return devicePixelRatio / backingStorePixelRatio;\n    };\n\n    /**\n     * Gets the requested texture (an Image) via its path\n     * @method _getTexture\n     * @private\n     * @param {render} render\n     * @param {string} imagePath\n     * @return {Image} texture\n     */\n    var _getTexture = function(render, imagePath) {\n        var image = render.textures[imagePath];\n\n        if (image)\n            return image;\n\n        image = render.textures[imagePath] = new Image();\n        image.src = imagePath;\n\n        return image;\n    };\n\n    /**\n     * Applies the background to the canvas using CSS.\n     * @method applyBackground\n     * @private\n     * @param {render} render\n     * @param {string} background\n     */\n    var _applyBackground = function(render, background) {\n        var cssBackground = background;\n\n        if (/(jpg|gif|png)$/.test(background))\n            cssBackground = 'url(' + background + ')';\n\n        render.canvas.style.background = cssBackground;\n        render.canvas.style.backgroundSize = \"contain\";\n        render.currentBackground = background;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired before rendering\n    *\n    * @event beforeRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after rendering\n    *\n    * @event afterRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A back-reference to the `Matter.Render` module.\n     *\n     * @property controller\n     * @type render\n     */\n\n    /**\n     * A reference to the `Matter.Engine` instance to be used.\n     *\n     * @property engine\n     * @type engine\n     */\n\n    /**\n     * A reference to the element where the canvas is to be inserted (if `render.canvas` has not been specified)\n     *\n     * @property element\n     * @type HTMLElement\n     * @default null\n     */\n\n    /**\n     * The canvas element to render to. If not specified, one will be created if `render.element` has been specified.\n     *\n     * @property canvas\n     * @type HTMLCanvasElement\n     * @default null\n     */\n\n    /**\n     * A `Bounds` object that specifies the drawing view region.\n     * Rendering will be automatically transformed and scaled to fit within the canvas size (`render.options.width` and `render.options.height`).\n     * This allows for creating views that can pan or zoom around the scene.\n     * You must also set `render.options.hasBounds` to `true` to enable bounded rendering.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n    /**\n     * The 2d rendering context from the `render.canvas` element.\n     *\n     * @property context\n     * @type CanvasRenderingContext2D\n     */\n\n    /**\n     * The sprite texture cache.\n     *\n     * @property textures\n     * @type {}\n     */\n\n    /**\n     * The mouse to render if `render.options.showMousePosition` is enabled.\n     *\n     * @property mouse\n     * @type mouse\n     * @default null\n     */\n\n    /**\n     * The configuration options of the renderer.\n     *\n     * @property options\n     * @type {}\n     */\n\n    /**\n     * The target width in pixels of the `render.canvas` to be created.\n     * See also the `options.pixelRatio` property to change render quality.\n     *\n     * @property options.width\n     * @type number\n     * @default 800\n     */\n\n    /**\n     * The target height in pixels of the `render.canvas` to be created.\n     * See also the `options.pixelRatio` property to change render quality.\n     *\n     * @property options.height\n     * @type number\n     * @default 600\n     */\n\n    /**\n     * The [pixel ratio](https://developer.mozilla.org/en-US/docs/Web/API/Window/devicePixelRatio) to use when rendering.\n     *\n     * @property options.pixelRatio\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A CSS background color string to use when `render.options.wireframes` is disabled.\n     * This may be also set to `'transparent'` or equivalent.\n     *\n     * @property options.background\n     * @type string\n     * @default '#14151f'\n     */\n\n    /**\n     * A CSS background color string to use when `render.options.wireframes` is enabled.\n     * This may be also set to `'transparent'` or equivalent.\n     *\n     * @property options.wireframeBackground\n     * @type string\n     * @default '#14151f'\n     */\n\n    /**\n     * A flag that specifies if `render.bounds` should be used when rendering.\n     *\n     * @property options.hasBounds\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable all debug information overlays together.  \n     * This includes and has priority over the values of:\n     *\n     * - `render.options.showStats`\n     * - `render.options.showPerformance`\n     *\n     * @property options.showDebug\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the engine stats info overlay.  \n     * From left to right, the values shown are:\n     *\n     * - body parts total\n     * - body total\n     * - constraints total\n     * - composites total\n     * - collision pairs total\n     *\n     * @property options.showStats\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable performance charts.  \n     * From left to right, the values shown are:\n     *\n     * - average render frequency (e.g. 60 fps)\n     * - exact engine delta time used for last update (e.g. 16.66ms)\n     * - average engine execution duration (e.g. 5.00ms)\n     * - average render execution duration (e.g. 0.40ms)\n     * - average effective play speed (e.g. '1.00x' is 'real-time')\n     *\n     * Each value is recorded over a fixed sample of past frames (60 frames).\n     *\n     * A chart shown below each value indicates the variance from the average over the sample.\n     * The more stable or fixed the value is the flatter the chart will appear.\n     *\n     * @property options.showPerformance\n     * @type boolean\n     * @default false\n     */\n    \n    /**\n     * A flag to enable or disable rendering entirely.\n     *\n     * @property options.enabled\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to toggle wireframe rendering otherwise solid fill rendering is used.\n     *\n     * @property options.wireframes\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A flag to enable or disable sleeping bodies indicators.\n     *\n     * @property options.showSleeping\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A flag to enable or disable the debug information overlay.\n     *\n     * @property options.showDebug\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the collision broadphase debug overlay.\n     *\n     * @deprecated no longer implemented\n     * @property options.showBroadphase\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the body bounds debug overlay.\n     *\n     * @property options.showBounds\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the body velocity debug overlay.\n     *\n     * @property options.showVelocity\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the body collisions debug overlay.\n     *\n     * @property options.showCollisions\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the collision resolver separations debug overlay.\n     *\n     * @property options.showSeparations\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the body axes debug overlay.\n     *\n     * @property options.showAxes\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the body positions debug overlay.\n     *\n     * @property options.showPositions\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the body angle debug overlay.\n     *\n     * @property options.showAngleIndicator\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the body and part ids debug overlay.\n     *\n     * @property options.showIds\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the body vertex numbers debug overlay.\n     *\n     * @property options.showVertexNumbers\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the body convex hulls debug overlay.\n     *\n     * @property options.showConvexHulls\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the body internal edges debug overlay.\n     *\n     * @property options.showInternalEdges\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the mouse position debug overlay.\n     *\n     * @property options.showMousePosition\n     * @type boolean\n     * @default false\n     */\n\n})();\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports) {\n\n/**\n* The `Matter.Contact` module contains methods for creating and manipulating collision contacts.\n*\n* @class Contact\n*/\n\nvar Contact = {};\n\nmodule.exports = Contact;\n\n(function() {\n\n    /**\n     * Creates a new contact.\n     * @method create\n     * @param {vertex} vertex\n     * @return {contact} A new contact\n     */\n    Contact.create = function(vertex) {\n        return {\n            vertex: vertex,\n            normalImpulse: 0,\n            tangentImpulse: 0\n        };\n    };\n\n})();\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Engine` module contains methods for creating and manipulating engines.\n* An engine is a controller that manages updating the simulation of the world.\n* See `Matter.Runner` for an optional game loop utility.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Engine\n*/\n\nvar Engine = {};\n\nmodule.exports = Engine;\n\nvar Sleeping = __webpack_require__(7);\nvar Resolver = __webpack_require__(19);\nvar Detector = __webpack_require__(14);\nvar Pairs = __webpack_require__(20);\nvar Events = __webpack_require__(4);\nvar Composite = __webpack_require__(5);\nvar Constraint = __webpack_require__(10);\nvar Common = __webpack_require__(0);\nvar Body = __webpack_require__(6);\n\n(function() {\n\n    /**\n     * Creates a new engine. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {engine} engine\n     */\n    Engine.create = function(options) {\n        options = options || {};\n\n        var defaults = {\n            positionIterations: 6,\n            velocityIterations: 4,\n            constraintIterations: 2,\n            enableSleeping: false,\n            events: [],\n            plugin: {},\n            gravity: {\n                x: 0,\n                y: 1,\n                scale: 0.001\n            },\n            timing: {\n                timestamp: 0,\n                timeScale: 1,\n                lastDelta: 0,\n                lastElapsed: 0\n            }\n        };\n\n        var engine = Common.extend(defaults, options);\n\n        engine.world = options.world || Composite.create({ label: 'World' });\n        engine.pairs = options.pairs || Pairs.create();\n        engine.detector = options.detector || Detector.create();\n\n        // for temporary back compatibility only\n        engine.grid = { buckets: [] };\n        engine.world.gravity = engine.gravity;\n        engine.broadphase = engine.grid;\n        engine.metrics = {};\n        \n        return engine;\n    };\n\n    /**\n     * Moves the simulation forward in time by `delta` ms.\n     * The `correction` argument is an optional `Number` that specifies the time correction factor to apply to the update.\n     * This can help improve the accuracy of the simulation in cases where `delta` is changing between updates.\n     * The value of `correction` is defined as `delta / lastDelta`, i.e. the percentage change of `delta` over the last step.\n     * Therefore the value is always `1` (no correction) when `delta` constant (or when no correction is desired, which is the default).\n     * See the paper on <a href=\"http://lonesock.net/article/verlet.html\">Time Corrected Verlet</a> for more information.\n     *\n     * Triggers `beforeUpdate` and `afterUpdate` events.\n     * Triggers `collisionStart`, `collisionActive` and `collisionEnd` events.\n     * @method update\n     * @param {engine} engine\n     * @param {number} [delta=16.666]\n     * @param {number} [correction=1]\n     */\n    Engine.update = function(engine, delta, correction) {\n        var startTime = Common.now();\n\n        delta = delta || 1000 / 60;\n        correction = correction || 1;\n\n        var world = engine.world,\n            detector = engine.detector,\n            pairs = engine.pairs,\n            timing = engine.timing,\n            timestamp = timing.timestamp,\n            i;\n\n        // increment timestamp\n        timing.timestamp += delta * timing.timeScale;\n        timing.lastDelta = delta * timing.timeScale;\n\n        // create an event object\n        var event = {\n            timestamp: timing.timestamp\n        };\n\n        Events.trigger(engine, 'beforeUpdate', event);\n\n        // get all bodies and all constraints in the world\n        var allBodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world);\n\n        // update the detector bodies if they have changed\n        if (world.isModified) {\n            Detector.setBodies(detector, allBodies);\n        }\n\n        // reset all composite modified flags\n        if (world.isModified) {\n            Composite.setModified(world, false, false, true);\n        }\n\n        // update sleeping if enabled\n        if (engine.enableSleeping)\n            Sleeping.update(allBodies, timing.timeScale);\n\n        // apply gravity to all bodies\n        Engine._bodiesApplyGravity(allBodies, engine.gravity);\n\n        // update all body position and rotation by integration\n        Engine._bodiesUpdate(allBodies, delta, timing.timeScale, correction, world.bounds);\n\n        // update all constraints (first pass)\n        Constraint.preSolveAll(allBodies);\n        for (i = 0; i < engine.constraintIterations; i++) {\n            Constraint.solveAll(allConstraints, timing.timeScale);\n        }\n        Constraint.postSolveAll(allBodies);\n\n        // find all collisions\n        detector.pairs = engine.pairs;\n        var collisions = Detector.collisions(detector);\n\n        // update collision pairs\n        Pairs.update(pairs, collisions, timestamp);\n\n        // wake up bodies involved in collisions\n        if (engine.enableSleeping)\n            Sleeping.afterCollisions(pairs.list, timing.timeScale);\n\n        // trigger collision events\n        if (pairs.collisionStart.length > 0)\n            Events.trigger(engine, 'collisionStart', { pairs: pairs.collisionStart });\n\n        // iteratively resolve position between collisions\n        Resolver.preSolvePosition(pairs.list);\n        for (i = 0; i < engine.positionIterations; i++) {\n            Resolver.solvePosition(pairs.list, timing.timeScale);\n        }\n        Resolver.postSolvePosition(allBodies);\n\n        // update all constraints (second pass)\n        Constraint.preSolveAll(allBodies);\n        for (i = 0; i < engine.constraintIterations; i++) {\n            Constraint.solveAll(allConstraints, timing.timeScale);\n        }\n        Constraint.postSolveAll(allBodies);\n\n        // iteratively resolve velocity between collisions\n        Resolver.preSolveVelocity(pairs.list);\n        for (i = 0; i < engine.velocityIterations; i++) {\n            Resolver.solveVelocity(pairs.list, timing.timeScale);\n        }\n\n        // trigger collision events\n        if (pairs.collisionActive.length > 0)\n            Events.trigger(engine, 'collisionActive', { pairs: pairs.collisionActive });\n\n        if (pairs.collisionEnd.length > 0)\n            Events.trigger(engine, 'collisionEnd', { pairs: pairs.collisionEnd });\n\n        // clear force buffers\n        Engine._bodiesClearForces(allBodies);\n\n        Events.trigger(engine, 'afterUpdate', event);\n\n        // log the time elapsed computing this update\n        engine.timing.lastElapsed = Common.now() - startTime;\n\n        return engine;\n    };\n    \n    /**\n     * Merges two engines by keeping the configuration of `engineA` but replacing the world with the one from `engineB`.\n     * @method merge\n     * @param {engine} engineA\n     * @param {engine} engineB\n     */\n    Engine.merge = function(engineA, engineB) {\n        Common.extend(engineA, engineB);\n        \n        if (engineB.world) {\n            engineA.world = engineB.world;\n\n            Engine.clear(engineA);\n\n            var bodies = Composite.allBodies(engineA.world);\n\n            for (var i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n                Sleeping.set(body, false);\n                body.id = Common.nextId();\n            }\n        }\n    };\n\n    /**\n     * Clears the engine pairs and detector.\n     * @method clear\n     * @param {engine} engine\n     */\n    Engine.clear = function(engine) {\n        Pairs.clear(engine.pairs);\n        Detector.clear(engine.detector);\n    };\n\n    /**\n     * Zeroes the `body.force` and `body.torque` force buffers.\n     * @method _bodiesClearForces\n     * @private\n     * @param {body[]} bodies\n     */\n    Engine._bodiesClearForces = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            // reset force buffers\n            body.force.x = 0;\n            body.force.y = 0;\n            body.torque = 0;\n        }\n    };\n\n    /**\n     * Applys a mass dependant force to all given bodies.\n     * @method _bodiesApplyGravity\n     * @private\n     * @param {body[]} bodies\n     * @param {vector} gravity\n     */\n    Engine._bodiesApplyGravity = function(bodies, gravity) {\n        var gravityScale = typeof gravity.scale !== 'undefined' ? gravity.scale : 0.001;\n\n        if ((gravity.x === 0 && gravity.y === 0) || gravityScale === 0) {\n            return;\n        }\n        \n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isStatic || body.isSleeping)\n                continue;\n\n            // apply gravity\n            body.force.y += body.mass * gravity.y * gravityScale;\n            body.force.x += body.mass * gravity.x * gravityScale;\n        }\n    };\n\n    /**\n     * Applys `Body.update` to all given `bodies`.\n     * @method _bodiesUpdate\n     * @private\n     * @param {body[]} bodies\n     * @param {number} deltaTime \n     * The amount of time elapsed between updates\n     * @param {number} timeScale\n     * @param {number} correction \n     * The Verlet correction factor (deltaTime / lastDeltaTime)\n     * @param {bounds} worldBounds\n     */\n    Engine._bodiesUpdate = function(bodies, deltaTime, timeScale, correction, worldBounds) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isStatic || body.isSleeping)\n                continue;\n\n            Body.update(body, deltaTime, timeScale, correction);\n        }\n    };\n\n    /**\n     * A deprecated alias for `Runner.run`, use `Matter.Runner.run(engine)` instead and see `Matter.Runner` for more information.\n     * @deprecated use Matter.Runner.run(engine) instead\n     * @method run\n     * @param {engine} engine\n     */\n\n    /**\n    * Fired just before an update\n    *\n    * @event beforeUpdate\n    * @param {object} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {engine} event.source The source object of the event\n    * @param {string} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update and all collision events\n    *\n    * @event afterUpdate\n    * @param {object} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {engine} event.source The source object of the event\n    * @param {string} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that have started to collide in the current tick (if any)\n    *\n    * @event collisionStart\n    * @param {object} event An event object\n    * @param {pair[]} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {engine} event.source The source object of the event\n    * @param {string} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that are colliding in the current tick (if any)\n    *\n    * @event collisionActive\n    * @param {object} event An event object\n    * @param {pair[]} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {engine} event.source The source object of the event\n    * @param {string} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that have ended collision in the current tick (if any)\n    *\n    * @event collisionEnd\n    * @param {object} event An event object\n    * @param {pair[]} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {engine} event.source The source object of the event\n    * @param {string} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` that specifies the number of position iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property positionIterations\n     * @type number\n     * @default 6\n     */\n\n    /**\n     * An integer `Number` that specifies the number of velocity iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property velocityIterations\n     * @type number\n     * @default 4\n     */\n\n    /**\n     * An integer `Number` that specifies the number of constraint iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     * The default value of `2` is usually very adequate.\n     *\n     * @property constraintIterations\n     * @type number\n     * @default 2\n     */\n\n    /**\n     * A flag that specifies whether the engine should allow sleeping via the `Matter.Sleeping` module.\n     * Sleeping can improve stability and performance, but often at the expense of accuracy.\n     *\n     * @property enableSleeping\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * An `Object` containing properties regarding the timing systems of the engine. \n     *\n     * @property timing\n     * @type object\n     */\n\n    /**\n     * A `Number` that specifies the global scaling factor of time for all bodies.\n     * A value of `0` freezes the simulation.\n     * A value of `0.1` gives a slow-motion effect.\n     * A value of `1.2` gives a speed-up effect.\n     *\n     * @property timing.timeScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that specifies the current simulation-time in milliseconds starting from `0`. \n     * It is incremented on every `Engine.update` by the given `delta` argument. \n     *\n     * @property timing.timestamp\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that represents the total execution time elapsed during the last `Engine.update` in milliseconds.\n     * It is updated by timing from the start of the last `Engine.update` call until it ends.\n     *\n     * This value will also include the total execution time of all event handlers directly or indirectly triggered by the engine update.\n     *\n     * @property timing.lastElapsed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that represents the `delta` value used in the last engine update.\n     *\n     * @property timing.lastDelta\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Matter.Detector` instance.\n     *\n     * @property detector\n     * @type detector\n     * @default a Matter.Detector instance\n     */\n\n    /**\n     * A `Matter.Grid` instance.\n     *\n     * @deprecated replaced by `engine.detector`\n     * @property grid\n     * @type grid\n     * @default a Matter.Grid instance\n     */\n\n    /**\n     * Replaced by and now alias for `engine.grid`.\n     *\n     * @deprecated replaced by `engine.detector`\n     * @property broadphase\n     * @type grid\n     * @default a Matter.Grid instance\n     */\n\n    /**\n     * The root `Matter.Composite` instance that will contain all bodies, constraints and other composites to be simulated by this engine.\n     *\n     * @property world\n     * @type composite\n     * @default a Matter.Composite instance\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n    /**\n     * The gravity to apply on all bodies in `engine.world`.\n     *\n     * @property gravity\n     * @type object\n     */\n\n    /**\n     * The gravity x component.\n     *\n     * @property gravity.x\n     * @type object\n     * @default 0\n     */\n\n    /**\n     * The gravity y component.\n     *\n     * @property gravity.y\n     * @type object\n     * @default 1\n     */\n\n    /**\n     * The gravity scale factor.\n     *\n     * @property gravity.scale\n     * @type object\n     * @default 0.001\n     */\n\n})();\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Resolver` module contains methods for resolving collision pairs.\n*\n* @class Resolver\n*/\n\nvar Resolver = {};\n\nmodule.exports = Resolver;\n\nvar Vertices = __webpack_require__(3);\nvar Bounds = __webpack_require__(1);\n\n(function() {\n\n    Resolver._restingThresh = 4;\n    Resolver._restingThreshTangent = 6;\n    Resolver._positionDampen = 0.9;\n    Resolver._positionWarming = 0.8;\n    Resolver._frictionNormalMultiplier = 5;\n\n    /**\n     * Prepare pairs for position solving.\n     * @method preSolvePosition\n     * @param {pair[]} pairs\n     */\n    Resolver.preSolvePosition = function(pairs) {\n        var i,\n            pair,\n            activeCount,\n            pairsLength = pairs.length;\n\n        // find total contacts on each body\n        for (i = 0; i < pairsLength; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive)\n                continue;\n            \n            activeCount = pair.activeContacts.length;\n            pair.collision.parentA.totalContacts += activeCount;\n            pair.collision.parentB.totalContacts += activeCount;\n        }\n    };\n\n    /**\n     * Find a solution for pair positions.\n     * @method solvePosition\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Resolver.solvePosition = function(pairs, timeScale) {\n        var i,\n            pair,\n            collision,\n            bodyA,\n            bodyB,\n            normal,\n            contactShare,\n            positionImpulse,\n            positionDampen = Resolver._positionDampen,\n            pairsLength = pairs.length;\n\n        // find impulses required to resolve penetration\n        for (i = 0; i < pairsLength; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n\n            // get current separation between body edges involved in collision\n            pair.separation = \n                normal.x * (bodyB.positionImpulse.x + collision.penetration.x - bodyA.positionImpulse.x)\n                + normal.y * (bodyB.positionImpulse.y + collision.penetration.y - bodyA.positionImpulse.y);\n        }\n        \n        for (i = 0; i < pairsLength; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n            positionImpulse = (pair.separation - pair.slop) * timeScale;\n\n            if (bodyA.isStatic || bodyB.isStatic)\n                positionImpulse *= 2;\n            \n            if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                contactShare = positionDampen / bodyA.totalContacts;\n                bodyA.positionImpulse.x += normal.x * positionImpulse * contactShare;\n                bodyA.positionImpulse.y += normal.y * positionImpulse * contactShare;\n            }\n\n            if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                contactShare = positionDampen / bodyB.totalContacts;\n                bodyB.positionImpulse.x -= normal.x * positionImpulse * contactShare;\n                bodyB.positionImpulse.y -= normal.y * positionImpulse * contactShare;\n            }\n        }\n    };\n\n    /**\n     * Apply position resolution.\n     * @method postSolvePosition\n     * @param {body[]} bodies\n     */\n    Resolver.postSolvePosition = function(bodies) {\n        var positionWarming = Resolver._positionWarming,\n            bodiesLength = bodies.length,\n            verticesTranslate = Vertices.translate,\n            boundsUpdate = Bounds.update;\n\n        for (var i = 0; i < bodiesLength; i++) {\n            var body = bodies[i],\n                positionImpulse = body.positionImpulse,\n                positionImpulseX = positionImpulse.x,\n                positionImpulseY = positionImpulse.y,\n                velocity = body.velocity;\n\n            // reset contact count\n            body.totalContacts = 0;\n\n            if (positionImpulseX !== 0 || positionImpulseY !== 0) {\n                // update body geometry\n                for (var j = 0; j < body.parts.length; j++) {\n                    var part = body.parts[j];\n                    verticesTranslate(part.vertices, positionImpulse);\n                    boundsUpdate(part.bounds, part.vertices, velocity);\n                    part.position.x += positionImpulseX;\n                    part.position.y += positionImpulseY;\n                }\n\n                // move the body without changing velocity\n                body.positionPrev.x += positionImpulseX;\n                body.positionPrev.y += positionImpulseY;\n\n                if (positionImpulseX * velocity.x + positionImpulseY * velocity.y < 0) {\n                    // reset cached impulse if the body has velocity along it\n                    positionImpulse.x = 0;\n                    positionImpulse.y = 0;\n                } else {\n                    // warm the next iteration\n                    positionImpulse.x *= positionWarming;\n                    positionImpulse.y *= positionWarming;\n                }\n            }\n        }\n    };\n\n    /**\n     * Prepare pairs for velocity solving.\n     * @method preSolveVelocity\n     * @param {pair[]} pairs\n     */\n    Resolver.preSolveVelocity = function(pairs) {\n        var pairsLength = pairs.length,\n            i,\n            j;\n        \n        for (i = 0; i < pairsLength; i++) {\n            var pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            var contacts = pair.activeContacts,\n                contactsLength = contacts.length,\n                collision = pair.collision,\n                bodyA = collision.parentA,\n                bodyB = collision.parentB,\n                normal = collision.normal,\n                tangent = collision.tangent;\n    \n            // resolve each contact\n            for (j = 0; j < contactsLength; j++) {\n                var contact = contacts[j],\n                    contactVertex = contact.vertex,\n                    normalImpulse = contact.normalImpulse,\n                    tangentImpulse = contact.tangentImpulse;\n    \n                if (normalImpulse !== 0 || tangentImpulse !== 0) {\n                    // total impulse from contact\n                    var impulseX = normal.x * normalImpulse + tangent.x * tangentImpulse,\n                        impulseY = normal.y * normalImpulse + tangent.y * tangentImpulse;\n                    \n                    // apply impulse from contact\n                    if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                        bodyA.positionPrev.x += impulseX * bodyA.inverseMass;\n                        bodyA.positionPrev.y += impulseY * bodyA.inverseMass;\n                        bodyA.anglePrev += bodyA.inverseInertia * (\n                            (contactVertex.x - bodyA.position.x) * impulseY\n                            - (contactVertex.y - bodyA.position.y) * impulseX\n                        );\n                    }\n    \n                    if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                        bodyB.positionPrev.x -= impulseX * bodyB.inverseMass;\n                        bodyB.positionPrev.y -= impulseY * bodyB.inverseMass;\n                        bodyB.anglePrev -= bodyB.inverseInertia * (\n                            (contactVertex.x - bodyB.position.x) * impulseY \n                            - (contactVertex.y - bodyB.position.y) * impulseX\n                        );\n                    }\n                }\n            }\n        }\n    };\n\n    /**\n     * Find a solution for pair velocities.\n     * @method solveVelocity\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Resolver.solveVelocity = function(pairs, timeScale) {\n        var timeScaleSquared = timeScale * timeScale,\n            restingThresh = Resolver._restingThresh * timeScaleSquared,\n            frictionNormalMultiplier = Resolver._frictionNormalMultiplier,\n            restingThreshTangent = Resolver._restingThreshTangent * timeScaleSquared,\n            NumberMaxValue = Number.MAX_VALUE,\n            pairsLength = pairs.length,\n            tangentImpulse,\n            maxFriction,\n            i,\n            j;\n\n        for (i = 0; i < pairsLength; i++) {\n            var pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            var collision = pair.collision,\n                bodyA = collision.parentA,\n                bodyB = collision.parentB,\n                bodyAVelocity = bodyA.velocity,\n                bodyBVelocity = bodyB.velocity,\n                normalX = collision.normal.x,\n                normalY = collision.normal.y,\n                tangentX = collision.tangent.x,\n                tangentY = collision.tangent.y,\n                contacts = pair.activeContacts,\n                contactsLength = contacts.length,\n                contactShare = 1 / contactsLength,\n                inverseMassTotal = bodyA.inverseMass + bodyB.inverseMass,\n                friction = pair.friction * pair.frictionStatic * frictionNormalMultiplier * timeScaleSquared;\n\n            // update body velocities\n            bodyAVelocity.x = bodyA.position.x - bodyA.positionPrev.x;\n            bodyAVelocity.y = bodyA.position.y - bodyA.positionPrev.y;\n            bodyBVelocity.x = bodyB.position.x - bodyB.positionPrev.x;\n            bodyBVelocity.y = bodyB.position.y - bodyB.positionPrev.y;\n            bodyA.angularVelocity = bodyA.angle - bodyA.anglePrev;\n            bodyB.angularVelocity = bodyB.angle - bodyB.anglePrev;\n\n            // resolve each contact\n            for (j = 0; j < contactsLength; j++) {\n                var contact = contacts[j],\n                    contactVertex = contact.vertex;\n\n                var offsetAX = contactVertex.x - bodyA.position.x,\n                    offsetAY = contactVertex.y - bodyA.position.y,\n                    offsetBX = contactVertex.x - bodyB.position.x,\n                    offsetBY = contactVertex.y - bodyB.position.y;\n \n                var velocityPointAX = bodyAVelocity.x - offsetAY * bodyA.angularVelocity,\n                    velocityPointAY = bodyAVelocity.y + offsetAX * bodyA.angularVelocity,\n                    velocityPointBX = bodyBVelocity.x - offsetBY * bodyB.angularVelocity,\n                    velocityPointBY = bodyBVelocity.y + offsetBX * bodyB.angularVelocity;\n\n                var relativeVelocityX = velocityPointAX - velocityPointBX,\n                    relativeVelocityY = velocityPointAY - velocityPointBY;\n\n                var normalVelocity = normalX * relativeVelocityX + normalY * relativeVelocityY,\n                    tangentVelocity = tangentX * relativeVelocityX + tangentY * relativeVelocityY;\n\n                // coulomb friction\n                var normalOverlap = pair.separation + normalVelocity;\n                var normalForce = Math.min(normalOverlap, 1);\n                normalForce = normalOverlap < 0 ? 0 : normalForce;\n                \n                var frictionLimit = normalForce * friction;\n\n                if (tangentVelocity > frictionLimit || -tangentVelocity > frictionLimit) {\n                    maxFriction = tangentVelocity > 0 ? tangentVelocity : -tangentVelocity;\n                    tangentImpulse = pair.friction * (tangentVelocity > 0 ? 1 : -1) * timeScaleSquared;\n                    \n                    if (tangentImpulse < -maxFriction) {\n                        tangentImpulse = -maxFriction;\n                    } else if (tangentImpulse > maxFriction) {\n                        tangentImpulse = maxFriction;\n                    }\n                } else {\n                    tangentImpulse = tangentVelocity;\n                    maxFriction = NumberMaxValue;\n                }\n\n                // account for mass, inertia and contact offset\n                var oAcN = offsetAX * normalY - offsetAY * normalX,\n                    oBcN = offsetBX * normalY - offsetBY * normalX,\n                    share = contactShare / (inverseMassTotal + bodyA.inverseInertia * oAcN * oAcN + bodyB.inverseInertia * oBcN * oBcN);\n\n                // raw impulses\n                var normalImpulse = (1 + pair.restitution) * normalVelocity * share;\n                tangentImpulse *= share;\n\n                // handle high velocity and resting collisions separately\n                if (normalVelocity * normalVelocity > restingThresh && normalVelocity < 0) {\n                    // high normal velocity so clear cached contact normal impulse\n                    contact.normalImpulse = 0;\n                } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // impulse constraint tends to 0\n                    var contactNormalImpulse = contact.normalImpulse;\n                    contact.normalImpulse += normalImpulse;\n                    contact.normalImpulse = Math.min(contact.normalImpulse, 0);\n                    normalImpulse = contact.normalImpulse - contactNormalImpulse;\n                }\n\n                // handle high velocity and resting collisions separately\n                if (tangentVelocity * tangentVelocity > restingThreshTangent) {\n                    // high tangent velocity so clear cached contact tangent impulse\n                    contact.tangentImpulse = 0;\n                } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // tangent impulse tends to -tangentSpeed or +tangentSpeed\n                    var contactTangentImpulse = contact.tangentImpulse;\n                    contact.tangentImpulse += tangentImpulse;\n                    if (contact.tangentImpulse < -maxFriction) contact.tangentImpulse = -maxFriction;\n                    if (contact.tangentImpulse > maxFriction) contact.tangentImpulse = maxFriction;\n                    tangentImpulse = contact.tangentImpulse - contactTangentImpulse;\n                }\n\n                // total impulse from contact\n                var impulseX = normalX * normalImpulse + tangentX * tangentImpulse,\n                    impulseY = normalY * normalImpulse + tangentY * tangentImpulse;\n                \n                // apply impulse from contact\n                if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                    bodyA.positionPrev.x += impulseX * bodyA.inverseMass;\n                    bodyA.positionPrev.y += impulseY * bodyA.inverseMass;\n                    bodyA.anglePrev += (offsetAX * impulseY - offsetAY * impulseX) * bodyA.inverseInertia;\n                }\n\n                if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                    bodyB.positionPrev.x -= impulseX * bodyB.inverseMass;\n                    bodyB.positionPrev.y -= impulseY * bodyB.inverseMass;\n                    bodyB.anglePrev -= (offsetBX * impulseY - offsetBY * impulseX) * bodyB.inverseInertia;\n                }\n            }\n        }\n    };\n\n})();\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Pairs` module contains methods for creating and manipulating collision pair sets.\n*\n* @class Pairs\n*/\n\nvar Pairs = {};\n\nmodule.exports = Pairs;\n\nvar Pair = __webpack_require__(9);\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    /**\n     * Creates a new pairs structure.\n     * @method create\n     * @param {object} options\n     * @return {pairs} A new pairs structure\n     */\n    Pairs.create = function(options) {\n        return Common.extend({ \n            table: {},\n            list: [],\n            collisionStart: [],\n            collisionActive: [],\n            collisionEnd: []\n        }, options);\n    };\n\n    /**\n     * Updates pairs given a list of collisions.\n     * @method update\n     * @param {object} pairs\n     * @param {collision[]} collisions\n     * @param {number} timestamp\n     */\n    Pairs.update = function(pairs, collisions, timestamp) {\n        var pairsList = pairs.list,\n            pairsListLength = pairsList.length,\n            pairsTable = pairs.table,\n            collisionsLength = collisions.length,\n            collisionStart = pairs.collisionStart,\n            collisionEnd = pairs.collisionEnd,\n            collisionActive = pairs.collisionActive,\n            collision,\n            pairIndex,\n            pair,\n            i;\n\n        // clear collision state arrays, but maintain old reference\n        collisionStart.length = 0;\n        collisionEnd.length = 0;\n        collisionActive.length = 0;\n\n        for (i = 0; i < pairsListLength; i++) {\n            pairsList[i].confirmedActive = false;\n        }\n\n        for (i = 0; i < collisionsLength; i++) {\n            collision = collisions[i];\n            pair = collision.pair;\n\n            if (pair) {\n                // pair already exists (but may or may not be active)\n                if (pair.isActive) {\n                    // pair exists and is active\n                    collisionActive.push(pair);\n                } else {\n                    // pair exists but was inactive, so a collision has just started again\n                    collisionStart.push(pair);\n                }\n\n                // update the pair\n                Pair.update(pair, collision, timestamp);\n                pair.confirmedActive = true;\n            } else {\n                // pair did not exist, create a new pair\n                pair = Pair.create(collision, timestamp);\n                pairsTable[pair.id] = pair;\n\n                // push the new pair\n                collisionStart.push(pair);\n                pairsList.push(pair);\n            }\n        }\n\n        // find pairs that are no longer active\n        var removePairIndex = [];\n        pairsListLength = pairsList.length;\n\n        for (i = 0; i < pairsListLength; i++) {\n            pair = pairsList[i];\n            \n            if (!pair.confirmedActive) {\n                Pair.setActive(pair, false, timestamp);\n                collisionEnd.push(pair);\n\n                if (!pair.collision.bodyA.isSleeping && !pair.collision.bodyB.isSleeping) {\n                    removePairIndex.push(i);\n                }\n            }\n        }\n\n        // remove inactive pairs\n        for (i = 0; i < removePairIndex.length; i++) {\n            pairIndex = removePairIndex[i] - i;\n            pair = pairsList[pairIndex];\n            pairsList.splice(pairIndex, 1);\n            delete pairsTable[pair.id];\n        }\n    };\n\n    /**\n     * Clears the given pairs structure.\n     * @method clear\n     * @param {pairs} pairs\n     * @return {pairs} pairs\n     */\n    Pairs.clear = function(pairs) {\n        pairs.table = {};\n        pairs.list.length = 0;\n        pairs.collisionStart.length = 0;\n        pairs.collisionActive.length = 0;\n        pairs.collisionEnd.length = 0;\n        return pairs;\n    };\n\n})();\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Matter = module.exports = __webpack_require__(22);\r\n\r\nMatter.Axes = __webpack_require__(11);\r\nMatter.Bodies = __webpack_require__(12);\r\nMatter.Body = __webpack_require__(6);\r\nMatter.Bounds = __webpack_require__(1);\r\nMatter.Collision = __webpack_require__(8);\r\nMatter.Common = __webpack_require__(0);\r\nMatter.Composite = __webpack_require__(5);\r\nMatter.Composites = __webpack_require__(23);\r\nMatter.Constraint = __webpack_require__(10);\r\nMatter.Contact = __webpack_require__(17);\r\nMatter.Detector = __webpack_require__(14);\r\nMatter.Engine = __webpack_require__(18);\r\nMatter.Events = __webpack_require__(4);\r\nMatter.Grid = __webpack_require__(24);\r\nMatter.Mouse = __webpack_require__(13);\r\nMatter.MouseConstraint = __webpack_require__(25);\r\nMatter.Pair = __webpack_require__(9);\r\nMatter.Pairs = __webpack_require__(20);\r\nMatter.Plugin = __webpack_require__(15);\r\nMatter.Query = __webpack_require__(26);\r\nMatter.Render = __webpack_require__(16);\r\nMatter.Resolver = __webpack_require__(19);\r\nMatter.Runner = __webpack_require__(27);\r\nMatter.SAT = __webpack_require__(28);\r\nMatter.Sleeping = __webpack_require__(7);\r\nMatter.Svg = __webpack_require__(29);\r\nMatter.Vector = __webpack_require__(2);\r\nMatter.Vertices = __webpack_require__(3);\r\nMatter.World = __webpack_require__(30);\r\n\r\n// temporary back compatibility\r\nMatter.Engine.run = Matter.Runner.run;\r\nMatter.Common.deprecated(Matter.Engine, 'run', 'Engine.run ➤ use Matter.Runner.run(engine) instead');\r\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\r\n* The `Matter` module is the top level namespace. It also includes a function for installing plugins on top of the library.\r\n*\r\n* @class Matter\r\n*/\r\n\r\nvar Matter = {};\r\n\r\nmodule.exports = Matter;\r\n\r\nvar Plugin = __webpack_require__(15);\r\nvar Common = __webpack_require__(0);\r\n\r\n(function() {\r\n\r\n    /**\r\n     * The library name.\r\n     * @property name\r\n     * @readOnly\r\n     * @type {String}\r\n     */\r\n    Matter.name = 'matter-js';\r\n\r\n    /**\r\n     * The library version.\r\n     * @property version\r\n     * @readOnly\r\n     * @type {String}\r\n     */\r\n    Matter.version =  true ? \"0.18.0\" : undefined;\r\n\r\n    /**\r\n     * A list of plugin dependencies to be installed. These are normally set and installed through `Matter.use`.\r\n     * Alternatively you may set `Matter.uses` manually and install them by calling `Plugin.use(Matter)`.\r\n     * @property uses\r\n     * @type {Array}\r\n     */\r\n    Matter.uses = [];\r\n\r\n    /**\r\n     * The plugins that have been installed through `Matter.Plugin.install`. Read only.\r\n     * @property used\r\n     * @readOnly\r\n     * @type {Array}\r\n     */\r\n    Matter.used = [];\r\n\r\n    /**\r\n     * Installs the given plugins on the `Matter` namespace.\r\n     * This is a short-hand for `Plugin.use`, see it for more information.\r\n     * Call this function once at the start of your code, with all of the plugins you wish to install as arguments.\r\n     * Avoid calling this function multiple times unless you intend to manually control installation order.\r\n     * @method use\r\n     * @param ...plugin {Function} The plugin(s) to install on `base` (multi-argument).\r\n     */\r\n    Matter.use = function() {\r\n        Plugin.use(Matter, Array.prototype.slice.call(arguments));\r\n    };\r\n\r\n    /**\r\n     * Chains a function to excute before the original function on the given `path` relative to `Matter`.\r\n     * See also docs for `Common.chain`.\r\n     * @method before\r\n     * @param {string} path The path relative to `Matter`\r\n     * @param {function} func The function to chain before the original\r\n     * @return {function} The chained function that replaced the original\r\n     */\r\n    Matter.before = function(path, func) {\r\n        path = path.replace(/^Matter./, '');\r\n        return Common.chainPathBefore(Matter, path, func);\r\n    };\r\n\r\n    /**\r\n     * Chains a function to excute after the original function on the given `path` relative to `Matter`.\r\n     * See also docs for `Common.chain`.\r\n     * @method after\r\n     * @param {string} path The path relative to `Matter`\r\n     * @param {function} func The function to chain after the original\r\n     * @return {function} The chained function that replaced the original\r\n     */\r\n    Matter.after = function(path, func) {\r\n        path = path.replace(/^Matter./, '');\r\n        return Common.chainPathAfter(Matter, path, func);\r\n    };\r\n\r\n})();\r\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Composites` module contains factory methods for creating composite bodies\n* with commonly used configurations (such as stacks and chains).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composites\n*/\n\nvar Composites = {};\n\nmodule.exports = Composites;\n\nvar Composite = __webpack_require__(5);\nvar Constraint = __webpack_require__(10);\nvar Common = __webpack_require__(0);\nvar Body = __webpack_require__(6);\nvar Bodies = __webpack_require__(12);\nvar deprecated = Common.deprecated;\n\n(function() {\n\n    /**\n     * Create a new composite containing bodies created in the callback in a grid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method stack\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n    Composites.stack = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n        var stack = Composite.create({ label: 'Stack' }),\n            x = xx,\n            y = yy,\n            lastBody,\n            i = 0;\n\n        for (var row = 0; row < rows; row++) {\n            var maxHeight = 0;\n            \n            for (var column = 0; column < columns; column++) {\n                var body = callback(x, y, column, row, lastBody, i);\n                    \n                if (body) {\n                    var bodyHeight = body.bounds.max.y - body.bounds.min.y,\n                        bodyWidth = body.bounds.max.x - body.bounds.min.x; \n\n                    if (bodyHeight > maxHeight)\n                        maxHeight = bodyHeight;\n                    \n                    Body.translate(body, { x: bodyWidth * 0.5, y: bodyHeight * 0.5 });\n\n                    x = body.bounds.max.x + columnGap;\n\n                    Composite.addBody(stack, body);\n                    \n                    lastBody = body;\n                    i += 1;\n                } else {\n                    x += columnGap;\n                }\n            }\n            \n            y += maxHeight + rowGap;\n            x = xx;\n        }\n\n        return stack;\n    };\n    \n    /**\n     * Chains all bodies in the given composite together using constraints.\n     * @method chain\n     * @param {composite} composite\n     * @param {number} xOffsetA\n     * @param {number} yOffsetA\n     * @param {number} xOffsetB\n     * @param {number} yOffsetB\n     * @param {object} options\n     * @return {composite} A new composite containing objects chained together with constraints\n     */\n    Composites.chain = function(composite, xOffsetA, yOffsetA, xOffsetB, yOffsetB, options) {\n        var bodies = composite.bodies;\n        \n        for (var i = 1; i < bodies.length; i++) {\n            var bodyA = bodies[i - 1],\n                bodyB = bodies[i],\n                bodyAHeight = bodyA.bounds.max.y - bodyA.bounds.min.y,\n                bodyAWidth = bodyA.bounds.max.x - bodyA.bounds.min.x, \n                bodyBHeight = bodyB.bounds.max.y - bodyB.bounds.min.y,\n                bodyBWidth = bodyB.bounds.max.x - bodyB.bounds.min.x;\n        \n            var defaults = {\n                bodyA: bodyA,\n                pointA: { x: bodyAWidth * xOffsetA, y: bodyAHeight * yOffsetA },\n                bodyB: bodyB,\n                pointB: { x: bodyBWidth * xOffsetB, y: bodyBHeight * yOffsetB }\n            };\n            \n            var constraint = Common.extend(defaults, options);\n        \n            Composite.addConstraint(composite, Constraint.create(constraint));\n        }\n\n        composite.label += ' Chain';\n        \n        return composite;\n    };\n\n    /**\n     * Connects bodies in the composite with constraints in a grid pattern, with optional cross braces.\n     * @method mesh\n     * @param {composite} composite\n     * @param {number} columns\n     * @param {number} rows\n     * @param {boolean} crossBrace\n     * @param {object} options\n     * @return {composite} The composite containing objects meshed together with constraints\n     */\n    Composites.mesh = function(composite, columns, rows, crossBrace, options) {\n        var bodies = composite.bodies,\n            row,\n            col,\n            bodyA,\n            bodyB,\n            bodyC;\n        \n        for (row = 0; row < rows; row++) {\n            for (col = 1; col < columns; col++) {\n                bodyA = bodies[(col - 1) + (row * columns)];\n                bodyB = bodies[col + (row * columns)];\n                Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\n            }\n\n            if (row > 0) {\n                for (col = 0; col < columns; col++) {\n                    bodyA = bodies[col + ((row - 1) * columns)];\n                    bodyB = bodies[col + (row * columns)];\n                    Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\n\n                    if (crossBrace && col > 0) {\n                        bodyC = bodies[(col - 1) + ((row - 1) * columns)];\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\n                    }\n\n                    if (crossBrace && col < columns - 1) {\n                        bodyC = bodies[(col + 1) + ((row - 1) * columns)];\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\n                    }\n                }\n            }\n        }\n\n        composite.label += ' Mesh';\n        \n        return composite;\n    };\n    \n    /**\n     * Create a new composite containing bodies created in the callback in a pyramid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method pyramid\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n    Composites.pyramid = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n        return Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y, column, row, lastBody, i) {\n            var actualRows = Math.min(rows, Math.ceil(columns / 2)),\n                lastBodyWidth = lastBody ? lastBody.bounds.max.x - lastBody.bounds.min.x : 0;\n            \n            if (row > actualRows)\n                return;\n            \n            // reverse row order\n            row = actualRows - row;\n            \n            var start = row,\n                end = columns - 1 - row;\n\n            if (column < start || column > end)\n                return;\n            \n            // retroactively fix the first body's position, since width was unknown\n            if (i === 1) {\n                Body.translate(lastBody, { x: (column + (columns % 2 === 1 ? 1 : -1)) * lastBodyWidth, y: 0 });\n            }\n\n            var xOffset = lastBody ? column * lastBodyWidth : 0;\n            \n            return callback(xx + xOffset + column * columnGap, y, column, row, lastBody, i);\n        });\n    };\n\n    /**\n     * This has now moved to the [newtonsCradle example](https://github.com/liabru/matter-js/blob/master/examples/newtonsCradle.js), follow that instead as this function is deprecated here.\n     * @deprecated moved to newtonsCradle example\n     * @method newtonsCradle\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} number\n     * @param {number} size\n     * @param {number} length\n     * @return {composite} A new composite newtonsCradle body\n     */\n    Composites.newtonsCradle = function(xx, yy, number, size, length) {\n        var newtonsCradle = Composite.create({ label: 'Newtons Cradle' });\n\n        for (var i = 0; i < number; i++) {\n            var separation = 1.9,\n                circle = Bodies.circle(xx + i * (size * separation), yy + length, size, \n                    { inertia: Infinity, restitution: 1, friction: 0, frictionAir: 0.0001, slop: 1 }),\n                constraint = Constraint.create({ pointA: { x: xx + i * (size * separation), y: yy }, bodyB: circle });\n\n            Composite.addBody(newtonsCradle, circle);\n            Composite.addConstraint(newtonsCradle, constraint);\n        }\n\n        return newtonsCradle;\n    };\n\n    deprecated(Composites, 'newtonsCradle', 'Composites.newtonsCradle ➤ moved to newtonsCradle example');\n    \n    /**\n     * This has now moved to the [car example](https://github.com/liabru/matter-js/blob/master/examples/car.js), follow that instead as this function is deprecated here.\n     * @deprecated moved to car example\n     * @method car\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} width\n     * @param {number} height\n     * @param {number} wheelSize\n     * @return {composite} A new composite car body\n     */\n    Composites.car = function(xx, yy, width, height, wheelSize) {\n        var group = Body.nextGroup(true),\n            wheelBase = 20,\n            wheelAOffset = -width * 0.5 + wheelBase,\n            wheelBOffset = width * 0.5 - wheelBase,\n            wheelYOffset = 0;\n    \n        var car = Composite.create({ label: 'Car' }),\n            body = Bodies.rectangle(xx, yy, width, height, { \n                collisionFilter: {\n                    group: group\n                },\n                chamfer: {\n                    radius: height * 0.5\n                },\n                density: 0.0002\n            });\n    \n        var wheelA = Bodies.circle(xx + wheelAOffset, yy + wheelYOffset, wheelSize, { \n            collisionFilter: {\n                group: group\n            },\n            friction: 0.8\n        });\n                    \n        var wheelB = Bodies.circle(xx + wheelBOffset, yy + wheelYOffset, wheelSize, { \n            collisionFilter: {\n                group: group\n            },\n            friction: 0.8\n        });\n                    \n        var axelA = Constraint.create({\n            bodyB: body,\n            pointB: { x: wheelAOffset, y: wheelYOffset },\n            bodyA: wheelA,\n            stiffness: 1,\n            length: 0\n        });\n                        \n        var axelB = Constraint.create({\n            bodyB: body,\n            pointB: { x: wheelBOffset, y: wheelYOffset },\n            bodyA: wheelB,\n            stiffness: 1,\n            length: 0\n        });\n        \n        Composite.addBody(car, body);\n        Composite.addBody(car, wheelA);\n        Composite.addBody(car, wheelB);\n        Composite.addConstraint(car, axelA);\n        Composite.addConstraint(car, axelB);\n\n        return car;\n    };\n\n    deprecated(Composites, 'car', 'Composites.car ➤ moved to car example');\n\n    /**\n     * This has now moved to the [softBody example](https://github.com/liabru/matter-js/blob/master/examples/softBody.js)\n     * and the [cloth example](https://github.com/liabru/matter-js/blob/master/examples/cloth.js), follow those instead as this function is deprecated here.\n     * @deprecated moved to softBody and cloth examples\n     * @method softBody\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {boolean} crossBrace\n     * @param {number} particleRadius\n     * @param {} particleOptions\n     * @param {} constraintOptions\n     * @return {composite} A new composite softBody\n     */\n    Composites.softBody = function(xx, yy, columns, rows, columnGap, rowGap, crossBrace, particleRadius, particleOptions, constraintOptions) {\n        particleOptions = Common.extend({ inertia: Infinity }, particleOptions);\n        constraintOptions = Common.extend({ stiffness: 0.2, render: { type: 'line', anchors: false } }, constraintOptions);\n\n        var softBody = Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y) {\n            return Bodies.circle(x, y, particleRadius, particleOptions);\n        });\n\n        Composites.mesh(softBody, columns, rows, crossBrace, constraintOptions);\n\n        softBody.label = 'Soft Body';\n\n        return softBody;\n    };\n\n    deprecated(Composites, 'softBody', 'Composites.softBody ➤ moved to softBody and cloth examples');\n})();\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* This module has now been replaced by `Matter.Detector`.\n*\n* All usage should be migrated to `Matter.Detector` or another alternative.\n* For back-compatibility purposes this module will remain for a short term and then later removed in a future release.\n*\n* The `Matter.Grid` module contains methods for creating and manipulating collision broadphase grid structures.\n*\n* @class Grid\n* @deprecated\n*/\n\nvar Grid = {};\n\nmodule.exports = Grid;\n\nvar Pair = __webpack_require__(9);\nvar Common = __webpack_require__(0);\nvar deprecated = Common.deprecated;\n\n(function() {\n\n    /**\n     * Creates a new grid.\n     * @deprecated replaced by Matter.Detector\n     * @method create\n     * @param {} options\n     * @return {grid} A new grid\n     */\n    Grid.create = function(options) {\n        var defaults = {\n            buckets: {},\n            pairs: {},\n            pairsList: [],\n            bucketWidth: 48,\n            bucketHeight: 48\n        };\n\n        return Common.extend(defaults, options);\n    };\n\n    /**\n     * The width of a single grid bucket.\n     *\n     * @property bucketWidth\n     * @type number\n     * @default 48\n     */\n\n    /**\n     * The height of a single grid bucket.\n     *\n     * @property bucketHeight\n     * @type number\n     * @default 48\n     */\n\n    /**\n     * Updates the grid.\n     * @deprecated replaced by Matter.Detector\n     * @method update\n     * @param {grid} grid\n     * @param {body[]} bodies\n     * @param {engine} engine\n     * @param {boolean} forceUpdate\n     */\n    Grid.update = function(grid, bodies, engine, forceUpdate) {\n        var i, col, row,\n            world = engine.world,\n            buckets = grid.buckets,\n            bucket,\n            bucketId,\n            gridChanged = false;\n\n        for (i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isSleeping && !forceUpdate)\n                continue;\n\n            // temporary back compatibility bounds check\n            if (world.bounds && (body.bounds.max.x < world.bounds.min.x || body.bounds.min.x > world.bounds.max.x\n                || body.bounds.max.y < world.bounds.min.y || body.bounds.min.y > world.bounds.max.y))\n                continue;\n\n            var newRegion = Grid._getRegion(grid, body);\n\n            // if the body has changed grid region\n            if (!body.region || newRegion.id !== body.region.id || forceUpdate) {\n\n                if (!body.region || forceUpdate)\n                    body.region = newRegion;\n\n                var union = Grid._regionUnion(newRegion, body.region);\n\n                // update grid buckets affected by region change\n                // iterate over the union of both regions\n                for (col = union.startCol; col <= union.endCol; col++) {\n                    for (row = union.startRow; row <= union.endRow; row++) {\n                        bucketId = Grid._getBucketId(col, row);\n                        bucket = buckets[bucketId];\n\n                        var isInsideNewRegion = (col >= newRegion.startCol && col <= newRegion.endCol\n                                                && row >= newRegion.startRow && row <= newRegion.endRow);\n\n                        var isInsideOldRegion = (col >= body.region.startCol && col <= body.region.endCol\n                                                && row >= body.region.startRow && row <= body.region.endRow);\n\n                        // remove from old region buckets\n                        if (!isInsideNewRegion && isInsideOldRegion) {\n                            if (isInsideOldRegion) {\n                                if (bucket)\n                                    Grid._bucketRemoveBody(grid, bucket, body);\n                            }\n                        }\n\n                        // add to new region buckets\n                        if (body.region === newRegion || (isInsideNewRegion && !isInsideOldRegion) || forceUpdate) {\n                            if (!bucket)\n                                bucket = Grid._createBucket(buckets, bucketId);\n                            Grid._bucketAddBody(grid, bucket, body);\n                        }\n                    }\n                }\n\n                // set the new region\n                body.region = newRegion;\n\n                // flag changes so we can update pairs\n                gridChanged = true;\n            }\n        }\n\n        // update pairs list only if pairs changed (i.e. a body changed region)\n        if (gridChanged)\n            grid.pairsList = Grid._createActivePairsList(grid);\n    };\n\n    deprecated(Grid, 'update', 'Grid.update ➤ replaced by Matter.Detector');\n\n    /**\n     * Clears the grid.\n     * @deprecated replaced by Matter.Detector\n     * @method clear\n     * @param {grid} grid\n     */\n    Grid.clear = function(grid) {\n        grid.buckets = {};\n        grid.pairs = {};\n        grid.pairsList = [];\n    };\n\n    deprecated(Grid, 'clear', 'Grid.clear ➤ replaced by Matter.Detector');\n\n    /**\n     * Finds the union of two regions.\n     * @method _regionUnion\n     * @deprecated replaced by Matter.Detector\n     * @private\n     * @param {} regionA\n     * @param {} regionB\n     * @return {} region\n     */\n    Grid._regionUnion = function(regionA, regionB) {\n        var startCol = Math.min(regionA.startCol, regionB.startCol),\n            endCol = Math.max(regionA.endCol, regionB.endCol),\n            startRow = Math.min(regionA.startRow, regionB.startRow),\n            endRow = Math.max(regionA.endRow, regionB.endRow);\n\n        return Grid._createRegion(startCol, endCol, startRow, endRow);\n    };\n\n    /**\n     * Gets the region a given body falls in for a given grid.\n     * @method _getRegion\n     * @deprecated replaced by Matter.Detector\n     * @private\n     * @param {} grid\n     * @param {} body\n     * @return {} region\n     */\n    Grid._getRegion = function(grid, body) {\n        var bounds = body.bounds,\n            startCol = Math.floor(bounds.min.x / grid.bucketWidth),\n            endCol = Math.floor(bounds.max.x / grid.bucketWidth),\n            startRow = Math.floor(bounds.min.y / grid.bucketHeight),\n            endRow = Math.floor(bounds.max.y / grid.bucketHeight);\n\n        return Grid._createRegion(startCol, endCol, startRow, endRow);\n    };\n\n    /**\n     * Creates a region.\n     * @method _createRegion\n     * @deprecated replaced by Matter.Detector\n     * @private\n     * @param {} startCol\n     * @param {} endCol\n     * @param {} startRow\n     * @param {} endRow\n     * @return {} region\n     */\n    Grid._createRegion = function(startCol, endCol, startRow, endRow) {\n        return { \n            id: startCol + ',' + endCol + ',' + startRow + ',' + endRow,\n            startCol: startCol, \n            endCol: endCol, \n            startRow: startRow, \n            endRow: endRow \n        };\n    };\n\n    /**\n     * Gets the bucket id at the given position.\n     * @method _getBucketId\n     * @deprecated replaced by Matter.Detector\n     * @private\n     * @param {} column\n     * @param {} row\n     * @return {string} bucket id\n     */\n    Grid._getBucketId = function(column, row) {\n        return 'C' + column + 'R' + row;\n    };\n\n    /**\n     * Creates a bucket.\n     * @method _createBucket\n     * @deprecated replaced by Matter.Detector\n     * @private\n     * @param {} buckets\n     * @param {} bucketId\n     * @return {} bucket\n     */\n    Grid._createBucket = function(buckets, bucketId) {\n        var bucket = buckets[bucketId] = [];\n        return bucket;\n    };\n\n    /**\n     * Adds a body to a bucket.\n     * @method _bucketAddBody\n     * @deprecated replaced by Matter.Detector\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n    Grid._bucketAddBody = function(grid, bucket, body) {\n        var gridPairs = grid.pairs,\n            pairId = Pair.id,\n            bucketLength = bucket.length,\n            i;\n\n        // add new pairs\n        for (i = 0; i < bucketLength; i++) {\n            var bodyB = bucket[i];\n\n            if (body.id === bodyB.id || (body.isStatic && bodyB.isStatic))\n                continue;\n\n            // keep track of the number of buckets the pair exists in\n            // important for Grid.update to work\n            var id = pairId(body, bodyB),\n                pair = gridPairs[id];\n\n            if (pair) {\n                pair[2] += 1;\n            } else {\n                gridPairs[id] = [body, bodyB, 1];\n            }\n        }\n\n        // add to bodies (after pairs, otherwise pairs with self)\n        bucket.push(body);\n    };\n\n    /**\n     * Removes a body from a bucket.\n     * @method _bucketRemoveBody\n     * @deprecated replaced by Matter.Detector\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n    Grid._bucketRemoveBody = function(grid, bucket, body) {\n        var gridPairs = grid.pairs,\n            pairId = Pair.id,\n            i;\n\n        // remove from bucket\n        bucket.splice(Common.indexOf(bucket, body), 1);\n\n        var bucketLength = bucket.length;\n\n        // update pair counts\n        for (i = 0; i < bucketLength; i++) {\n            // keep track of the number of buckets the pair exists in\n            // important for _createActivePairsList to work\n            var pair = gridPairs[pairId(body, bucket[i])];\n\n            if (pair)\n                pair[2] -= 1;\n        }\n    };\n\n    /**\n     * Generates a list of the active pairs in the grid.\n     * @method _createActivePairsList\n     * @deprecated replaced by Matter.Detector\n     * @private\n     * @param {} grid\n     * @return [] pairs\n     */\n    Grid._createActivePairsList = function(grid) {\n        var pair,\n            gridPairs = grid.pairs,\n            pairKeys = Common.keys(gridPairs),\n            pairKeysLength = pairKeys.length,\n            pairs = [],\n            k;\n\n        // iterate over grid.pairs\n        for (k = 0; k < pairKeysLength; k++) {\n            pair = gridPairs[pairKeys[k]];\n\n            // if pair exists in at least one bucket\n            // it is a pair that needs further collision testing so push it\n            if (pair[2] > 0) {\n                pairs.push(pair);\n            } else {\n                delete gridPairs[pairKeys[k]];\n            }\n        }\n\n        return pairs;\n    };\n    \n})();\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.MouseConstraint` module contains methods for creating mouse constraints.\n* Mouse constraints are used for allowing user interaction, providing the ability to move bodies via the mouse or touch.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class MouseConstraint\n*/\n\nvar MouseConstraint = {};\n\nmodule.exports = MouseConstraint;\n\nvar Vertices = __webpack_require__(3);\nvar Sleeping = __webpack_require__(7);\nvar Mouse = __webpack_require__(13);\nvar Events = __webpack_require__(4);\nvar Detector = __webpack_require__(14);\nvar Constraint = __webpack_require__(10);\nvar Composite = __webpack_require__(5);\nvar Common = __webpack_require__(0);\nvar Bounds = __webpack_require__(1);\n\n(function() {\n\n    /**\n     * Creates a new mouse constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {engine} engine\n     * @param {} options\n     * @return {MouseConstraint} A new MouseConstraint\n     */\n    MouseConstraint.create = function(engine, options) {\n        var mouse = (engine ? engine.mouse : null) || (options ? options.mouse : null);\n\n        if (!mouse) {\n            if (engine && engine.render && engine.render.canvas) {\n                mouse = Mouse.create(engine.render.canvas);\n            } else if (options && options.element) {\n                mouse = Mouse.create(options.element);\n            } else {\n                mouse = Mouse.create();\n                Common.warn('MouseConstraint.create: options.mouse was undefined, options.element was undefined, may not function as expected');\n            }\n        }\n\n        var constraint = Constraint.create({ \n            label: 'Mouse Constraint',\n            pointA: mouse.position,\n            pointB: { x: 0, y: 0 },\n            length: 0.01, \n            stiffness: 0.1,\n            angularStiffness: 1,\n            render: {\n                strokeStyle: '#90EE90',\n                lineWidth: 3\n            }\n        });\n\n        var defaults = {\n            type: 'mouseConstraint',\n            mouse: mouse,\n            element: null,\n            body: null,\n            constraint: constraint,\n            collisionFilter: {\n                category: 0x0001,\n                mask: 0xFFFFFFFF,\n                group: 0\n            }\n        };\n\n        var mouseConstraint = Common.extend(defaults, options);\n\n        Events.on(engine, 'beforeUpdate', function() {\n            var allBodies = Composite.allBodies(engine.world);\n            MouseConstraint.update(mouseConstraint, allBodies);\n            MouseConstraint._triggerEvents(mouseConstraint);\n        });\n\n        return mouseConstraint;\n    };\n\n    /**\n     * Updates the given mouse constraint.\n     * @private\n     * @method update\n     * @param {MouseConstraint} mouseConstraint\n     * @param {body[]} bodies\n     */\n    MouseConstraint.update = function(mouseConstraint, bodies) {\n        var mouse = mouseConstraint.mouse,\n            constraint = mouseConstraint.constraint,\n            body = mouseConstraint.body;\n\n        if (mouse.button === 0) {\n            if (!constraint.bodyB) {\n                for (var i = 0; i < bodies.length; i++) {\n                    body = bodies[i];\n                    if (Bounds.contains(body.bounds, mouse.position) \n                            && Detector.canCollide(body.collisionFilter, mouseConstraint.collisionFilter)) {\n                        for (var j = body.parts.length > 1 ? 1 : 0; j < body.parts.length; j++) {\n                            var part = body.parts[j];\n                            if (Vertices.contains(part.vertices, mouse.position)) {\n                                constraint.pointA = mouse.position;\n                                constraint.bodyB = mouseConstraint.body = body;\n                                constraint.pointB = { x: mouse.position.x - body.position.x, y: mouse.position.y - body.position.y };\n                                constraint.angleB = body.angle;\n\n                                Sleeping.set(body, false);\n                                Events.trigger(mouseConstraint, 'startdrag', { mouse: mouse, body: body });\n\n                                break;\n                            }\n                        }\n                    }\n                }\n            } else {\n                Sleeping.set(constraint.bodyB, false);\n                constraint.pointA = mouse.position;\n            }\n        } else {\n            constraint.bodyB = mouseConstraint.body = null;\n            constraint.pointB = null;\n\n            if (body)\n                Events.trigger(mouseConstraint, 'enddrag', { mouse: mouse, body: body });\n        }\n    };\n\n    /**\n     * Triggers mouse constraint events.\n     * @method _triggerEvents\n     * @private\n     * @param {mouse} mouseConstraint\n     */\n    MouseConstraint._triggerEvents = function(mouseConstraint) {\n        var mouse = mouseConstraint.mouse,\n            mouseEvents = mouse.sourceEvents;\n\n        if (mouseEvents.mousemove)\n            Events.trigger(mouseConstraint, 'mousemove', { mouse: mouse });\n\n        if (mouseEvents.mousedown)\n            Events.trigger(mouseConstraint, 'mousedown', { mouse: mouse });\n\n        if (mouseEvents.mouseup)\n            Events.trigger(mouseConstraint, 'mouseup', { mouse: mouse });\n\n        // reset the mouse state ready for the next step\n        Mouse.clearSourceEvents(mouse);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when the mouse has moved (or a touch moves) during the last step\n    *\n    * @event mousemove\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the mouse is down (or a touch has started) during the last step\n    *\n    * @event mousedown\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the mouse is up (or a touch has ended) during the last step\n    *\n    * @event mouseup\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the user starts dragging a body\n    *\n    * @event startdrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the user ends dragging a body\n    *\n    * @event enddrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body that has stopped being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n    /**\n     * The `Mouse` instance in use. If not supplied in `MouseConstraint.create`, one will be created.\n     *\n     * @property mouse\n     * @type mouse\n     * @default mouse\n     */\n\n    /**\n     * The `Body` that is currently being moved by the user, or `null` if no body.\n     *\n     * @property body\n     * @type body\n     * @default null\n     */\n\n    /**\n     * The `Constraint` object that is used to move the body during interaction.\n     *\n     * @property constraint\n     * @type constraint\n     */\n\n    /**\n     * An `Object` that specifies the collision filter properties.\n     * The collision filter allows the user to define which types of body this mouse constraint can interact with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n})();\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Query` module contains methods for performing collision queries.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Query\n*/\n\nvar Query = {};\n\nmodule.exports = Query;\n\nvar Vector = __webpack_require__(2);\nvar Collision = __webpack_require__(8);\nvar Bounds = __webpack_require__(1);\nvar Bodies = __webpack_require__(12);\nvar Vertices = __webpack_require__(3);\n\n(function() {\n\n    /**\n     * Returns a list of collisions between `body` and `bodies`.\n     * @method collides\n     * @param {body} body\n     * @param {body[]} bodies\n     * @return {collision[]} Collisions\n     */\n    Query.collides = function(body, bodies) {\n        var collisions = [],\n            bodiesLength = bodies.length,\n            bounds = body.bounds,\n            collides = Collision.collides,\n            overlaps = Bounds.overlaps;\n\n        for (var i = 0; i < bodiesLength; i++) {\n            var bodyA = bodies[i],\n                partsALength = bodyA.parts.length,\n                partsAStart = partsALength === 1 ? 0 : 1;\n            \n            if (overlaps(bodyA.bounds, bounds)) {\n                for (var j = partsAStart; j < partsALength; j++) {\n                    var part = bodyA.parts[j];\n\n                    if (overlaps(part.bounds, bounds)) {\n                        var collision = collides(part, body);\n\n                        if (collision) {\n                            collisions.push(collision);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n\n        return collisions;\n    };\n\n    /**\n     * Casts a ray segment against a set of bodies and returns all collisions, ray width is optional. Intersection points are not provided.\n     * @method ray\n     * @param {body[]} bodies\n     * @param {vector} startPoint\n     * @param {vector} endPoint\n     * @param {number} [rayWidth]\n     * @return {collision[]} Collisions\n     */\n    Query.ray = function(bodies, startPoint, endPoint, rayWidth) {\n        rayWidth = rayWidth || 1e-100;\n\n        var rayAngle = Vector.angle(startPoint, endPoint),\n            rayLength = Vector.magnitude(Vector.sub(startPoint, endPoint)),\n            rayX = (endPoint.x + startPoint.x) * 0.5,\n            rayY = (endPoint.y + startPoint.y) * 0.5,\n            ray = Bodies.rectangle(rayX, rayY, rayLength, rayWidth, { angle: rayAngle }),\n            collisions = Query.collides(ray, bodies);\n\n        for (var i = 0; i < collisions.length; i += 1) {\n            var collision = collisions[i];\n            collision.body = collision.bodyB = collision.bodyA;            \n        }\n\n        return collisions;\n    };\n\n    /**\n     * Returns all bodies whose bounds are inside (or outside if set) the given set of bounds, from the given set of bodies.\n     * @method region\n     * @param {body[]} bodies\n     * @param {bounds} bounds\n     * @param {bool} [outside=false]\n     * @return {body[]} The bodies matching the query\n     */\n    Query.region = function(bodies, bounds, outside) {\n        var result = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                overlaps = Bounds.overlaps(body.bounds, bounds);\n            if ((overlaps && !outside) || (!overlaps && outside))\n                result.push(body);\n        }\n\n        return result;\n    };\n\n    /**\n     * Returns all bodies whose vertices contain the given point, from the given set of bodies.\n     * @method point\n     * @param {body[]} bodies\n     * @param {vector} point\n     * @return {body[]} The bodies matching the query\n     */\n    Query.point = function(bodies, point) {\n        var result = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n            \n            if (Bounds.contains(body.bounds, point)) {\n                for (var j = body.parts.length === 1 ? 0 : 1; j < body.parts.length; j++) {\n                    var part = body.parts[j];\n\n                    if (Bounds.contains(part.bounds, point)\n                        && Vertices.contains(part.vertices, point)) {\n                        result.push(body);\n                        break;\n                    }\n                }\n            }\n        }\n\n        return result;\n    };\n\n})();\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Runner` module is an optional utility which provides a game loop, \n* that handles continuously updating a `Matter.Engine` for you within a browser.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* If you are using your own game loop instead, then you do not need the `Matter.Runner` module.\n* Instead just call `Engine.update(engine, delta)` in your own loop.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Runner\n*/\n\nvar Runner = {};\n\nmodule.exports = Runner;\n\nvar Events = __webpack_require__(4);\nvar Engine = __webpack_require__(18);\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame;\n   \n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame \n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    if (!_requestAnimationFrame) {\n        var _frameTimeout;\n\n        _requestAnimationFrame = function(callback){ \n            _frameTimeout = setTimeout(function() { \n                callback(Common.now()); \n            }, 1000 / 60);\n        };\n\n        _cancelAnimationFrame = function() {\n            clearTimeout(_frameTimeout);\n        };\n    }\n\n    /**\n     * Creates a new Runner. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * @method create\n     * @param {} options\n     */\n    Runner.create = function(options) {\n        var defaults = {\n            fps: 60,\n            correction: 1,\n            deltaSampleSize: 60,\n            counterTimestamp: 0,\n            frameCounter: 0,\n            deltaHistory: [],\n            timePrev: null,\n            timeScalePrev: 1,\n            frameRequestId: null,\n            isFixed: false,\n            enabled: true\n        };\n\n        var runner = Common.extend(defaults, options);\n\n        runner.delta = runner.delta || 1000 / runner.fps;\n        runner.deltaMin = runner.deltaMin || 1000 / runner.fps;\n        runner.deltaMax = runner.deltaMax || 1000 / (runner.fps * 0.5);\n        runner.fps = 1000 / runner.delta;\n\n        return runner;\n    };\n\n    /**\n     * Continuously ticks a `Matter.Engine` by calling `Runner.tick` on the `requestAnimationFrame` event.\n     * @method run\n     * @param {engine} engine\n     */\n    Runner.run = function(runner, engine) {\n        // create runner if engine is first argument\n        if (typeof runner.positionIterations !== 'undefined') {\n            engine = runner;\n            runner = Runner.create();\n        }\n\n        (function render(time){\n            runner.frameRequestId = _requestAnimationFrame(render);\n\n            if (time && runner.enabled) {\n                Runner.tick(runner, engine, time);\n            }\n        })();\n\n        return runner;\n    };\n\n    /**\n     * A game loop utility that updates the engine and renderer by one step (a 'tick').\n     * Features delta smoothing, time correction and fixed or dynamic timing.\n     * Consider just `Engine.update(engine, delta)` if you're using your own loop.\n     * @method tick\n     * @param {runner} runner\n     * @param {engine} engine\n     * @param {number} time\n     */\n    Runner.tick = function(runner, engine, time) {\n        var timing = engine.timing,\n            correction = 1,\n            delta;\n\n        // create an event object\n        var event = {\n            timestamp: timing.timestamp\n        };\n\n        Events.trigger(runner, 'beforeTick', event);\n\n        if (runner.isFixed) {\n            // fixed timestep\n            delta = runner.delta;\n        } else {\n            // dynamic timestep based on wall clock between calls\n            delta = (time - runner.timePrev) || runner.delta;\n            runner.timePrev = time;\n\n            // optimistically filter delta over a few frames, to improve stability\n            runner.deltaHistory.push(delta);\n            runner.deltaHistory = runner.deltaHistory.slice(-runner.deltaSampleSize);\n            delta = Math.min.apply(null, runner.deltaHistory);\n            \n            // limit delta\n            delta = delta < runner.deltaMin ? runner.deltaMin : delta;\n            delta = delta > runner.deltaMax ? runner.deltaMax : delta;\n\n            // correction for delta\n            correction = delta / runner.delta;\n\n            // update engine timing object\n            runner.delta = delta;\n        }\n\n        // time correction for time scaling\n        if (runner.timeScalePrev !== 0)\n            correction *= timing.timeScale / runner.timeScalePrev;\n\n        if (timing.timeScale === 0)\n            correction = 0;\n\n        runner.timeScalePrev = timing.timeScale;\n        runner.correction = correction;\n\n        // fps counter\n        runner.frameCounter += 1;\n        if (time - runner.counterTimestamp >= 1000) {\n            runner.fps = runner.frameCounter * ((time - runner.counterTimestamp) / 1000);\n            runner.counterTimestamp = time;\n            runner.frameCounter = 0;\n        }\n\n        Events.trigger(runner, 'tick', event);\n\n        // update\n        Events.trigger(runner, 'beforeUpdate', event);\n        Engine.update(engine, delta, correction);\n        Events.trigger(runner, 'afterUpdate', event);\n\n        Events.trigger(runner, 'afterTick', event);\n    };\n\n    /**\n     * Ends execution of `Runner.run` on the given `runner`, by canceling the animation frame request event loop.\n     * If you wish to only temporarily pause the engine, see `engine.enabled` instead.\n     * @method stop\n     * @param {runner} runner\n     */\n    Runner.stop = function(runner) {\n        _cancelAnimationFrame(runner.frameRequestId);\n    };\n\n    /**\n     * Alias for `Runner.run`.\n     * @method start\n     * @param {runner} runner\n     * @param {engine} engine\n     */\n    Runner.start = function(runner, engine) {\n        Runner.run(runner, engine);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired at the start of a tick, before any updates to the engine or timing\n    *\n    * @event beforeTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine timing updated, but just before update\n    *\n    * @event tick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired at the end of a tick, after engine update and after rendering\n    *\n    * @event afterTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired before update\n    *\n    * @event beforeUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after update\n    *\n    * @event afterUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A flag that specifies whether the runner is running or not.\n     *\n     * @property enabled\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A `Boolean` that specifies if the runner should use a fixed timestep (otherwise it is variable).\n     * If timing is fixed, then the apparent simulation speed will change depending on the frame rate (but behaviour will be deterministic).\n     * If the timing is variable, then the apparent simulation speed will be constant (approximately, but at the cost of determininism).\n     *\n     * @property isFixed\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Number` that specifies the time step between updates in milliseconds.\n     * If `engine.timing.isFixed` is set to `true`, then `delta` is fixed.\n     * If it is `false`, then `delta` can dynamically change to maintain the correct apparent simulation speed.\n     *\n     * @property delta\n     * @type number\n     * @default 1000 / 60\n     */\n\n})();\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* This module has now been replaced by `Matter.Collision`.\n*\n* All usage should be migrated to `Matter.Collision`.\n* For back-compatibility purposes this module will remain for a short term and then later removed in a future release.\n*\n* The `Matter.SAT` module contains methods for detecting collisions using the Separating Axis Theorem.\n*\n* @class SAT\n* @deprecated\n*/\n\nvar SAT = {};\n\nmodule.exports = SAT;\n\nvar Collision = __webpack_require__(8);\nvar Common = __webpack_require__(0);\nvar deprecated = Common.deprecated;\n\n(function() {\n\n    /**\n     * Detect collision between two bodies using the Separating Axis Theorem.\n     * @deprecated replaced by Collision.collides\n     * @method collides\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @return {collision} collision\n     */\n    SAT.collides = function(bodyA, bodyB) {\n        return Collision.collides(bodyA, bodyB);\n    };\n\n    deprecated(SAT, 'collides', 'SAT.collides ➤ replaced by Collision.collides');\n\n})();\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Svg` module contains methods for converting SVG images into an array of vector points.\n*\n* To use this module you also need the SVGPathSeg polyfill: https://github.com/progers/pathseg\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Svg\n*/\n\nvar Svg = {};\n\nmodule.exports = Svg;\n\nvar Bounds = __webpack_require__(1);\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    /**\n     * Converts an SVG path into an array of vector points.\n     * If the input path forms a concave shape, you must decompose the result into convex parts before use.\n     * See `Bodies.fromVertices` which provides support for this.\n     * Note that this function is not guaranteed to support complex paths (such as those with holes).\n     * You must load the `pathseg.js` polyfill on newer browsers.\n     * @method pathToVertices\n     * @param {SVGPathElement} path\n     * @param {Number} [sampleLength=15]\n     * @return {Vector[]} points\n     */\n    Svg.pathToVertices = function(path, sampleLength) {\n        if (typeof window !== 'undefined' && !('SVGPathSeg' in window)) {\n            Common.warn('Svg.pathToVertices: SVGPathSeg not defined, a polyfill is required.');\n        }\n\n        // https://github.com/wout/svg.topoly.js/blob/master/svg.topoly.js\n        var i, il, total, point, segment, segments, \n            segmentsQueue, lastSegment, \n            lastPoint, segmentIndex, points = [],\n            lx, ly, length = 0, x = 0, y = 0;\n\n        sampleLength = sampleLength || 15;\n\n        var addPoint = function(px, py, pathSegType) {\n            // all odd-numbered path types are relative except PATHSEG_CLOSEPATH (1)\n            var isRelative = pathSegType % 2 === 1 && pathSegType > 1;\n\n            // when the last point doesn't equal the current point add the current point\n            if (!lastPoint || px != lastPoint.x || py != lastPoint.y) {\n                if (lastPoint && isRelative) {\n                    lx = lastPoint.x;\n                    ly = lastPoint.y;\n                } else {\n                    lx = 0;\n                    ly = 0;\n                }\n\n                var point = {\n                    x: lx + px,\n                    y: ly + py\n                };\n\n                // set last point\n                if (isRelative || !lastPoint) {\n                    lastPoint = point;\n                }\n\n                points.push(point);\n\n                x = lx + px;\n                y = ly + py;\n            }\n        };\n\n        var addSegmentPoint = function(segment) {\n            var segType = segment.pathSegTypeAsLetter.toUpperCase();\n\n            // skip path ends\n            if (segType === 'Z') \n                return;\n\n            // map segment to x and y\n            switch (segType) {\n\n            case 'M':\n            case 'L':\n            case 'T':\n            case 'C':\n            case 'S':\n            case 'Q':\n                x = segment.x;\n                y = segment.y;\n                break;\n            case 'H':\n                x = segment.x;\n                break;\n            case 'V':\n                y = segment.y;\n                break;\n            }\n\n            addPoint(x, y, segment.pathSegType);\n        };\n\n        // ensure path is absolute\n        Svg._svgPathToAbsolute(path);\n\n        // get total length\n        total = path.getTotalLength();\n\n        // queue segments\n        segments = [];\n        for (i = 0; i < path.pathSegList.numberOfItems; i += 1)\n            segments.push(path.pathSegList.getItem(i));\n\n        segmentsQueue = segments.concat();\n\n        // sample through path\n        while (length < total) {\n            // get segment at position\n            segmentIndex = path.getPathSegAtLength(length);\n            segment = segments[segmentIndex];\n\n            // new segment\n            if (segment != lastSegment) {\n                while (segmentsQueue.length && segmentsQueue[0] != segment)\n                    addSegmentPoint(segmentsQueue.shift());\n\n                lastSegment = segment;\n            }\n\n            // add points in between when curving\n            // TODO: adaptive sampling\n            switch (segment.pathSegTypeAsLetter.toUpperCase()) {\n\n            case 'C':\n            case 'T':\n            case 'S':\n            case 'Q':\n            case 'A':\n                point = path.getPointAtLength(length);\n                addPoint(point.x, point.y, 0);\n                break;\n\n            }\n\n            // increment by sample value\n            length += sampleLength;\n        }\n\n        // add remaining segments not passed by sampling\n        for (i = 0, il = segmentsQueue.length; i < il; ++i)\n            addSegmentPoint(segmentsQueue[i]);\n\n        return points;\n    };\n\n    Svg._svgPathToAbsolute = function(path) {\n        // http://phrogz.net/convert-svg-path-to-all-absolute-commands\n        // Copyright (c) Gavin Kistner\n        // http://phrogz.net/js/_ReuseLicense.txt\n        // Modifications: tidy formatting and naming\n        var x0, y0, x1, y1, x2, y2, segs = path.pathSegList,\n            x = 0, y = 0, len = segs.numberOfItems;\n\n        for (var i = 0; i < len; ++i) {\n            var seg = segs.getItem(i),\n                segType = seg.pathSegTypeAsLetter;\n\n            if (/[MLHVCSQTA]/.test(segType)) {\n                if ('x' in seg) x = seg.x;\n                if ('y' in seg) y = seg.y;\n            } else {\n                if ('x1' in seg) x1 = x + seg.x1;\n                if ('x2' in seg) x2 = x + seg.x2;\n                if ('y1' in seg) y1 = y + seg.y1;\n                if ('y2' in seg) y2 = y + seg.y2;\n                if ('x' in seg) x += seg.x;\n                if ('y' in seg) y += seg.y;\n\n                switch (segType) {\n\n                case 'm':\n                    segs.replaceItem(path.createSVGPathSegMovetoAbs(x, y), i);\n                    break;\n                case 'l':\n                    segs.replaceItem(path.createSVGPathSegLinetoAbs(x, y), i);\n                    break;\n                case 'h':\n                    segs.replaceItem(path.createSVGPathSegLinetoHorizontalAbs(x), i);\n                    break;\n                case 'v':\n                    segs.replaceItem(path.createSVGPathSegLinetoVerticalAbs(y), i);\n                    break;\n                case 'c':\n                    segs.replaceItem(path.createSVGPathSegCurvetoCubicAbs(x, y, x1, y1, x2, y2), i);\n                    break;\n                case 's':\n                    segs.replaceItem(path.createSVGPathSegCurvetoCubicSmoothAbs(x, y, x2, y2), i);\n                    break;\n                case 'q':\n                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticAbs(x, y, x1, y1), i);\n                    break;\n                case 't':\n                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticSmoothAbs(x, y), i);\n                    break;\n                case 'a':\n                    segs.replaceItem(path.createSVGPathSegArcAbs(x, y, seg.r1, seg.r2, seg.angle, seg.largeArcFlag, seg.sweepFlag), i);\n                    break;\n                case 'z':\n                case 'Z':\n                    x = x0;\n                    y = y0;\n                    break;\n\n                }\n            }\n\n            if (segType == 'M' || segType == 'm') {\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n\n})();\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* This module has now been replaced by `Matter.Composite`.\n*\n* All usage should be migrated to the equivalent functions found on `Matter.Composite`.\n* For example `World.add(world, body)` now becomes `Composite.add(world, body)`.\n*\n* The property `world.gravity` has been moved to `engine.gravity`.\n*\n* For back-compatibility purposes this module will remain as a direct alias to `Matter.Composite` in the short term during migration.\n* Eventually this alias module will be marked as deprecated and then later removed in a future release.\n*\n* @class World\n*/\n\nvar World = {};\n\nmodule.exports = World;\n\nvar Composite = __webpack_require__(5);\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    /**\n     * See above, aliases for back compatibility only\n     */\n    World.create = Composite.create;\n    World.add = Composite.add;\n    World.remove = Composite.remove;\n    World.clear = Composite.clear;\n    World.addComposite = Composite.addComposite;\n    World.addBody = Composite.addBody;\n    World.addConstraint = Composite.addConstraint;\n\n})();\n\n\n/***/ })\n/******/ ]);\n});","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"],"sourceRoot":""}