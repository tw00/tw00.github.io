<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tils on My New Hugo Site</title><link>http://tw00.github.io/til/</link><description>Recent content in Tils on My New Hugo Site</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="http://tw00.github.io/til/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>http://tw00.github.io/til/2019-10-30/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://tw00.github.io/til/2019-10-30/</guid><description>Rather then writing a huge blog series, I should aim for &amp;lt; 15 min when writing an article.</description></item><item><title/><link>http://tw00.github.io/til/2019-10-31/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://tw00.github.io/til/2019-10-31/</guid><description>SceneManager.LoadScene(&amp;quot;OtherSceneName&amp;quot;, LoadSceneMode.Additive); loads a seconds scene in unity, so level and logic can be seperated.
Paint could be used as a level designer for unity.
If I don&amp;rsquo;t pay attention I waste a lot of time.
Goalpilot does not manage goals, but tasks. It should actually help me stay on track.
Y-Combinator is named after the Y-Combinatator from Lambda calculus, which enables recursion (Y-Combinator is a company that creates companies.) It is:</description></item><item><title/><link>http://tw00.github.io/til/2019-11-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://tw00.github.io/til/2019-11-01/</guid><description>2019-11-01.md const log0 = (&amp;hellip;args) =&amp;gt; console.log(&amp;ldquo;%c&amp;rdquo; + args[0], &amp;ldquo;color: #69b42d; background-color: #e0e0e0&amp;rdquo;, &amp;hellip;args.slice(1));</description></item><item><title/><link>http://tw00.github.io/til/2019-11-04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://tw00.github.io/til/2019-11-04/</guid><description>When &amp;lsquo;import &amp;hellip; from&amp;rsquo; results in undefined in webpack, I probably have a circular dependency.</description></item><item><title/><link>http://tw00.github.io/til/dump/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://tw00.github.io/til/dump/</guid><description>const log0 = (...args) =&amp;gt; console.log(&amp;quot;%c&amp;quot; + args[0], &amp;quot;color: #69b42d; background-color: #e0e0e0&amp;quot;, ...args.slice(1)); import Vue from &#39;vue&#39; const POPOVER_DOM_NODE_ID = &#39;global-popover-container&#39;; const APPEND_WRAPPER_INSTANCE_TO_BODY = false; /* Usage: import myToolipComponent from &#39;./myToolipComponent&#39; addPopover(&#39;UNIQUE-ID&#39;, myToolipComponent, this.$refs.referenceNode, reactiveData ); showPopover(&#39;UNIQUE-ID&#39;, this.$refs.referenceNode) hidePopover(&#39;UNIQUE-ID&#39;) */ function reactiveWrapComponent( component, data ) { return new Vue({ data () { return data }, render (h) { return h(component, { props: this.$data }) }, }) } export default { created: function () { /* Check if the global container DOM code already exists, otherwise create it and safe reference in this.</description></item></channel></rss>