<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Thomas Weustenfeld</title><link>http://tw00.github.io/</link><description>Recent content on Thomas Weustenfeld</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 03 Feb 2020 00:11:00 -0400</lastBuildDate><atom:link href="http://tw00.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Announcing heliosRX</title><link>http://tw00.github.io/post/heliosrx/annoucement/</link><pubDate>Mon, 03 Feb 2020 00:11:00 -0400</pubDate><guid>http://tw00.github.io/post/heliosrx/annoucement/</guid><description>The future of the web is real-time. With Firebase Realtime Database Google offers a great product to write real-time web applications without the hassle of setting up an infrastructure yourself. Simply create a project and within minutes you will have your backend up and running and can start developing.
While getting started with Firebase is easy, you&amp;rsquo;ll soon run into some problems as your application is becoming increasingly more complex:</description></item><item><title/><link>http://tw00.github.io/til/2020-01-31/</link><pubDate>Fri, 31 Jan 2020 14:41:46 -0500</pubDate><guid>http://tw00.github.io/til/2020-01-31/</guid><description> Hugo / Go uses a very &amp;ldquo;interesting&amp;rdquo; way to format dates:
Jan 2 15:04:05 2006 MST =&amp;gt; 1 2 3 4 5 6 -7 There is a very handy tool to import markdown to medium: https://markdowntomedium.com/
Medium does not have code highlighing, but instead can import Gist&amp;rsquo;s</description></item><item><title/><link>http://tw00.github.io/til/2020-01-29/</link><pubDate>Wed, 29 Jan 2020 14:41:46 -0500</pubDate><guid>http://tw00.github.io/til/2020-01-29/</guid><description> Writing tests is actually not that difficult, got to 33% code coverage in 1 day cdnjs: For the new library request issue, please make sure it&amp;rsquo;s not a personal project, we have a basic requirement for the popularity, like 200 stars on GitHub or 800 downloads/month on npm registry.</description></item><item><title>Solving Optimization Problems with Chemotaxis</title><link>http://tw00.github.io/post/other/chemoxtaxis/</link><pubDate>Sun, 12 Jan 2020 00:19:27 -0400</pubDate><guid>http://tw00.github.io/post/other/chemoxtaxis/</guid><description>When I started my career as a control engineer, a very wise man once told me a little trick, how to solve almost any real-life optimization problem with an algorithm that is so simple that it just takes 6 lines of code and you can remember it for the rest of your life once you understand how it works.
I&amp;rsquo;ve since passed on this wisdom to almost all students I supervised and I find it so valuable that I will share it here.</description></item><item><title/><link>http://tw00.github.io/til/2019-12-01/</link><pubDate>Sun, 01 Dec 2019 00:00:00 -0400</pubDate><guid>http://tw00.github.io/til/2019-12-01/</guid><description>Good writing has:
Simplicity Clarity Elegance Evocativeness</description></item><item><title>JS Tip 01 - Minimalistic Logging</title><link>http://tw00.github.io/post/js-tips/js-tips-01-console-log/</link><pubDate>Mon, 04 Nov 2019 00:19:27 -0400</pubDate><guid>http://tw00.github.io/post/js-tips/js-tips-01-console-log/</guid><description>Real pro&amp;rsquo;s debug with console.log ;-)
So, here is a quick tip, how you can add logging to a JS script, with ZERO dependencies. Just define log as:
const log = (...args) =&amp;gt; console.log(&#39;[context]&#39;, ...args) To disable logging, change it to:
const log = () =&amp;gt; () or just uncomment it:
const log = (...args) =&amp;gt; () // console.log(&#39;[context]&#39;, ...args) also you can have log levels like this:</description></item><item><title/><link>http://tw00.github.io/til/2019-11-04/</link><pubDate>Mon, 04 Nov 2019 00:00:00 -0400</pubDate><guid>http://tw00.github.io/til/2019-11-04/</guid><description> When import ... from results in undefined in webpack, I probably have a circular dependency.
Data that will almost certainly be used in many places, should have a clear interface right from the beginning (goalMeta.getters)</description></item><item><title/><link>http://tw00.github.io/til/2019-11-01/</link><pubDate>Fri, 01 Nov 2019 00:00:00 -0400</pubDate><guid>http://tw00.github.io/til/2019-11-01/</guid><description> The law of demeter aka. &amp;ldquo;Only talk to your friends&amp;rdquo;</description></item><item><title/><link>http://tw00.github.io/til/2019-10-31/</link><pubDate>Thu, 31 Oct 2019 00:00:00 -0400</pubDate><guid>http://tw00.github.io/til/2019-10-31/</guid><description>SceneManager.LoadScene(&amp;quot;OtherSceneName&amp;quot;, LoadSceneMode.Additive); loads a seconds scene in unity, so level and logic can be seperated.
Microsoft Paint can actually be used as a level designer for unity.
Goalpilot does not manage goals, but tasks. It should actually help me stay on track.
Y-Combinator is named after the Y-Combinatator from Lambda calculus, which enables recursion (Y-Combinator is a company that creates companies.) It is:
Y := λg.(λx.g (x x)) (λx.</description></item><item><title/><link>http://tw00.github.io/til/2019-10-30/</link><pubDate>Wed, 30 Oct 2019 00:00:00 -0400</pubDate><guid>http://tw00.github.io/til/2019-10-30/</guid><description> Rather then writing a huge blog series, I should aim for &amp;lt; 15 min when writing an article.</description></item><item><title>About</title><link>http://tw00.github.io/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://tw00.github.io/about/</guid><description>Hi, my name is Thomas. I&amp;rsquo;m from Germany, but I moved to New York in 2018. I graduated with a master&amp;rsquo;s degree in electrical engineering and a Ph.D. in thermodynamics. Now, I mainly focus on building web applications and doing interesting things in the cloud.
A few things I&amp;rsquo;ve done so far are:
I worked on electric and fuel cell cars for 8 years, making them more efficient and thinking about the question of how energy should flow.</description></item><item><title>Academic work</title><link>http://tw00.github.io/work/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://tw00.github.io/work/</guid><description>Ph. D. Thesis Heiz- und Kühlkonzept für ein batterieelektrisches Fahrzeug basierend auf Sekundärkreisläufen (Sorry it&amp;rsquo;s written in german, but it has nice pictures) Publications [1] T. A. Weustenfeld, J. C. Menken, K. Strasser J. Köhler, “Central Thermal Management for Electric Vehicles using a fully integrated Primary Loop Refrigeration System”, at Thermal Management System Symposium, Denver, USA, 2014. [2] T. A. Weustenfeld, W. Bauer-Kugelmann, J. C. Menken, K.</description></item></channel></rss>